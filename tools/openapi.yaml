---
openapi: 3.0.3
info:
  title: VCell API
  description: VCell API
  termsOfService: Your terms of service here
  contact:
    name: VCell API Support
    url: http://exampleurl.com/contact
    email: vcell_support@uchc.com
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  version: 1.0.1
servers:
- url: https://vcell-dev.cam.uchc.edu
paths:
  /api/v1/Simulation/{simID}/simulationStatus:
    get:
      tags:
      - Simulation Resource
      summary: Get the status of simulation running
      operationId: getSimulationStatus
      parameters:
      - name: simID
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationStatusPersistentRecord'
        "403":
          description: Not Allowed
        "401":
          description: Not Authorized
      security:
      - openId:
        - user
  /api/v1/Simulation/{simID}/startSimulation:
    post:
      tags:
      - Simulation Resource
      summary: Start a simulation.
      operationId: startSimulation
      parameters:
      - name: simID
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatusMessage'
        "403":
          description: Not Allowed
        "401":
          description: Not Authorized
      security:
      - openId:
        - user
  /api/v1/Simulation/{simID}/stopSimulation:
    post:
      tags:
      - Simulation Resource
      summary: Stop a simulation.
      operationId: stopSimulation
      parameters:
      - name: simID
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatusMessage'
        "403":
          description: Not Allowed
        "401":
          description: Not Authorized
      security:
      - openId:
        - user
  /api/v1/admin/usage:
    get:
      tags:
      - Admin Resource
      summary: Get usage summary
      operationId: getUsage
      responses:
        "200":
          description: The PDF report
          content:
            application/pdf:
              schema:
                format: binary
                type: string
  /api/v1/bioModel/upload_bioModel:
    post:
      tags:
      - Bio Model Resource
      summary: Upload the BioModel to VCell database. Returns BioModel ID.
      operationId: uploadBioModel
      requestBody:
        content:
          text/xml:
            schema:
              type: string
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
        "403":
          description: Not Allowed
        "401":
          description: Not Authorized
      security:
      - openId:
        - user
  /api/v1/bioModel/{bioModelID}:
    get:
      tags:
      - Bio Model Resource
      summary: Get BioModel information in JSON format by ID.
      operationId: getBiomodelById
      parameters:
      - name: bioModelID
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BioModel'
        "403":
          description: Not Allowed
        "401":
          description: Not Authorized
      security:
      - openId:
        - user
    delete:
      tags:
      - Bio Model Resource
      summary: Delete the BioModel from VCell's database.
      operationId: deleteBioModel
      parameters:
      - name: bioModelID
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
  /api/v1/helloworld:
    get:
      tags:
      - Hello World
      summary: Get hello world message.
      operationId: getHelloWorld
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelloWorldMessage'
  /api/v1/publications:
    get:
      tags:
      - Publication Resource
      summary: Get all publications
      operationId: getPublications
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Publication'
    put:
      tags:
      - Publication Resource
      summary: Create publication
      operationId: updatePublication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
    post:
      tags:
      - Publication Resource
      summary: Create publication
      operationId: createPublication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                format: int64
                type: integer
  /api/v1/publications/{id}:
    get:
      tags:
      - Publication Resource
      summary: Get publication by ID
      operationId: getPublicationById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
    delete:
      tags:
      - Publication Resource
      summary: Delete publication
      operationId: deletePublication
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          description: No Content
  /api/v1/users/bearerToken:
    post:
      tags:
      - Users Resource
      summary: Get token for legacy API
      operationId: getLegacyApiToken
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccesTokenRepresentationRecord'
        "403":
          description: Not Allowed
        "401":
          description: Not Authorized
      security:
      - openId:
        - user
  /api/v1/users/forgotLegacyPassword:
    post:
      tags:
      - Users Resource
      summary: "The end user has forgotten the legacy password they used for VCell,\
        \ so they will be emailed it."
      operationId: forgotLegacyPassword
      parameters:
      - name: userID
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Legacy password sent in email
        "401":
          description: Need to login to Auth0
        "500":
          description: Internal Error
        "403":
          description: Not Allowed
      security:
      - openId:
        - user
  /api/v1/users/guestBearerToken:
    post:
      tags:
      - Users Resource
      summary: Method to get legacy tokens for guest users
      operationId: getGuestLegacyApiToken
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccesTokenRepresentationRecord'
  /api/v1/users/mapUser:
    post:
      tags:
      - Users Resource
      summary: map vcell user
      operationId: mapUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginInfoForMapping'
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: boolean
        "403":
          description: Not Allowed
        "401":
          description: Not Authorized
      security:
      - openId:
        - user
  /api/v1/users/mappedUser:
    get:
      tags:
      - Users Resource
      summary: Get mapped VCell identity
      operationId: getMappedUser
      responses:
        "200":
          description: "Successful, returning the identity"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentityJSONSafe'
        "404":
          description: Identity not found
        "403":
          description: Not Allowed
        "401":
          description: Not Authorized
      security:
      - openId:
        - user
  /api/v1/users/me:
    get:
      tags:
      - Users Resource
      summary: Get current user
      operationId: getMe
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
  /api/v1/users/newUser:
    post:
      tags:
      - Users Resource
      summary: create vcell user
      operationId: mapNewUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationInfo'
      responses:
        "200":
          description: "Successful, returning the identity"
        "409":
          description: "VCell Identity not mapped, userid already exists"
        "403":
          description: Not Allowed
        "401":
          description: Not Authorized
      security:
      - openId:
        - user
  /api/v1/users/unmapUser/{userName}:
    put:
      tags:
      - Users Resource
      summary: remove vcell identity mapping
      operationId: unmapUser
      parameters:
      - name: userName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
        "403":
          description: Not Allowed
        "401":
          description: Not Authorized
      security:
      - openId:
        - user
components:
  schemas:
    AccesTokenRepresentationRecord:
      type: object
      properties:
        token:
          type: string
        creationDateSeconds:
          format: int64
          type: integer
        expireDateSeconds:
          format: int64
          type: integer
        userId:
          type: string
        userKey:
          type: string
    Application:
      type: object
    BatchSystemType:
      enum:
      - PBS
      - SGE
      - SLURM
      type: string
    BioModel:
      type: object
      properties:
        bmKey:
          type: string
        name:
          type: string
        privacy:
          format: int32
          type: integer
        groupUsers:
          type: array
          items:
            type: string
        savedDate:
          format: int64
          type: integer
        annot:
          type: string
        branchID:
          type: string
        physModelKey:
          type: string
        ownerName:
          type: string
        ownerKey:
          type: string
        simulationKeyList:
          type: array
          items:
            $ref: '#/components/schemas/KeyValue'
        applications:
          type: array
          items:
            $ref: '#/components/schemas/Application'
    BiomodelRef:
      type: object
      properties:
        bmKey:
          format: int64
          type: integer
        name:
          type: string
        ownerName:
          type: string
        ownerKey:
          format: int64
          type: integer
        versionFlag:
          format: int32
          type: integer
    Date:
      format: date
      type: string
      example: 2022-03-10
    DetailedState:
      enum:
      - UNKNOWN
      - DATAMOVEREVENT_MOVED
      - WORKEREVENT_WORKERALIVE
      - JOB_WAITING
      - JOB_QUEUED
      - JOB_QUEUED_RETRY
      - JOB_DISPATCHED
      - JOB_ACCEPTED
      - SOLVER_READY
      - SOLVER_STARTING_INIT
      - SOLVEREVENT_STARTING_PROC_GEOM
      - SOLVEREVENT_STARTING_RESAMPLE_FD
      - SOLVER_RUNNING_INIT
      - SOLVER_RUNNING_INIT_INPUT_FILE
      - SOLVER_RUNNING_INIT_CODEGEN
      - SOLVER_RUNNING_INIT_COMPILING
      - SOLVER_RUNNING_INIT_COMPILECMD
      - SOLVER_RUNNING_INIT_COMPILE_OK
      - SOLVER_RUNNING_INIT_LINKING
      - SOLVER_RUNNING_INIT_LINKCMD
      - SOLVER_RUNNING_INIT_LINK_OK
      - SOLVER_RUNNING_INIT_COMPILELINK_OK
      - SOLVEREVENT_STARTING_INIT
      - SOLVEREVENT_STARTING_CODEGEN
      - SOLVEREVENT_STARTING_COMPILELINK
      - SOLVEREVENT_STARTING_INPUT_FILE
      - SOLVEREVENT_STARTING
      - SOLVEREVENT_STARTING_SUBMITTING
      - SOLVEREVENT_STARTING_SUBMITTED
      - WORKEREVENT_STARTING
      - SOLVEREVENT_RUNNING_START
      - SOLVER_RUNNING_START
      - JOB_RUNNING_UNKNOWN
      - SOLVEREVENT_PRINTED
      - WORKEREVENT_DATA
      - JOB_RUNNING
      - SOLVEREVENT_PROGRESS
      - WORKEREVENT_PROGRESS
      - WORKEREVENT_WORKEREXIT_NORMAL
      - WORKEREVENT_WORKEREXIT_ERROR
      - SOLVEREVENT_FINISHED
      - SOLVER_FINISHED
      - WORKEREVENT_COMPLETED
      - JOB_COMPLETED
      - SOLVER_STOPPED
      - JOB_STOPPED
      - JOB_FAILED_UNKNOWN
      - SOLVER_ABORTED
      - WORKEREVENT_FAILURE
      - JOB_FAILED
      type: string
    HelloWorldMessage:
      type: object
      properties:
        message:
          type: string
    HtcJobID:
      type: object
      properties:
        jobNumber:
          format: int64
          type: integer
        server:
          type: string
        batchSystemType:
          $ref: '#/components/schemas/BatchSystemType'
    Identity:
      type: object
      properties:
        principal_name:
          type: string
        roles:
          type: array
          items:
            type: string
        attributes:
          type: array
          items:
            type: string
        credentials:
          type: array
          items:
            type: string
    Instant:
      format: date-time
      type: string
      example: 2022-03-10T16:15:50Z
    KeyValue:
      type: object
      properties:
        value:
          type: number
    MathmodelRef:
      type: object
      properties:
        mmKey:
          format: int64
          type: integer
        name:
          type: string
        ownerName:
          type: string
        ownerKey:
          format: int64
          type: integer
        versionFlag:
          format: int32
          type: integer
    Publication:
      type: object
      properties:
        pubKey:
          format: int64
          type: integer
        title:
          type: string
        authors:
          type: array
          items:
            type: string
        year:
          format: int32
          type: integer
        citation:
          type: string
        pubmedid:
          type: string
        doi:
          type: string
        endnoteid:
          format: int32
          type: integer
        url:
          type: string
        wittid:
          format: int32
          type: integer
        biomodelRefs:
          type: array
          items:
            $ref: '#/components/schemas/BiomodelRef'
        mathmodelRefs:
          type: array
          items:
            $ref: '#/components/schemas/MathmodelRef'
        date:
          $ref: '#/components/schemas/Date'
    SchedulerStatus:
      enum:
      - WAITING
      - QUEUED
      - DISPATCHED
      - RUNNING
      - COMPLETED
      - STOPPED
      - FAILED
      type: string
    SimulationExecutionStatusRecord:
      type: object
      properties:
        fieldStartDate:
          $ref: '#/components/schemas/Instant'
        fieldLatestUpdateDate:
          $ref: '#/components/schemas/Instant'
        fieldEndDate:
          $ref: '#/components/schemas/Instant'
        fieldComputeHost:
          type: string
        fieldHasData:
          type: boolean
        fieldHtcJobID:
          $ref: '#/components/schemas/HtcJobID'
    SimulationJobStatusRecord:
      type: object
      properties:
        fieldTimeDataStamp:
          $ref: '#/components/schemas/Instant'
        fieldVCSimID:
          $ref: '#/components/schemas/VCSimulationIdentifier'
        fieldSubmitDate:
          $ref: '#/components/schemas/Instant'
        fieldSchedulerStatus:
          $ref: '#/components/schemas/SchedulerStatus'
        fieldSimulationMessage:
          $ref: '#/components/schemas/SimulationMessage'
        fieldTaskID:
          format: int32
          type: integer
        fieldServerID:
          type: string
        fieldJobIndex:
          format: int32
          type: integer
        fieldSimulationExecutionStatus:
          $ref: '#/components/schemas/SimulationExecutionStatusRecord'
        fieldSimulationQueueEntryStatus:
          $ref: '#/components/schemas/SimulationQueueEntryStatusRecord'
    SimulationMessage:
      type: object
      properties:
        detailedState:
          $ref: '#/components/schemas/DetailedState'
        message:
          type: string
        htcJobId:
          $ref: '#/components/schemas/HtcJobID'
        displayMessage:
          type: string
    SimulationQueueEntryStatusRecord:
      type: object
      properties:
        fieldQueuePriority:
          format: int32
          type: integer
        fieldQueueDate:
          $ref: '#/components/schemas/Instant'
        fieldQueueID:
          $ref: '#/components/schemas/SimulationQueueID'
    SimulationQueueID:
      enum:
      - QUEUE_ID_WAITING
      - QUEUE_ID_SIMULATIONJOB
      - QUEUE_ID_NULL
      type: string
    SimulationStatusPersistentRecord:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        progressHash:
          type: object
          additionalProperties:
            format: double
            type: number
        details:
          type: string
        hasData:
          type: boolean
    Status:
      enum:
      - UNKNOWN
      - NEVER_RAN
      - START_REQUESTED
      - DISPATCHED
      - WAITING
      - QUEUED
      - RUNNING
      - COMPLETED
      - FAILED
      - STOP_REQUESTED
      - STOPPED
      - NOT_SAVED
      type: string
    StatusMessage:
      type: object
      properties:
        jobStatus:
          $ref: '#/components/schemas/SimulationJobStatusRecord'
        userName:
          type: string
        progress:
          format: double
          type: number
        timepoint:
          format: double
          type: number
    User:
      type: object
      properties:
        userName:
          type: string
        key:
          $ref: '#/components/schemas/KeyValue'
        iD:
          $ref: '#/components/schemas/KeyValue'
        name:
          type: string
        testAccount:
          type: boolean
    UserIdentityJSONSafe:
      type: object
      properties:
        userName:
          type: string
        id:
          type: number
        subject:
          type: string
        insertDate:
          type: string
    UserLoginInfoForMapping:
      type: object
      properties:
        userID:
          type: string
        password:
          type: string
    UserRegistrationInfo:
      type: object
      properties:
        userID:
          type: string
        title:
          type: string
        organization:
          type: string
        country:
          type: string
        emailNotification:
          type: boolean
    VCSimulationIdentifier:
      type: object
      properties:
        simulationKey:
          $ref: '#/components/schemas/KeyValue'
        owner:
          $ref: '#/components/schemas/User'
        iD:
          type: string
  securitySchemes:
    openId:
      type: openIdConnect
      description: Authentication
      openIdConnectUrl: https://dev-dzhx7i2db3x3kkvq.us.auth0.com/.well-known/openid-configuration
