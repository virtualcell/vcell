---
openapi: 3.0.3
info:
  title: VCell API (development)
  description: VCell API
  termsOfService: Your terms of service here
  contact:
    name: VCell API Support
    url: http://exampleurl.com/contact
    email: vcell_support@uchc.com
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  version: 1.0.1
servers:
- url: http://localhost:9000
paths:
  /api/bioModel/upload_bioModel:
    post:
      tags:
      - Bio Model Resource
      summary: Upload the BioModel to VCell database. Returns BioModel ID.
      operationId: uploadBioModel
      requestBody:
        content:
          text/xml:
            schema:
              type: string
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /api/bioModel/{bioModelID}:
    get:
      tags:
      - Bio Model Resource
      summary: Get BioModel information in JSON format by ID.
      operationId: getBiomodelById
      parameters:
      - name: bioModelID
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BioModel'
    delete:
      tags:
      - Bio Model Resource
      summary: Delete the BioModel from VCell's database.
      operationId: deleteBioModel
      parameters:
      - name: bioModelID
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
  /api/bioModel/{bioModelID}/bngl_download:
    get:
      tags:
      - Bio Model Resource
      summary: Get the BioModel in BNGL format.
      operationId: getBioModelBNGL
      parameters:
      - name: bioModelID
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
  /api/bioModel/{bioModelID}/diagram_download:
    get:
      tags:
      - Bio Model Resource
      summary: Get the BioModels diagram.
      operationId: getBioModelDIAGRAM
      parameters:
      - name: bioModelID
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
  /api/bioModel/{bioModelID}/omex_download:
    get:
      tags:
      - Bio Model Resource
      summary: Get the BioModel in OMEX format.
      operationId: getBioModelOMEX
      parameters:
      - name: bioModelID
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
  /api/bioModel/{bioModelID}/sbml_download:
    get:
      tags:
      - Bio Model Resource
      summary: Get the BioModel in SBML format.
      operationId: getBioModelSBML
      parameters:
      - name: bioModelID
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
  /api/bioModel/{bioModelID}/vcml_download:
    get:
      tags:
      - Bio Model Resource
      summary: Get the BioModel in VCML format.
      operationId: getBioModelVCML
      parameters:
      - name: bioModelID
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
  /api/helloworld:
    get:
      tags:
      - Hello World
      summary: Get hello world message.
      operationId: getHelloWorld
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelloWorldMessage'
  /api/publications:
    get:
      tags:
      - Publication Resource
      summary: Get all publications
      operationId: getPublications
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Publication'
    put:
      tags:
      - Publication Resource
      summary: Create publication
      operationId: updatePublication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
        "403":
          description: Not Allowed
        "401":
          description: Not Authorized
      security:
      - openId:
        - curator
    post:
      tags:
      - Publication Resource
      summary: Create publication
      operationId: createPublication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                format: int64
                type: integer
        "403":
          description: Not Allowed
        "401":
          description: Not Authorized
      security:
      - openId:
        - curator
  /api/publications/{id}:
    get:
      tags:
      - Publication Resource
      summary: Get publication by ID
      operationId: getPublicationById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
    delete:
      tags:
      - Publication Resource
      summary: Delete publication
      operationId: deletePublication
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          description: No Content
        "403":
          description: Not Allowed
        "401":
          description: Not Authorized
      security:
      - openId:
        - curator
  /api/users/bearerToken:
    post:
      tags:
      - Users Resource
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                user_password:
                  type: string
                client_id:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccesTokenRepresentationRecord'
  /api/users/getIdentity:
    get:
      tags:
      - Users Resource
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentityJSONSafe'
        "403":
          description: Not Allowed
        "401":
          description: Not Authorized
      security:
      - openId:
        - user
  /api/users/mapUser:
    post:
      tags:
      - Users Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapUser'
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: boolean
        "403":
          description: Not Allowed
        "401":
          description: Not Authorized
      security:
      - openId:
        - user
  /api/users/me:
    get:
      tags:
      - Users Resource
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    AccesTokenRepresentationRecord:
      type: object
      properties:
        token:
          type: string
        creationDateSeconds:
          format: int64
          type: integer
        expireDateSeconds:
          format: int64
          type: integer
        userId:
          type: string
        userKey:
          type: string
    Application:
      type: object
    BioModel:
      type: object
      properties:
        bmKey:
          type: string
        name:
          type: string
        privacy:
          format: int32
          type: integer
        groupUsers:
          type: array
          items:
            type: string
        savedDate:
          format: int64
          type: integer
        annot:
          type: string
        branchID:
          type: string
        modelKey:
          type: string
        ownerName:
          type: string
        ownerKey:
          type: string
        simulations:
          type: array
          items:
            $ref: '#/components/schemas/Simulation'
        applications:
          type: array
          items:
            $ref: '#/components/schemas/Application'
    BiomodelRef:
      type: object
      properties:
        bmKey:
          format: int64
          type: integer
        name:
          type: string
        ownerName:
          type: string
        ownerKey:
          format: int64
          type: integer
        versionFlag:
          format: int32
          type: integer
    Date:
      format: date
      type: string
      example: 2022-03-10
    HelloWorldMessage:
      type: object
      properties:
        message:
          type: string
    MapUser:
      type: object
      properties:
        userID:
          type: string
        password:
          type: string
    MathmodelRef:
      type: object
      properties:
        mmKey:
          format: int64
          type: integer
        name:
          type: string
        ownerName:
          type: string
        ownerKey:
          format: int64
          type: integer
        versionFlag:
          format: int32
          type: integer
    Publication:
      type: object
      properties:
        pubKey:
          format: int64
          type: integer
        title:
          type: string
        authors:
          type: array
          items:
            type: string
        year:
          format: int32
          type: integer
        citation:
          type: string
        pubmedid:
          type: string
        doi:
          type: string
        endnoteid:
          format: int32
          type: integer
        url:
          type: string
        wittid:
          format: int32
          type: integer
        biomodelRefs:
          type: array
          items:
            $ref: '#/components/schemas/BiomodelRef'
        mathmodelRefs:
          type: array
          items:
            $ref: '#/components/schemas/MathmodelRef'
        date:
          $ref: '#/components/schemas/Date'
    Simulation:
      type: object
      properties:
        name:
          type: string
    User:
      type: object
      properties:
        principal_name:
          type: string
        roles:
          type: array
          items:
            type: string
        attributes:
          type: array
          items:
            type: string
        credentials:
          type: array
          items:
            type: string
    UserIdentityJSONSafe:
      type: object
      properties:
        userName:
          type: string
        id:
          type: number
        subject:
          type: string
        insertDate:
          type: string
  securitySchemes:
    openId:
      type: openIdConnect
      description: Authentication
      openIdConnectUrl: https://dev-dzhx7i2db3x3kkvq.us.auth0.com/.well-known/openid-configuration
