-- Generated by Ora2Pg, the Oracle database Schema converter, version 24.3
-- Copyright 2000-2024 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=vcell-oracle.cam.uchc.edu;service_name=ORCLPDB1;port=1521

SET client_encoding TO 'UTF8';

SET search_path = vcell,public;
\set ON_ERROR_STOP ON

DROP TRIGGER IF EXISTS tc_lock_trig ON vc_tftestcase CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_tc_lock_trig() RETURNS trigger AS $BODY$
DECLARE
PRAGMA AUTONOMOUS_TRANSACTION;
testsuiteid bigint;
lockState bigint;
BEGIN
  BEGIN

IF TG_OP = 'INSERT' THEN
testsuiteid :=NEW.testsuiteref;
ELSIF TG_OP = 'UPDATE' THEN
testsuiteid :=OLD.testsuiteref;
ELSIF TG_OP = 'DELETE' THEN
testsuiteid :=OLD.testsuiteref;
END IF;

   select vc_tftestsuite.islocked
   into STRICT lockstate
   from vc_tftestsuite
   where vc_tftestsuite.id = testsuiteid;

   if
   	 lockstate != 0
   then
   	   RAISE EXCEPTION '%', 'Test Suite locked' USING ERRCODE = '45100';
   end if;

  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_tc_lock_trig() FROM PUBLIC;

CREATE TRIGGER tc_lock_trig
	BEFORE INSERT OR UPDATE OR DELETE ON vc_tftestcase 
 FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_tc_lock_trig();

