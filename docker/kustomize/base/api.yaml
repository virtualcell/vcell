apiVersion: v1
kind: Service
metadata:
  labels:
    app: api
  name: api-service
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 80
    - name: "8000"
      port: 8000
      targetPort: 8000
  selector:
    app: api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      imagePullSecrets:
        - name: dockerconfigjson-github-com
      containers:
        - env:
            - name: dbuser
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: database-creds
            - name: dbpswdfile
              value: /var/secrets/database-password
            # - name: vcell.server.dbPassword
            #   valueFrom:
            #     secretKeyRef:
            #       key: database-password
            #       name: database-creds
            - name: dbdriver
              valueFrom:
                configMapKeyRef:
                  key: database-driver
                  name: vcell-config
            - name: dburl
              valueFrom:
                configMapKeyRef:
                  key: database-url
                  name: vcell-config
            - name: jmshost_int_internal
              value: activemqint
            - name: jmsport_int_internal
              value: "61616"
            - name: jmsuser
              value: clientUser
            - name: mongodb_database
              value: test
            - name: mongodb_host_internal
              value: mongodb
            - name: mongodb_port_internal
              value: "27017"
            - name: serverid
            - name: smtp_emailaddress
            - name: smtp_hostname
            - name: smtp_port
            - name: softwareVersion
          image:
            "ghcr.io/modeltwice-llc/vcell-api:latest"
          name: api
          ports:
            - containerPort: 80
            - containerPort: 8000
          volumeMounts:
            - name: database-creds
              mountPath: "/var/secrets/database-password"
              subPath: database-password
              readOnly: true
          resources:
            limits:
              memory: "1024Mi"
              cpu: "250m"
            requests:
              memory: "256Mi"
      volumes:
      - name: database-creds
        secret:
          secretName: database-creds
          items:
            - key: database-password
              path: database-password
      restartPolicy: Always
