apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: data
  name: data
spec:
  selector:
    matchLabels:
      app: data
  replicas: 0
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: data
    spec:
      securityContext:
        runAsUser: 10001
        runAsGroup: 10000
        fsGroup: 10000
      containers:
        - name: data
          image: ghcr.io/virtualcell/vcell-data
          imagePullPolicy: "Always"
          resources:
            requests:
              memory: "250Mi"
              cpu: "200m"
            limits:
              memory: "3000Mi"
#              cpu: "500m"
          envFrom:
            - configMapRef:
                name: data-config
          #          command: [ "/bin/sh", "-c", "env; cat /run/secrets/api-secrets/dbpswd" ]
          env:
            - name: jmspswdfile
              value: "/run/secrets/api-secrets/jmspswd"
            - name: dbpswdfile
              value: "/run/secrets/api-secrets/dbpswd"
          ports:
            - containerPort: 8000
          volumeMounts:
            - name: api-secrets
              mountPath: /run/secrets/api-secrets

            - name: nfs-primary-pvc
              mountPath: /n5DataDir
              subPath: n5
            - name: nfs-primary-pvc
              mountPath: /exportdir
              subPath: export
            - name: nfs-primary-pvc
              mountPath: /simdata
              subPath: users
            - name: nfs-archive-pvc
              mountPath: /share/apps/vcell12/users
              subPath: users
#            - name: nfs-secondary-pvc
#              mountPath: /simdata_secondary
#              subPath: users
      restartPolicy: Always
      imagePullSecrets:
        - name: ghcr-secret
      volumes:
        - name: api-secrets
          secret:
            items:
              - key: dbpswd
                path: dbpswd
              - key: jmspswd
                path: jmspswd
            secretName: api-secrets
        - name: nfs-primary-pvc
          persistentVolumeClaim:
            claimName: nfs-primary-pvc
        - name: nfs-archive-pvc
          persistentVolumeClaim:
            claimName: nfs-archive-pvc
#        - name: nfs-secondary-pvc
#          persistentVolumeClaim:
#            claimName: nfs-secondary-pvc

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: data
  name: data
spec:
  ports:
    - name: "5002"
      port: 5002
      targetPort: 8000
  selector:
    app: data
