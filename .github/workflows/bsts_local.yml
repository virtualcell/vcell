name: BSTS local
# derived from https://raw.githubusercontent.com/biosimulators/Biosimulators/dev/.github/workflows/validateCommitSimulator.yml
on:
  workflow_dispatch:
    inputs:
      biosimulators_vcell_tag:
        description: 'version.major.minor.patch'
        required: true
        default: '7.5.0.127'
#      vcell_build:
#        description: 'build number'
#        required: true
#        default: '23'
#      vcell_site:
#        description: 'rel or alpha'
#        required: true
#        default: 'alpha'
#      server_only:
#        description: 'Deploy only the server components?'
#        required: true
#        default: 'false'

jobs:
  validateCommit:
    name: Validate and/or commit simulator
    runs-on: ubuntu-22.04 # includes Docker
    steps:
      - name: Install Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'

      - name: Install pip and setuptools
        run: |
          python -m pip install --upgrade setuptools
          # wget https://bootstrap.pypa.io/get-pip.py
          # python get-pip.py pip==20.3.4
          python -m pip install pip==20.3.4

      - name: Install Java # for pyNeuroML
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '15'

      - name: Install Perl # for BioNetGen
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends perl

      - name: Install XPP
        run: |
          sudo apt-get install -y --no-install-recommends xppaut

      - name: Install Go (for Singularity)
        uses: actions/setup-go@v3
        with:
          go-version: '^1.13.1' # The Go version to download (if necessary) and use.

      - name: Install Singularity # to validate that the Docker image can be converted into a Singularity image
        env:
          GO_VERSION: 1.17.2
          SINGULARITY_VERSION: 3.9.5
          OS: linux
          ARCH: amd64
        run: |
          sudo apt-get install -y --no-install-recommends \
            build-essential \
            libseccomp-dev \
            pkg-config \
            squashfs-tools \
            cryptsetup

          wget https://dl.google.com/go/go$GO_VERSION.$OS-$ARCH.tar.gz
          sudo tar -C /usr/local -xzvf go$GO_VERSION.$OS-$ARCH.tar.gz
          rm go$GO_VERSION.$OS-$ARCH.tar.gz

          echo 'export PATH=/usr/local/go/bin:$PATH' >> ~/.bashrc
          source ~/.bashrc
          echo "/usr/local/go/bin" >> $GITHUB_PATH

          wget https://github.com/sylabs/singularity/releases/download/v${SINGULARITY_VERSION}/singularity-ce-${SINGULARITY_VERSION}.tar.gz
          tar -xzf singularity-ce-${SINGULARITY_VERSION}.tar.gz
          cd singularity-ce-${SINGULARITY_VERSION}

          ./mconfig
          make -C builddir
          sudo make -C builddir install

      - name: checkout vcell
        uses: actions/checkout@v3

      - name: Login into Docker registries
        run: |
          # VCell Docker registry (GHCR)
          echo ${{ secrets.ACTION_TOKEN }} | docker login ghcr.io -u ${{ secrets.ACTION_USER }} --password-stdin

      - name: configure biosimulations.json
        working-directory: ${{ github.workspace }}
        run: |
          docker pull ghcr.io/virtualcell/biosimulators_vcell:${{ github.event.inputs.biosimulators_vcell_tag }}
          IMAGE_DIGEST=$(docker image inspect ghcr.io/virtualcell/biosimulators_vcell:${{ github.event.inputs.biosimulators_vcell_tag }} | jq -r '.[0].RepoDigests[0]' | cut -d "@" -f 2-)
          sed -i "s/_VC_DIGEST_TAG_/${IMAGE_DIGEST}/g" biosimulators.json
          sed -i 's/_VC_VERSION_TAG_/${{github.event.inputs.biosimulators_vcell_tag}}/g' biosimulators.json

      - name: save updated biosimulators.json
        uses: actions/upload-artifact@v2
        with:
          name: biosimulators.json
          path: ${{ github.workspace }}/biosimulators.json
          overwrite: true

      - name: Checkout BioSimulators test suite
        uses: actions/checkout@v3
        with:
          repository: biosimulators/biosimulators_test_suite
          fetch-depth: 1
          ref: depFixes

      - name: retrieve updated biosimulators.json
        uses: actions/download-artifact@v2
        with:
          name: biosimulators.json
          path: ${{ github.workspace }}

      - name: Install simulator validation utilities
        working-directory: ${{ github.workspace }}
        run: |
          # python -m pip cache purge
          # python -m pip install --no-cache-dir "biosimulators_utils @ git+https://github.com/biosimulators/Biosimulators_utils@depFixes#egg=biosimulators_utils[containers,sbml]"
          # python -m pip install git+https://github.com/biosimulators/RBApy.git#egg=rbapy
          python -m pip install docker python-libsbml "urllib3<2.0"
          python -m pip install -e .[all]
          python --version
          python -m pip freeze

      - id: validateCommitSimulator
        name: Validate and commit simulator
        uses: GabrielBB/xvfb-action@v1
        env:
          GH_REPO: ${{ github.repository }}
          GH_ACTION_RUN_ID: ${{ github.run_id }}
          GH_ISSUE_NUMBER: ${{ github.event.issue.number }}
          GH_ISSUES_USER: ${{ secrets.GH_ISSUES_USER }}
          GH_ISSUES_ACCESS_TOKEN: ${{ secrets.GH_ISSUES_ACCESS_TOKEN }}

          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}

          DOCKER_REGISTRY_URL: ${{ secrets.DOCKER_REGISTRY_URL }}
          DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          DOCKER_REGISTRY_TOKEN: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

          BIOSIMULATORS_API_CLIENT_ID: ${{ secrets.BIOSIMULATORS_API_CLIENT_ID }}
          BIOSIMULATORS_API_CLIENT_SECRET: ${{ secrets.BIOSIMULATORS_API_CLIENT_SECRET }}
          # BIOSIMULATORS_API_ENDPOINT: https://api.biosimulators.dev/ # uncomment to use the dev deployment of the BioSimulators API

          RUNBIOSIMULATIONS_API_CLIENT_ID: ${{ secrets.RUNBIOSIMULATIONS_API_CLIENT_ID }}
          RUNBIOSIMULATIONS_API_CLIENT_SECRET: ${{ secrets.RUNBIOSIMULATIONS_API_CLIENT_SECRET }}
          # RUNBIOSIMULATIONS_API_ENDPOINT: https://api.biosimulations.dev/ # uncomment to use the dev deployment of the BioSimulators API
        with:
          working-directory: ${{ github.workspace }}
          run: |
            python -m pip install --upgrade biosimulators_utils
            biosimulators-test-suite --verbose biosimulators.json

      - name: Setup tmate session 3 (if failed)
        uses: mxschmitt/action-tmate@v3
        if: ${{ failure() }}
        timeout-minutes: 40

      - name: Save test results
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: Validation test results
          path: ${{ github.workspace }}/.biosimulators-test-suite-results.json
          if-no-files-found: warn