#!/usr/bin/bash
#SBATCH --partition=vcell
#SBATCH --reservation=
#SBATCH --qos=vcell
#SBATCH -J V_REL_999999999_0_0
#SBATCH -o /share/apps/vcell3/htclogs/V_REL_999999999_0_0.slurm.log
#SBATCH -e /share/apps/vcell3/htclogs/V_REL_999999999_0_0.slurm.log
#SBATCH --mem=4096M
#SBATCH --ntasks=100
#SBATCH --time=24:00:00
#SBATCH --no-kill
#SBATCH --no-requeue

log_file="/share/apps/vcell3/htclogs/V_REL_999999999_0_0.log"
total_jobs=1000
timeout_duration="23:00:00"
TMPDIR=/scratch/vcell

if [ ! -e $TMPDIR ]; then mkdir -p $TMPDIR ; fi
echo `hostname`
export MODULEPATH=/isg/shared/modulefiles:/tgcapps/modulefiles
source /usr/share/Modules/init/bash
module load singularity/vcell-3.10.0
export SINGULARITY_CACHEDIR=/share/apps/vcell3/singularity/cachdir
export SINGULARITY_PULLFOLDER=/share/apps/vcell3/singularity/pullfolder
echo "job running on host `hostname -f`"
echo "id is `id`"
echo ENVIRONMENT
env

container_bindings="--bind /share/apps/vcell3/users:/simdata "
container_bindings+="--bind /share/apps/vcell7/users:/simdata_secondary "
container_bindings+="--bind /share/apps/vcell12/users:/share/apps/vcell12/users "
container_bindings+="--bind /share/apps/vcell3/htclogs:/htclogs "
container_bindings+="--bind /scratch/vcell:/solvertmp "
container_env="--env java_mem_Xmx=4096M "
container_env+="--env jmshost_sim_internal=rke-wn-01.cam.uchc.edu "
container_env+="--env jmsport_sim_internal=31618 "
container_env+="--env jmsrestport_sim_internal=30163 "
container_env+="--env jmsuser=clientUser "
container_env+="--env jmspswd=dummy "
container_env+="--env jmsblob_minsize=100000 "
container_env+="--env mongodbhost_internal=rke-wn-01.cam.uchc.edu "
container_env+="--env mongodbport_internal=30019 "
container_env+="--env mongodb_database=test "
container_env+="--env primary_datadir_external=/share/apps/vcell3/users "
container_env+="--env secondary_datadir_external=/share/apps/vcell7/users "
container_env+="--env htclogdir_external=/share/apps/vcell3/htclogs "
container_env+="--env softwareVersion=Rel_Version_7.6.0_build_28 "
container_env+="--env serverid=REL "
solver_docker_name=ghcr.io/virtualcell/vcell-batch:7.6.0.43
solver_container_prefix="singularity run --containall ${container_bindings} ${container_env} docker://${solver_docker_name}"
batch_docker_name=ghcr.io/virtualcell/vcell-batch:7.6.0.43
batch_container_prefix="singularity run --containall ${container_bindings} ${container_env} docker://${batch_docker_name}"

# logging
echo "job execution log" > $log_file
echo "------------------" >> $log_file

declare -A job_pid_map
job_pids=()
running_jobs=0

for i in $(seq 0 $((total_jobs - 1))); do
    echo "job $i started at $(date)" >> $log_file
    timeout $timeout_duration srun -N 1 -n 1 -c 1 ./subscript.sh $i dynamic.langevinInput &
    pid=$!
    job_pids+=($pid)
    job_pid_map[$pid]=$i
    ((running_jobs++))

    if (( (i + 1) % SLURM_NTASKS == 0 || i == total_jobs - 1 )); then
        echo "waiting for jobs to finish at $(date)" >> $log_file

        for pid in "${job_pids[@]}"; do
            wait $pid
            exit_code=$?
            job_index=${job_pid_map[$pid]}
            echo "job $job_index with pid $pid finished with exit code $exit_code at $(date)" >> $log_file
        done

        job_pids=()
        job_pid_map=()
    fi
done

echo "starting the last job at $(date)" >> $log_file
timeout $timeout_duration srun -N 1 -n 1 -c 1 ./last.sh &
last_pid=$!
wait $last_pid
exit_code=$?
echo "job 'last' with pid $last_pid finished with exit code $exit_code at $(date)" >> $log_file
echo "the final job finished at $(date)" >> $log_file
echo "all jobs completed at $(date)" >> $log_file
echo "end script" >> $log_file
