openapi: 3.0.3
info:
  contact:
    email: vcell_support@uchc.com
    name: VCell API Support
    url: http://exampleurl.com/contact
  description: VCell API
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  termsOfService: Your terms of service here
  title: VCell API
  version: 1.0.1
servers:
- url: https://vcellapi-test.cam.uchc.edu
paths:
  /api/v1/bioModel/upload_bioModel:
    post:
      operationId: uploadBioModel
      requestBody:
        content:
          text/xml:
            schema:
              type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
      summary: Upload the BioModel to VCell database. Returns BioModel ID.
      tags:
      - Bio Model Resource
      x-content-type: text/xml
      x-accepts: text/plain
  /api/v1/bioModel/{bioModelID}:
    delete:
      operationId: deleteBioModel
      parameters:
      - explode: false
        in: path
        name: bioModelID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete the BioModel from VCell's database.
      tags:
      - Bio Model Resource
      x-accepts: application/json
    get:
      operationId: getBiomodelById
      parameters:
      - explode: false
        in: path
        name: bioModelID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BioModel'
          description: OK
      summary: Get BioModel information in JSON format by ID.
      tags:
      - Bio Model Resource
      x-accepts: application/json
  /api/v1/helloworld:
    get:
      operationId: getHelloWorld
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelloWorldMessage'
          description: OK
      summary: Get hello world message.
      tags:
      - Hello World
      x-accepts: application/json
  /api/v1/publications:
    get:
      operationId: getPublications
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Publication'
                type: array
          description: OK
      summary: Get all publications
      tags:
      - Publication Resource
      x-accepts: application/json
    post:
      operationId: createPublication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int64
                type: integer
          description: OK
        "403":
          description: Not Allowed
        "401":
          description: Not Authorized
      security:
      - openId:
        - curator
      summary: Create publication
      tags:
      - Publication Resource
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: updatePublication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
          description: OK
        "403":
          description: Not Allowed
        "401":
          description: Not Authorized
      security:
      - openId:
        - curator
      summary: Create publication
      tags:
      - Publication Resource
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/publications/{id}:
    delete:
      operationId: deletePublication
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          description: Not Allowed
        "401":
          description: Not Authorized
      security:
      - openId:
        - curator
      summary: Delete publication
      tags:
      - Publication Resource
      x-accepts: application/json
    get:
      operationId: getPublicationById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
          description: OK
      summary: Get publication by ID
      tags:
      - Publication Resource
      x-accepts: application/json
  /api/v1/users/bearerToken:
    post:
      operationId: getLegacyApiToken
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccesTokenRepresentationRecord'
          description: OK
      summary: Get token for legacy API
      tags:
      - Users Resource
      x-accepts: application/json
  /api/v1/users/getIdentity:
    get:
      operationId: getVCellIdentity
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentityJSONSafe'
          description: OK
        "403":
          description: Not Allowed
        "401":
          description: Not Authorized
      security:
      - openId:
        - user
      summary: Get mapped VCell identity
      tags:
      - Users Resource
      x-accepts: application/json
  /api/v1/users/mapUser:
    post:
      operationId: setVCellIdentity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapUser'
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: boolean
          description: OK
        "403":
          description: Not Allowed
        "401":
          description: Not Authorized
      security:
      - openId:
        - user
      summary: set or replace vcell identity mapping
      tags:
      - Users Resource
      x-content-type: application/json
      x-accepts: text/plain
  /api/v1/users/me:
    get:
      operationId: getMe
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
      summary: Get current user
      tags:
      - Users Resource
      x-accepts: application/json
components:
  schemas:
    AccesTokenRepresentationRecord:
      example:
        creationDateSeconds: 0
        userId: userId
        expireDateSeconds: 6
        userKey: userKey
        token: token
      properties:
        token:
          type: string
        creationDateSeconds:
          format: int64
          type: integer
        expireDateSeconds:
          format: int64
          type: integer
        userId:
          type: string
        userKey:
          type: string
      type: object
    Application:
      type: object
    BioModel:
      example:
        branchID: branchID
        bmKey: bmKey
        ownerName: ownerName
        name: name
        privacy: 0
        groupUsers:
        - groupUsers
        - groupUsers
        annot: annot
        ownerKey: ownerKey
        savedDate: 6
        modelKey: modelKey
        simulations:
        - name: name
        - name: name
        applications:
        - null
        - null
      properties:
        bmKey:
          type: string
        name:
          type: string
        privacy:
          format: int32
          type: integer
        groupUsers:
          items:
            type: string
          type: array
        savedDate:
          format: int64
          type: integer
        annot:
          type: string
        branchID:
          type: string
        modelKey:
          type: string
        ownerName:
          type: string
        ownerKey:
          type: string
        simulations:
          items:
            $ref: '#/components/schemas/Simulation'
          type: array
        applications:
          items:
            $ref: '#/components/schemas/Application'
          type: array
      type: object
    BiomodelRef:
      example:
        bmKey: 5
        ownerName: ownerName
        name: name
        versionFlag: 7
        ownerKey: 2
      properties:
        bmKey:
          format: int64
          type: integer
        name:
          type: string
        ownerName:
          type: string
        ownerKey:
          format: int64
          type: integer
        versionFlag:
          format: int32
          type: integer
      type: object
    Date:
      example: 2022-03-10
      format: date
      type: string
    HelloWorldMessage:
      example:
        message: message
      properties:
        message:
          type: string
      type: object
    MapUser:
      example:
        password: password
        userID: userID
      properties:
        userID:
          type: string
        password:
          type: string
      type: object
    MathmodelRef:
      example:
        ownerName: ownerName
        name: name
        versionFlag: 2
        mmKey: 9
        ownerKey: 3
      properties:
        mmKey:
          format: int64
          type: integer
        name:
          type: string
        ownerName:
          type: string
        ownerKey:
          format: int64
          type: integer
        versionFlag:
          format: int32
          type: integer
      type: object
    Publication:
      example:
        date: 2022-03-10T00:00:00.000+00:00
        wittid: 5
        year: 6
        citation: citation
        title: title
        biomodelRefs:
        - bmKey: 5
          ownerName: ownerName
          name: name
          versionFlag: 7
          ownerKey: 2
        - bmKey: 5
          ownerName: ownerName
          name: name
          versionFlag: 7
          ownerKey: 2
        pubmedid: pubmedid
        url: url
        mathmodelRefs:
        - ownerName: ownerName
          name: name
          versionFlag: 2
          mmKey: 9
          ownerKey: 3
        - ownerName: ownerName
          name: name
          versionFlag: 2
          mmKey: 9
          ownerKey: 3
        pubKey: 0
        authors:
        - authors
        - authors
        doi: doi
        endnoteid: 1
      properties:
        pubKey:
          format: int64
          type: integer
        title:
          type: string
        authors:
          items:
            type: string
          type: array
        year:
          format: int32
          type: integer
        citation:
          type: string
        pubmedid:
          type: string
        doi:
          type: string
        endnoteid:
          format: int32
          type: integer
        url:
          type: string
        wittid:
          format: int32
          type: integer
        biomodelRefs:
          items:
            $ref: '#/components/schemas/BiomodelRef'
          type: array
        mathmodelRefs:
          items:
            $ref: '#/components/schemas/MathmodelRef'
          type: array
        date:
          example: 2022-03-10
          format: date
          type: string
      type: object
    Simulation:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    User:
      example:
        credentials:
        - credentials
        - credentials
        roles:
        - roles
        - roles
        principal_name: principal_name
        attributes:
        - attributes
        - attributes
      properties:
        principal_name:
          type: string
        roles:
          items:
            type: string
          type: array
        attributes:
          items:
            type: string
          type: array
        credentials:
          items:
            type: string
          type: array
      type: object
    UserIdentityJSONSafe:
      example:
        subject: subject
        insertDate: insertDate
        id: 0.8008281904610115
        userName: userName
      properties:
        userName:
          type: string
        id:
          type: number
        subject:
          type: string
        insertDate:
          type: string
      type: object
  securitySchemes:
    openId:
      description: Authentication
      openIdConnectUrl: https://dev-dzhx7i2db3x3kkvq.us.auth0.com/.well-known/openid-configuration
      type: openIdConnect

