/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.vcell.restclient.model.BioModelSummary;
import org.vcell.restclient.model.GeometrySummary;
import org.vcell.restclient.model.MathModelSummary;
import org.vcell.restclient.model.VCImageSummary;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * VCellSummaryContainer
 */
@JsonPropertyOrder({
  VCellSummaryContainer.JSON_PROPERTY_IMAGE_SUMMARIES,
  VCellSummaryContainer.JSON_PROPERTY_GEOMETRY_SUMMARIES,
  VCellSummaryContainer.JSON_PROPERTY_MATH_MODEL_SUMMARIES,
  VCellSummaryContainer.JSON_PROPERTY_BIO_MODEL_SUMMARIES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class VCellSummaryContainer {
  public static final String JSON_PROPERTY_IMAGE_SUMMARIES = "imageSummaries";
  private List<VCImageSummary> imageSummaries;

  public static final String JSON_PROPERTY_GEOMETRY_SUMMARIES = "geometrySummaries";
  private List<GeometrySummary> geometrySummaries;

  public static final String JSON_PROPERTY_MATH_MODEL_SUMMARIES = "mathModelSummaries";
  private List<MathModelSummary> mathModelSummaries;

  public static final String JSON_PROPERTY_BIO_MODEL_SUMMARIES = "bioModelSummaries";
  private List<BioModelSummary> bioModelSummaries;

  public VCellSummaryContainer() { 
  }

  public VCellSummaryContainer imageSummaries(List<VCImageSummary> imageSummaries) {
    this.imageSummaries = imageSummaries;
    return this;
  }

  public VCellSummaryContainer addImageSummariesItem(VCImageSummary imageSummariesItem) {
    if (this.imageSummaries == null) {
      this.imageSummaries = new ArrayList<>();
    }
    this.imageSummaries.add(imageSummariesItem);
    return this;
  }

   /**
   * Get imageSummaries
   * @return imageSummaries
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE_SUMMARIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<VCImageSummary> getImageSummaries() {
    return imageSummaries;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE_SUMMARIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImageSummaries(List<VCImageSummary> imageSummaries) {
    this.imageSummaries = imageSummaries;
  }


  public VCellSummaryContainer geometrySummaries(List<GeometrySummary> geometrySummaries) {
    this.geometrySummaries = geometrySummaries;
    return this;
  }

  public VCellSummaryContainer addGeometrySummariesItem(GeometrySummary geometrySummariesItem) {
    if (this.geometrySummaries == null) {
      this.geometrySummaries = new ArrayList<>();
    }
    this.geometrySummaries.add(geometrySummariesItem);
    return this;
  }

   /**
   * Get geometrySummaries
   * @return geometrySummaries
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GEOMETRY_SUMMARIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<GeometrySummary> getGeometrySummaries() {
    return geometrySummaries;
  }


  @JsonProperty(JSON_PROPERTY_GEOMETRY_SUMMARIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGeometrySummaries(List<GeometrySummary> geometrySummaries) {
    this.geometrySummaries = geometrySummaries;
  }


  public VCellSummaryContainer mathModelSummaries(List<MathModelSummary> mathModelSummaries) {
    this.mathModelSummaries = mathModelSummaries;
    return this;
  }

  public VCellSummaryContainer addMathModelSummariesItem(MathModelSummary mathModelSummariesItem) {
    if (this.mathModelSummaries == null) {
      this.mathModelSummaries = new ArrayList<>();
    }
    this.mathModelSummaries.add(mathModelSummariesItem);
    return this;
  }

   /**
   * Get mathModelSummaries
   * @return mathModelSummaries
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MATH_MODEL_SUMMARIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<MathModelSummary> getMathModelSummaries() {
    return mathModelSummaries;
  }


  @JsonProperty(JSON_PROPERTY_MATH_MODEL_SUMMARIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMathModelSummaries(List<MathModelSummary> mathModelSummaries) {
    this.mathModelSummaries = mathModelSummaries;
  }


  public VCellSummaryContainer bioModelSummaries(List<BioModelSummary> bioModelSummaries) {
    this.bioModelSummaries = bioModelSummaries;
    return this;
  }

  public VCellSummaryContainer addBioModelSummariesItem(BioModelSummary bioModelSummariesItem) {
    if (this.bioModelSummaries == null) {
      this.bioModelSummaries = new ArrayList<>();
    }
    this.bioModelSummaries.add(bioModelSummariesItem);
    return this;
  }

   /**
   * Get bioModelSummaries
   * @return bioModelSummaries
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BIO_MODEL_SUMMARIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BioModelSummary> getBioModelSummaries() {
    return bioModelSummaries;
  }


  @JsonProperty(JSON_PROPERTY_BIO_MODEL_SUMMARIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBioModelSummaries(List<BioModelSummary> bioModelSummaries) {
    this.bioModelSummaries = bioModelSummaries;
  }


  /**
   * Return true if this VCellSummaryContainer object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VCellSummaryContainer vcellSummaryContainer = (VCellSummaryContainer) o;
    return Objects.equals(this.imageSummaries, vcellSummaryContainer.imageSummaries) &&
        Objects.equals(this.geometrySummaries, vcellSummaryContainer.geometrySummaries) &&
        Objects.equals(this.mathModelSummaries, vcellSummaryContainer.mathModelSummaries) &&
        Objects.equals(this.bioModelSummaries, vcellSummaryContainer.bioModelSummaries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(imageSummaries, geometrySummaries, mathModelSummaries, bioModelSummaries);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VCellSummaryContainer {\n");
    sb.append("    imageSummaries: ").append(toIndentedString(imageSummaries)).append("\n");
    sb.append("    geometrySummaries: ").append(toIndentedString(geometrySummaries)).append("\n");
    sb.append("    mathModelSummaries: ").append(toIndentedString(mathModelSummaries)).append("\n");
    sb.append("    bioModelSummaries: ").append(toIndentedString(bioModelSummaries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `imageSummaries` to the URL query string
    if (getImageSummaries() != null) {
      for (int i = 0; i < getImageSummaries().size(); i++) {
        if (getImageSummaries().get(i) != null) {
          joiner.add(getImageSummaries().get(i).toUrlQueryString(String.format("%simageSummaries%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `geometrySummaries` to the URL query string
    if (getGeometrySummaries() != null) {
      for (int i = 0; i < getGeometrySummaries().size(); i++) {
        if (getGeometrySummaries().get(i) != null) {
          joiner.add(getGeometrySummaries().get(i).toUrlQueryString(String.format("%sgeometrySummaries%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `mathModelSummaries` to the URL query string
    if (getMathModelSummaries() != null) {
      for (int i = 0; i < getMathModelSummaries().size(); i++) {
        if (getMathModelSummaries().get(i) != null) {
          joiner.add(getMathModelSummaries().get(i).toUrlQueryString(String.format("%smathModelSummaries%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `bioModelSummaries` to the URL query string
    if (getBioModelSummaries() != null) {
      for (int i = 0; i < getBioModelSummaries().size(); i++) {
        if (getBioModelSummaries().get(i) != null) {
          joiner.add(getBioModelSummaries().get(i).toUrlQueryString(String.format("%sbioModelSummaries%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}

