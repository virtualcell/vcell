/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.vcell.restclient.model.ExternalDataIdentifier;
import org.vcell.restclient.model.User;
import org.vcell.restclient.model.VersionableTypeVersion;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * FieldDataDBOperationSpec
 */
@JsonPropertyOrder({
  FieldDataDBOperationSpec.JSON_PROPERTY_OP_TYPE,
  FieldDataDBOperationSpec.JSON_PROPERTY_SPEC_E_D_I,
  FieldDataDBOperationSpec.JSON_PROPERTY_OWNER,
  FieldDataDBOperationSpec.JSON_PROPERTY_NEW_EXT_DATA_I_D_NAME,
  FieldDataDBOperationSpec.JSON_PROPERTY_ANNOTATION,
  FieldDataDBOperationSpec.JSON_PROPERTY_SOURCE_NAMES,
  FieldDataDBOperationSpec.JSON_PROPERTY_SOURCE_OWNER,
  FieldDataDBOperationSpec.JSON_PROPERTY_B_INCLUDE_SIM_REFS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FieldDataDBOperationSpec {
  public static final String JSON_PROPERTY_OP_TYPE = "opType";
  private Integer opType;

  public static final String JSON_PROPERTY_SPEC_E_D_I = "specEDI";
  private ExternalDataIdentifier specEDI;

  public static final String JSON_PROPERTY_OWNER = "owner";
  private User owner;

  public static final String JSON_PROPERTY_NEW_EXT_DATA_I_D_NAME = "newExtDataIDName";
  private String newExtDataIDName;

  public static final String JSON_PROPERTY_ANNOTATION = "annotation";
  private String annotation;

  public static final String JSON_PROPERTY_SOURCE_NAMES = "sourceNames";
  private List<String> sourceNames;

  public static final String JSON_PROPERTY_SOURCE_OWNER = "sourceOwner";
  private VersionableTypeVersion sourceOwner;

  public static final String JSON_PROPERTY_B_INCLUDE_SIM_REFS = "bIncludeSimRefs";
  private Boolean bIncludeSimRefs;

  public FieldDataDBOperationSpec() { 
  }

  public FieldDataDBOperationSpec opType(Integer opType) {
    this.opType = opType;
    return this;
  }

   /**
   * Get opType
   * @return opType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OP_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOpType() {
    return opType;
  }


  @JsonProperty(JSON_PROPERTY_OP_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOpType(Integer opType) {
    this.opType = opType;
  }


  public FieldDataDBOperationSpec specEDI(ExternalDataIdentifier specEDI) {
    this.specEDI = specEDI;
    return this;
  }

   /**
   * Get specEDI
   * @return specEDI
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SPEC_E_D_I)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExternalDataIdentifier getSpecEDI() {
    return specEDI;
  }


  @JsonProperty(JSON_PROPERTY_SPEC_E_D_I)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpecEDI(ExternalDataIdentifier specEDI) {
    this.specEDI = specEDI;
  }


  public FieldDataDBOperationSpec owner(User owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public User getOwner() {
    return owner;
  }


  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwner(User owner) {
    this.owner = owner;
  }


  public FieldDataDBOperationSpec newExtDataIDName(String newExtDataIDName) {
    this.newExtDataIDName = newExtDataIDName;
    return this;
  }

   /**
   * Get newExtDataIDName
   * @return newExtDataIDName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEW_EXT_DATA_I_D_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNewExtDataIDName() {
    return newExtDataIDName;
  }


  @JsonProperty(JSON_PROPERTY_NEW_EXT_DATA_I_D_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNewExtDataIDName(String newExtDataIDName) {
    this.newExtDataIDName = newExtDataIDName;
  }


  public FieldDataDBOperationSpec annotation(String annotation) {
    this.annotation = annotation;
    return this;
  }

   /**
   * Get annotation
   * @return annotation
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANNOTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAnnotation() {
    return annotation;
  }


  @JsonProperty(JSON_PROPERTY_ANNOTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnnotation(String annotation) {
    this.annotation = annotation;
  }


  public FieldDataDBOperationSpec sourceNames(List<String> sourceNames) {
    this.sourceNames = sourceNames;
    return this;
  }

  public FieldDataDBOperationSpec addSourceNamesItem(String sourceNamesItem) {
    if (this.sourceNames == null) {
      this.sourceNames = new ArrayList<>();
    }
    this.sourceNames.add(sourceNamesItem);
    return this;
  }

   /**
   * Get sourceNames
   * @return sourceNames
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getSourceNames() {
    return sourceNames;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceNames(List<String> sourceNames) {
    this.sourceNames = sourceNames;
  }


  public FieldDataDBOperationSpec sourceOwner(VersionableTypeVersion sourceOwner) {
    this.sourceOwner = sourceOwner;
    return this;
  }

   /**
   * Get sourceOwner
   * @return sourceOwner
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VersionableTypeVersion getSourceOwner() {
    return sourceOwner;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceOwner(VersionableTypeVersion sourceOwner) {
    this.sourceOwner = sourceOwner;
  }


  public FieldDataDBOperationSpec bIncludeSimRefs(Boolean bIncludeSimRefs) {
    this.bIncludeSimRefs = bIncludeSimRefs;
    return this;
  }

   /**
   * Get bIncludeSimRefs
   * @return bIncludeSimRefs
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_B_INCLUDE_SIM_REFS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getbIncludeSimRefs() {
    return bIncludeSimRefs;
  }


  @JsonProperty(JSON_PROPERTY_B_INCLUDE_SIM_REFS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setbIncludeSimRefs(Boolean bIncludeSimRefs) {
    this.bIncludeSimRefs = bIncludeSimRefs;
  }


  /**
   * Return true if this FieldDataDBOperationSpec object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FieldDataDBOperationSpec fieldDataDBOperationSpec = (FieldDataDBOperationSpec) o;
    return Objects.equals(this.opType, fieldDataDBOperationSpec.opType) &&
        Objects.equals(this.specEDI, fieldDataDBOperationSpec.specEDI) &&
        Objects.equals(this.owner, fieldDataDBOperationSpec.owner) &&
        Objects.equals(this.newExtDataIDName, fieldDataDBOperationSpec.newExtDataIDName) &&
        Objects.equals(this.annotation, fieldDataDBOperationSpec.annotation) &&
        Objects.equals(this.sourceNames, fieldDataDBOperationSpec.sourceNames) &&
        Objects.equals(this.sourceOwner, fieldDataDBOperationSpec.sourceOwner) &&
        Objects.equals(this.bIncludeSimRefs, fieldDataDBOperationSpec.bIncludeSimRefs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(opType, specEDI, owner, newExtDataIDName, annotation, sourceNames, sourceOwner, bIncludeSimRefs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FieldDataDBOperationSpec {\n");
    sb.append("    opType: ").append(toIndentedString(opType)).append("\n");
    sb.append("    specEDI: ").append(toIndentedString(specEDI)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    newExtDataIDName: ").append(toIndentedString(newExtDataIDName)).append("\n");
    sb.append("    annotation: ").append(toIndentedString(annotation)).append("\n");
    sb.append("    sourceNames: ").append(toIndentedString(sourceNames)).append("\n");
    sb.append("    sourceOwner: ").append(toIndentedString(sourceOwner)).append("\n");
    sb.append("    bIncludeSimRefs: ").append(toIndentedString(bIncludeSimRefs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `opType` to the URL query string
    if (getOpType() != null) {
      joiner.add(String.format("%sopType%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getOpType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `specEDI` to the URL query string
    if (getSpecEDI() != null) {
      joiner.add(getSpecEDI().toUrlQueryString(prefix + "specEDI" + suffix));
    }

    // add `owner` to the URL query string
    if (getOwner() != null) {
      joiner.add(getOwner().toUrlQueryString(prefix + "owner" + suffix));
    }

    // add `newExtDataIDName` to the URL query string
    if (getNewExtDataIDName() != null) {
      joiner.add(String.format("%snewExtDataIDName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getNewExtDataIDName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `annotation` to the URL query string
    if (getAnnotation() != null) {
      joiner.add(String.format("%sannotation%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAnnotation()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `sourceNames` to the URL query string
    if (getSourceNames() != null) {
      for (int i = 0; i < getSourceNames().size(); i++) {
        joiner.add(String.format("%ssourceNames%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getSourceNames().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `sourceOwner` to the URL query string
    if (getSourceOwner() != null) {
      joiner.add(getSourceOwner().toUrlQueryString(prefix + "sourceOwner" + suffix));
    }

    // add `bIncludeSimRefs` to the URL query string
    if (getbIncludeSimRefs() != null) {
      joiner.add(String.format("%sbIncludeSimRefs%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getbIncludeSimRefs()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

