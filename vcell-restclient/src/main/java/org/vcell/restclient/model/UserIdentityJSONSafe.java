/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * UserIdentityJSONSafe
 */
@JsonPropertyOrder({
  UserIdentityJSONSafe.JSON_PROPERTY_MAPPED,
  UserIdentityJSONSafe.JSON_PROPERTY_USER_NAME,
  UserIdentityJSONSafe.JSON_PROPERTY_ID,
  UserIdentityJSONSafe.JSON_PROPERTY_SUBJECT,
  UserIdentityJSONSafe.JSON_PROPERTY_INSERT_DATE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UserIdentityJSONSafe {
  public static final String JSON_PROPERTY_MAPPED = "mapped";
  private Boolean mapped;

  public static final String JSON_PROPERTY_USER_NAME = "userName";
  private String userName;

  public static final String JSON_PROPERTY_ID = "id";
  private BigDecimal id;

  public static final String JSON_PROPERTY_SUBJECT = "subject";
  private String subject;

  public static final String JSON_PROPERTY_INSERT_DATE = "insertDate";
  private String insertDate;

  public UserIdentityJSONSafe() { 
  }

  public UserIdentityJSONSafe mapped(Boolean mapped) {
    this.mapped = mapped;
    return this;
  }

   /**
   * Get mapped
   * @return mapped
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAPPED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMapped() {
    return mapped;
  }


  @JsonProperty(JSON_PROPERTY_MAPPED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMapped(Boolean mapped) {
    this.mapped = mapped;
  }


  public UserIdentityJSONSafe userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserName() {
    return userName;
  }


  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserName(String userName) {
    this.userName = userName;
  }


  public UserIdentityJSONSafe id(BigDecimal id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(BigDecimal id) {
    this.id = id;
  }


  public UserIdentityJSONSafe subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubject() {
    return subject;
  }


  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubject(String subject) {
    this.subject = subject;
  }


  public UserIdentityJSONSafe insertDate(String insertDate) {
    this.insertDate = insertDate;
    return this;
  }

   /**
   * Get insertDate
   * @return insertDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSERT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInsertDate() {
    return insertDate;
  }


  @JsonProperty(JSON_PROPERTY_INSERT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInsertDate(String insertDate) {
    this.insertDate = insertDate;
  }


  /**
   * Return true if this UserIdentityJSONSafe object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserIdentityJSONSafe userIdentityJSONSafe = (UserIdentityJSONSafe) o;
    return Objects.equals(this.mapped, userIdentityJSONSafe.mapped) &&
        Objects.equals(this.userName, userIdentityJSONSafe.userName) &&
        Objects.equals(this.id, userIdentityJSONSafe.id) &&
        Objects.equals(this.subject, userIdentityJSONSafe.subject) &&
        Objects.equals(this.insertDate, userIdentityJSONSafe.insertDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mapped, userName, id, subject, insertDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserIdentityJSONSafe {\n");
    sb.append("    mapped: ").append(toIndentedString(mapped)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    insertDate: ").append(toIndentedString(insertDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `mapped` to the URL query string
    if (getMapped() != null) {
      joiner.add(String.format("%smapped%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMapped()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `userName` to the URL query string
    if (getUserName() != null) {
      joiner.add(String.format("%suserName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUserName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `subject` to the URL query string
    if (getSubject() != null) {
      joiner.add(String.format("%ssubject%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSubject()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `insertDate` to the URL query string
    if (getInsertDate() != null) {
      joiner.add(String.format("%sinsertDate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getInsertDate()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

