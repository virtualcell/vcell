/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.vcell.restclient.model.ExternalDataIdentifier;
import org.vcell.restclient.model.KeyValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * FieldDataReference
 */
@JsonPropertyOrder({
  FieldDataReference.JSON_PROPERTY_EXTERNAL_DATA_IDENTIFIER,
  FieldDataReference.JSON_PROPERTY_EXTERNAL_DATA_ANNOTATION,
  FieldDataReference.JSON_PROPERTY_EXTERNAL_DATA_I_D_SIM_REFS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FieldDataReference {
  public static final String JSON_PROPERTY_EXTERNAL_DATA_IDENTIFIER = "externalDataIdentifier";
  private ExternalDataIdentifier externalDataIdentifier;

  public static final String JSON_PROPERTY_EXTERNAL_DATA_ANNOTATION = "externalDataAnnotation";
  private String externalDataAnnotation;

  public static final String JSON_PROPERTY_EXTERNAL_DATA_I_D_SIM_REFS = "externalDataIDSimRefs";
  private List<KeyValue> externalDataIDSimRefs;

  public FieldDataReference() { 
  }

  public FieldDataReference externalDataIdentifier(ExternalDataIdentifier externalDataIdentifier) {
    this.externalDataIdentifier = externalDataIdentifier;
    return this;
  }

   /**
   * Get externalDataIdentifier
   * @return externalDataIdentifier
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTERNAL_DATA_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExternalDataIdentifier getExternalDataIdentifier() {
    return externalDataIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_DATA_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalDataIdentifier(ExternalDataIdentifier externalDataIdentifier) {
    this.externalDataIdentifier = externalDataIdentifier;
  }


  public FieldDataReference externalDataAnnotation(String externalDataAnnotation) {
    this.externalDataAnnotation = externalDataAnnotation;
    return this;
  }

   /**
   * Get externalDataAnnotation
   * @return externalDataAnnotation
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTERNAL_DATA_ANNOTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalDataAnnotation() {
    return externalDataAnnotation;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_DATA_ANNOTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalDataAnnotation(String externalDataAnnotation) {
    this.externalDataAnnotation = externalDataAnnotation;
  }


  public FieldDataReference externalDataIDSimRefs(List<KeyValue> externalDataIDSimRefs) {
    this.externalDataIDSimRefs = externalDataIDSimRefs;
    return this;
  }

  public FieldDataReference addExternalDataIDSimRefsItem(KeyValue externalDataIDSimRefsItem) {
    if (this.externalDataIDSimRefs == null) {
      this.externalDataIDSimRefs = new ArrayList<>();
    }
    this.externalDataIDSimRefs.add(externalDataIDSimRefsItem);
    return this;
  }

   /**
   * Get externalDataIDSimRefs
   * @return externalDataIDSimRefs
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTERNAL_DATA_I_D_SIM_REFS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<KeyValue> getExternalDataIDSimRefs() {
    return externalDataIDSimRefs;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_DATA_I_D_SIM_REFS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalDataIDSimRefs(List<KeyValue> externalDataIDSimRefs) {
    this.externalDataIDSimRefs = externalDataIDSimRefs;
  }


  /**
   * Return true if this FieldDataReference object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FieldDataReference fieldDataReference = (FieldDataReference) o;
    return Objects.equals(this.externalDataIdentifier, fieldDataReference.externalDataIdentifier) &&
        Objects.equals(this.externalDataAnnotation, fieldDataReference.externalDataAnnotation) &&
        Objects.equals(this.externalDataIDSimRefs, fieldDataReference.externalDataIDSimRefs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(externalDataIdentifier, externalDataAnnotation, externalDataIDSimRefs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FieldDataReference {\n");
    sb.append("    externalDataIdentifier: ").append(toIndentedString(externalDataIdentifier)).append("\n");
    sb.append("    externalDataAnnotation: ").append(toIndentedString(externalDataAnnotation)).append("\n");
    sb.append("    externalDataIDSimRefs: ").append(toIndentedString(externalDataIDSimRefs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `externalDataIdentifier` to the URL query string
    if (getExternalDataIdentifier() != null) {
      joiner.add(getExternalDataIdentifier().toUrlQueryString(prefix + "externalDataIdentifier" + suffix));
    }

    // add `externalDataAnnotation` to the URL query string
    if (getExternalDataAnnotation() != null) {
      joiner.add(String.format("%sexternalDataAnnotation%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getExternalDataAnnotation()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `externalDataIDSimRefs` to the URL query string
    if (getExternalDataIDSimRefs() != null) {
      for (int i = 0; i < getExternalDataIDSimRefs().size(); i++) {
        if (getExternalDataIDSimRefs().get(i) != null) {
          joiner.add(getExternalDataIDSimRefs().get(i).toUrlQueryString(String.format("%sexternalDataIDSimRefs%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}

