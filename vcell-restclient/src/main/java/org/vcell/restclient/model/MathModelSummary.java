/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.vcell.restclient.model.MathModelChildSummary;
import org.vcell.restclient.model.PublicationInfo;
import org.vcell.restclient.model.VCellSoftwareVersion;
import org.vcell.restclient.model.Version;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * MathModelSummary
 */
@JsonPropertyOrder({
  MathModelSummary.JSON_PROPERTY_VERSION,
  MathModelSummary.JSON_PROPERTY_KEY_VALUE,
  MathModelSummary.JSON_PROPERTY_CHILD_SUMMARY,
  MathModelSummary.JSON_PROPERTY_SOFTWARE_VERSION,
  MathModelSummary.JSON_PROPERTY_PUBLICATION_INFOS,
  MathModelSummary.JSON_PROPERTY_ANNOTATED_FUNCTIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MathModelSummary {
  public static final String JSON_PROPERTY_VERSION = "version";
  private Version version;

  public static final String JSON_PROPERTY_KEY_VALUE = "keyValue";
  private String keyValue;

  public static final String JSON_PROPERTY_CHILD_SUMMARY = "childSummary";
  private MathModelChildSummary childSummary;

  public static final String JSON_PROPERTY_SOFTWARE_VERSION = "softwareVersion";
  private VCellSoftwareVersion softwareVersion;

  public static final String JSON_PROPERTY_PUBLICATION_INFOS = "publicationInfos";
  private List<PublicationInfo> publicationInfos;

  public static final String JSON_PROPERTY_ANNOTATED_FUNCTIONS = "annotatedFunctions";
  private String annotatedFunctions;

  public MathModelSummary() { 
  }

  public MathModelSummary version(Version version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Version getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(Version version) {
    this.version = version;
  }


  public MathModelSummary keyValue(String keyValue) {
    this.keyValue = keyValue;
    return this;
  }

   /**
   * Get keyValue
   * @return keyValue
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KEY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKeyValue() {
    return keyValue;
  }


  @JsonProperty(JSON_PROPERTY_KEY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeyValue(String keyValue) {
    this.keyValue = keyValue;
  }


  public MathModelSummary childSummary(MathModelChildSummary childSummary) {
    this.childSummary = childSummary;
    return this;
  }

   /**
   * Get childSummary
   * @return childSummary
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHILD_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MathModelChildSummary getChildSummary() {
    return childSummary;
  }


  @JsonProperty(JSON_PROPERTY_CHILD_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChildSummary(MathModelChildSummary childSummary) {
    this.childSummary = childSummary;
  }


  public MathModelSummary softwareVersion(VCellSoftwareVersion softwareVersion) {
    this.softwareVersion = softwareVersion;
    return this;
  }

   /**
   * Get softwareVersion
   * @return softwareVersion
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOFTWARE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VCellSoftwareVersion getSoftwareVersion() {
    return softwareVersion;
  }


  @JsonProperty(JSON_PROPERTY_SOFTWARE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSoftwareVersion(VCellSoftwareVersion softwareVersion) {
    this.softwareVersion = softwareVersion;
  }


  public MathModelSummary publicationInfos(List<PublicationInfo> publicationInfos) {
    this.publicationInfos = publicationInfos;
    return this;
  }

  public MathModelSummary addPublicationInfosItem(PublicationInfo publicationInfosItem) {
    if (this.publicationInfos == null) {
      this.publicationInfos = new ArrayList<>();
    }
    this.publicationInfos.add(publicationInfosItem);
    return this;
  }

   /**
   * Get publicationInfos
   * @return publicationInfos
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PUBLICATION_INFOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PublicationInfo> getPublicationInfos() {
    return publicationInfos;
  }


  @JsonProperty(JSON_PROPERTY_PUBLICATION_INFOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublicationInfos(List<PublicationInfo> publicationInfos) {
    this.publicationInfos = publicationInfos;
  }


  public MathModelSummary annotatedFunctions(String annotatedFunctions) {
    this.annotatedFunctions = annotatedFunctions;
    return this;
  }

   /**
   * Get annotatedFunctions
   * @return annotatedFunctions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANNOTATED_FUNCTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAnnotatedFunctions() {
    return annotatedFunctions;
  }


  @JsonProperty(JSON_PROPERTY_ANNOTATED_FUNCTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnnotatedFunctions(String annotatedFunctions) {
    this.annotatedFunctions = annotatedFunctions;
  }


  /**
   * Return true if this MathModelSummary object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MathModelSummary mathModelSummary = (MathModelSummary) o;
    return Objects.equals(this.version, mathModelSummary.version) &&
        Objects.equals(this.keyValue, mathModelSummary.keyValue) &&
        Objects.equals(this.childSummary, mathModelSummary.childSummary) &&
        Objects.equals(this.softwareVersion, mathModelSummary.softwareVersion) &&
        Objects.equals(this.publicationInfos, mathModelSummary.publicationInfos) &&
        Objects.equals(this.annotatedFunctions, mathModelSummary.annotatedFunctions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(version, keyValue, childSummary, softwareVersion, publicationInfos, annotatedFunctions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MathModelSummary {\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    keyValue: ").append(toIndentedString(keyValue)).append("\n");
    sb.append("    childSummary: ").append(toIndentedString(childSummary)).append("\n");
    sb.append("    softwareVersion: ").append(toIndentedString(softwareVersion)).append("\n");
    sb.append("    publicationInfos: ").append(toIndentedString(publicationInfos)).append("\n");
    sb.append("    annotatedFunctions: ").append(toIndentedString(annotatedFunctions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `version` to the URL query string
    if (getVersion() != null) {
      joiner.add(getVersion().toUrlQueryString(prefix + "version" + suffix));
    }

    // add `keyValue` to the URL query string
    if (getKeyValue() != null) {
      joiner.add(String.format("%skeyValue%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getKeyValue()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `childSummary` to the URL query string
    if (getChildSummary() != null) {
      joiner.add(getChildSummary().toUrlQueryString(prefix + "childSummary" + suffix));
    }

    // add `softwareVersion` to the URL query string
    if (getSoftwareVersion() != null) {
      joiner.add(getSoftwareVersion().toUrlQueryString(prefix + "softwareVersion" + suffix));
    }

    // add `publicationInfos` to the URL query string
    if (getPublicationInfos() != null) {
      for (int i = 0; i < getPublicationInfos().size(); i++) {
        if (getPublicationInfos().get(i) != null) {
          joiner.add(getPublicationInfos().get(i).toUrlQueryString(String.format("%spublicationInfos%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `annotatedFunctions` to the URL query string
    if (getAnnotatedFunctions() != null) {
      joiner.add(String.format("%sannotatedFunctions%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAnnotatedFunctions()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

