/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.vcell.restclient.model.SimulationJobStatusRecord;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * StatusMessage
 */
@JsonPropertyOrder({
  StatusMessage.JSON_PROPERTY_JOB_STATUS,
  StatusMessage.JSON_PROPERTY_USER_NAME,
  StatusMessage.JSON_PROPERTY_PROGRESS,
  StatusMessage.JSON_PROPERTY_TIMEPOINT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class StatusMessage {
  public static final String JSON_PROPERTY_JOB_STATUS = "jobStatus";
  private SimulationJobStatusRecord jobStatus;

  public static final String JSON_PROPERTY_USER_NAME = "userName";
  private String userName;

  public static final String JSON_PROPERTY_PROGRESS = "progress";
  private Double progress;

  public static final String JSON_PROPERTY_TIMEPOINT = "timepoint";
  private Double timepoint;

  public StatusMessage() { 
  }

  public StatusMessage jobStatus(SimulationJobStatusRecord jobStatus) {
    this.jobStatus = jobStatus;
    return this;
  }

   /**
   * Get jobStatus
   * @return jobStatus
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_JOB_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SimulationJobStatusRecord getJobStatus() {
    return jobStatus;
  }


  @JsonProperty(JSON_PROPERTY_JOB_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJobStatus(SimulationJobStatusRecord jobStatus) {
    this.jobStatus = jobStatus;
  }


  public StatusMessage userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserName() {
    return userName;
  }


  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserName(String userName) {
    this.userName = userName;
  }


  public StatusMessage progress(Double progress) {
    this.progress = progress;
    return this;
  }

   /**
   * Get progress
   * @return progress
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROGRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getProgress() {
    return progress;
  }


  @JsonProperty(JSON_PROPERTY_PROGRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProgress(Double progress) {
    this.progress = progress;
  }


  public StatusMessage timepoint(Double timepoint) {
    this.timepoint = timepoint;
    return this;
  }

   /**
   * Get timepoint
   * @return timepoint
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIMEPOINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTimepoint() {
    return timepoint;
  }


  @JsonProperty(JSON_PROPERTY_TIMEPOINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimepoint(Double timepoint) {
    this.timepoint = timepoint;
  }


  /**
   * Return true if this StatusMessage object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatusMessage statusMessage = (StatusMessage) o;
    return Objects.equals(this.jobStatus, statusMessage.jobStatus) &&
        Objects.equals(this.userName, statusMessage.userName) &&
        Objects.equals(this.progress, statusMessage.progress) &&
        Objects.equals(this.timepoint, statusMessage.timepoint);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jobStatus, userName, progress, timepoint);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatusMessage {\n");
    sb.append("    jobStatus: ").append(toIndentedString(jobStatus)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    timepoint: ").append(toIndentedString(timepoint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `jobStatus` to the URL query string
    if (getJobStatus() != null) {
      joiner.add(getJobStatus().toUrlQueryString(prefix + "jobStatus" + suffix));
    }

    // add `userName` to the URL query string
    if (getUserName() != null) {
      joiner.add(String.format("%suserName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUserName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `progress` to the URL query string
    if (getProgress() != null) {
      joiner.add(String.format("%sprogress%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getProgress()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `timepoint` to the URL query string
    if (getTimepoint() != null) {
      joiner.add(String.format("%stimepoint%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTimepoint()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

