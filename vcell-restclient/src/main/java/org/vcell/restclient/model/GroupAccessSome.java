/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.vcell.restclient.model.GroupAccess;
import org.vcell.restclient.model.User;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.vcell.restclient.JSON;
/**
 * GroupAccessSome
 */
@JsonPropertyOrder({
  GroupAccessSome.JSON_PROPERTY_TYPE,
  GroupAccessSome.JSON_PROPERTY_HASH,
  GroupAccessSome.JSON_PROPERTY_GROUP_MEMBERS,
  GroupAccessSome.JSON_PROPERTY_HIDDEN_MEMBERS,
  GroupAccessSome.JSON_PROPERTY_DESCRIPTION,
  GroupAccessSome.JSON_PROPERTY_HIDDEN_GROUP_MEMBERS,
  GroupAccessSome.JSON_PROPERTY_NORMAL_GROUP_MEMBERS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
@JsonIgnoreProperties(
  value = "type", // ignore manually set type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true)

public class GroupAccessSome extends GroupAccess {
  public static final String JSON_PROPERTY_TYPE = "type";
  private String type = "GroupAccessSome";

  public static final String JSON_PROPERTY_HASH = "hash";
  private BigDecimal hash;

  public static final String JSON_PROPERTY_GROUP_MEMBERS = "groupMembers";
  private List<User> groupMembers;

  public static final String JSON_PROPERTY_HIDDEN_MEMBERS = "hiddenMembers";
  private List<Boolean> hiddenMembers;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_HIDDEN_GROUP_MEMBERS = "hiddenGroupMembers";
  private List<User> hiddenGroupMembers;

  public static final String JSON_PROPERTY_NORMAL_GROUP_MEMBERS = "normalGroupMembers";
  private List<User> normalGroupMembers;

  public GroupAccessSome() { 
  }

  public GroupAccessSome type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public GroupAccessSome hash(BigDecimal hash) {
    this.hash = hash;
    return this;
  }

   /**
   * Get hash
   * @return hash
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getHash() {
    return hash;
  }


  @JsonProperty(JSON_PROPERTY_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHash(BigDecimal hash) {
    this.hash = hash;
  }


  public GroupAccessSome groupMembers(List<User> groupMembers) {
    this.groupMembers = groupMembers;
    return this;
  }

  public GroupAccessSome addGroupMembersItem(User groupMembersItem) {
    if (this.groupMembers == null) {
      this.groupMembers = new ArrayList<>();
    }
    this.groupMembers.add(groupMembersItem);
    return this;
  }

   /**
   * Get groupMembers
   * @return groupMembers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUP_MEMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<User> getGroupMembers() {
    return groupMembers;
  }


  @JsonProperty(JSON_PROPERTY_GROUP_MEMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroupMembers(List<User> groupMembers) {
    this.groupMembers = groupMembers;
  }


  public GroupAccessSome hiddenMembers(List<Boolean> hiddenMembers) {
    this.hiddenMembers = hiddenMembers;
    return this;
  }

  public GroupAccessSome addHiddenMembersItem(Boolean hiddenMembersItem) {
    if (this.hiddenMembers == null) {
      this.hiddenMembers = new ArrayList<>();
    }
    this.hiddenMembers.add(hiddenMembersItem);
    return this;
  }

   /**
   * Get hiddenMembers
   * @return hiddenMembers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HIDDEN_MEMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Boolean> getHiddenMembers() {
    return hiddenMembers;
  }


  @JsonProperty(JSON_PROPERTY_HIDDEN_MEMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHiddenMembers(List<Boolean> hiddenMembers) {
    this.hiddenMembers = hiddenMembers;
  }


  public GroupAccessSome description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public GroupAccessSome hiddenGroupMembers(List<User> hiddenGroupMembers) {
    this.hiddenGroupMembers = hiddenGroupMembers;
    return this;
  }

  public GroupAccessSome addHiddenGroupMembersItem(User hiddenGroupMembersItem) {
    if (this.hiddenGroupMembers == null) {
      this.hiddenGroupMembers = new ArrayList<>();
    }
    this.hiddenGroupMembers.add(hiddenGroupMembersItem);
    return this;
  }

   /**
   * Get hiddenGroupMembers
   * @return hiddenGroupMembers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HIDDEN_GROUP_MEMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<User> getHiddenGroupMembers() {
    return hiddenGroupMembers;
  }


  @JsonProperty(JSON_PROPERTY_HIDDEN_GROUP_MEMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHiddenGroupMembers(List<User> hiddenGroupMembers) {
    this.hiddenGroupMembers = hiddenGroupMembers;
  }


  public GroupAccessSome normalGroupMembers(List<User> normalGroupMembers) {
    this.normalGroupMembers = normalGroupMembers;
    return this;
  }

  public GroupAccessSome addNormalGroupMembersItem(User normalGroupMembersItem) {
    if (this.normalGroupMembers == null) {
      this.normalGroupMembers = new ArrayList<>();
    }
    this.normalGroupMembers.add(normalGroupMembersItem);
    return this;
  }

   /**
   * Get normalGroupMembers
   * @return normalGroupMembers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NORMAL_GROUP_MEMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<User> getNormalGroupMembers() {
    return normalGroupMembers;
  }


  @JsonProperty(JSON_PROPERTY_NORMAL_GROUP_MEMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNormalGroupMembers(List<User> normalGroupMembers) {
    this.normalGroupMembers = normalGroupMembers;
  }


  @Override
  public GroupAccessSome groupid(BigDecimal groupid) {
    this.setGroupid(groupid);
    return this;
  }

  /**
   * Return true if this GroupAccessSome object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupAccessSome groupAccessSome = (GroupAccessSome) o;
    return Objects.equals(this.type, groupAccessSome.type) &&
        Objects.equals(this.hash, groupAccessSome.hash) &&
        Objects.equals(this.groupMembers, groupAccessSome.groupMembers) &&
        Objects.equals(this.hiddenMembers, groupAccessSome.hiddenMembers) &&
        Objects.equals(this.description, groupAccessSome.description) &&
        Objects.equals(this.hiddenGroupMembers, groupAccessSome.hiddenGroupMembers) &&
        Objects.equals(this.normalGroupMembers, groupAccessSome.normalGroupMembers) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, hash, groupMembers, hiddenMembers, description, hiddenGroupMembers, normalGroupMembers, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupAccessSome {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    groupMembers: ").append(toIndentedString(groupMembers)).append("\n");
    sb.append("    hiddenMembers: ").append(toIndentedString(hiddenMembers)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    hiddenGroupMembers: ").append(toIndentedString(hiddenGroupMembers)).append("\n");
    sb.append("    normalGroupMembers: ").append(toIndentedString(normalGroupMembers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `groupid` to the URL query string
    if (getGroupid() != null) {
      joiner.add(String.format("%sgroupid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getGroupid()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDescription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
static {
  // Initialize and register the discriminator mappings.
  Map<String, Class<?>> mappings = new HashMap<String, Class<?>>();
  mappings.put("GroupAccessSome", GroupAccessSome.class);
  JSON.registerDiscriminator(GroupAccessSome.class, "type", mappings);
}
}

