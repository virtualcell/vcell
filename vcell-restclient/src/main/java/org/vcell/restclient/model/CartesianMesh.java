/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.vcell.restclient.model.ISize;
import org.vcell.restclient.model.UCDInfo;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * CartesianMesh
 */
@JsonPropertyOrder({
  CartesianMesh.JSON_PROPERTY_COMPRESSED_BYTES,
  CartesianMesh.JSON_PROPERTY_U_C_D_INFO,
  CartesianMesh.JSON_PROPERTY_GEOMETRY_DIMENSION,
  CartesianMesh.JSON_PROPERTY_VOLUME_REGION_MAP_SUBVOLUME,
  CartesianMesh.JSON_PROPERTY_MEMBRANE_REGION_MAP_SUBVOLUMES_IN_OUT,
  CartesianMesh.JSON_PROPERTY_NUM_MEMBRANE_ELEMENTS,
  CartesianMesh.JSON_PROPERTY_NUM_MEMBRANE_REGIONS,
  CartesianMesh.JSON_PROPERTY_NUM_VOLUME_ELEMENTS,
  CartesianMesh.JSON_PROPERTY_NUM_VOLUME_REGIONS,
  CartesianMesh.JSON_PROPERTY_I_SIZE,
  CartesianMesh.JSON_PROPERTY_SIZE_X,
  CartesianMesh.JSON_PROPERTY_SIZE_Y,
  CartesianMesh.JSON_PROPERTY_SIZE_Z,
  CartesianMesh.JSON_PROPERTY_MEMBRANE_CONNECTIVITY_O_K,
  CartesianMesh.JSON_PROPERTY_OUTPUT_FIELDS,
  CartesianMesh.JSON_PROPERTY_CHOMBO_MESH
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CartesianMesh {
  public static final String JSON_PROPERTY_COMPRESSED_BYTES = "compressedBytes";
  private File compressedBytes;

  public static final String JSON_PROPERTY_U_C_D_INFO = "uCDInfo";
  private UCDInfo uCDInfo;

  public static final String JSON_PROPERTY_GEOMETRY_DIMENSION = "geometryDimension";
  private Integer geometryDimension;

  public static final String JSON_PROPERTY_VOLUME_REGION_MAP_SUBVOLUME = "volumeRegionMapSubvolume";
  private Map<String, Integer> volumeRegionMapSubvolume = new HashMap<>();

  public static final String JSON_PROPERTY_MEMBRANE_REGION_MAP_SUBVOLUMES_IN_OUT = "membraneRegionMapSubvolumesInOut";
  private Map<String, Object> membraneRegionMapSubvolumesInOut = new HashMap<>();

  public static final String JSON_PROPERTY_NUM_MEMBRANE_ELEMENTS = "numMembraneElements";
  private Integer numMembraneElements;

  public static final String JSON_PROPERTY_NUM_MEMBRANE_REGIONS = "numMembraneRegions";
  private Integer numMembraneRegions;

  public static final String JSON_PROPERTY_NUM_VOLUME_ELEMENTS = "numVolumeElements";
  private Integer numVolumeElements;

  public static final String JSON_PROPERTY_NUM_VOLUME_REGIONS = "numVolumeRegions";
  private Integer numVolumeRegions;

  public static final String JSON_PROPERTY_I_SIZE = "iSize";
  private ISize iSize;

  public static final String JSON_PROPERTY_SIZE_X = "sizeX";
  private Integer sizeX;

  public static final String JSON_PROPERTY_SIZE_Y = "sizeY";
  private Integer sizeY;

  public static final String JSON_PROPERTY_SIZE_Z = "sizeZ";
  private Integer sizeZ;

  public static final String JSON_PROPERTY_MEMBRANE_CONNECTIVITY_O_K = "membraneConnectivityOK";
  private Boolean membraneConnectivityOK;

  public static final String JSON_PROPERTY_OUTPUT_FIELDS = "outputFields";
  private List<Object> outputFields;

  public static final String JSON_PROPERTY_CHOMBO_MESH = "chomboMesh";
  private Boolean chomboMesh;

  public CartesianMesh() { 
  }

  public CartesianMesh compressedBytes(File compressedBytes) {
    this.compressedBytes = compressedBytes;
    return this;
  }

   /**
   * Get compressedBytes
   * @return compressedBytes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPRESSED_BYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public File getCompressedBytes() {
    return compressedBytes;
  }


  @JsonProperty(JSON_PROPERTY_COMPRESSED_BYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompressedBytes(File compressedBytes) {
    this.compressedBytes = compressedBytes;
  }


  public CartesianMesh uCDInfo(UCDInfo uCDInfo) {
    this.uCDInfo = uCDInfo;
    return this;
  }

   /**
   * Get uCDInfo
   * @return uCDInfo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_U_C_D_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UCDInfo getuCDInfo() {
    return uCDInfo;
  }


  @JsonProperty(JSON_PROPERTY_U_C_D_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setuCDInfo(UCDInfo uCDInfo) {
    this.uCDInfo = uCDInfo;
  }


  public CartesianMesh geometryDimension(Integer geometryDimension) {
    this.geometryDimension = geometryDimension;
    return this;
  }

   /**
   * Get geometryDimension
   * @return geometryDimension
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GEOMETRY_DIMENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getGeometryDimension() {
    return geometryDimension;
  }


  @JsonProperty(JSON_PROPERTY_GEOMETRY_DIMENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGeometryDimension(Integer geometryDimension) {
    this.geometryDimension = geometryDimension;
  }


  public CartesianMesh volumeRegionMapSubvolume(Map<String, Integer> volumeRegionMapSubvolume) {
    this.volumeRegionMapSubvolume = volumeRegionMapSubvolume;
    return this;
  }

  public CartesianMesh putVolumeRegionMapSubvolumeItem(String key, Integer volumeRegionMapSubvolumeItem) {
    if (this.volumeRegionMapSubvolume == null) {
      this.volumeRegionMapSubvolume = new HashMap<>();
    }
    this.volumeRegionMapSubvolume.put(key, volumeRegionMapSubvolumeItem);
    return this;
  }

   /**
   * Get volumeRegionMapSubvolume
   * @return volumeRegionMapSubvolume
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VOLUME_REGION_MAP_SUBVOLUME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Integer> getVolumeRegionMapSubvolume() {
    return volumeRegionMapSubvolume;
  }


  @JsonProperty(JSON_PROPERTY_VOLUME_REGION_MAP_SUBVOLUME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVolumeRegionMapSubvolume(Map<String, Integer> volumeRegionMapSubvolume) {
    this.volumeRegionMapSubvolume = volumeRegionMapSubvolume;
  }


  public CartesianMesh membraneRegionMapSubvolumesInOut(Map<String, Object> membraneRegionMapSubvolumesInOut) {
    this.membraneRegionMapSubvolumesInOut = membraneRegionMapSubvolumesInOut;
    return this;
  }

  public CartesianMesh putMembraneRegionMapSubvolumesInOutItem(String key, Object membraneRegionMapSubvolumesInOutItem) {
    if (this.membraneRegionMapSubvolumesInOut == null) {
      this.membraneRegionMapSubvolumesInOut = new HashMap<>();
    }
    this.membraneRegionMapSubvolumesInOut.put(key, membraneRegionMapSubvolumesInOutItem);
    return this;
  }

   /**
   * Get membraneRegionMapSubvolumesInOut
   * @return membraneRegionMapSubvolumesInOut
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEMBRANE_REGION_MAP_SUBVOLUMES_IN_OUT)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getMembraneRegionMapSubvolumesInOut() {
    return membraneRegionMapSubvolumesInOut;
  }


  @JsonProperty(JSON_PROPERTY_MEMBRANE_REGION_MAP_SUBVOLUMES_IN_OUT)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setMembraneRegionMapSubvolumesInOut(Map<String, Object> membraneRegionMapSubvolumesInOut) {
    this.membraneRegionMapSubvolumesInOut = membraneRegionMapSubvolumesInOut;
  }


  public CartesianMesh numMembraneElements(Integer numMembraneElements) {
    this.numMembraneElements = numMembraneElements;
    return this;
  }

   /**
   * Get numMembraneElements
   * @return numMembraneElements
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUM_MEMBRANE_ELEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumMembraneElements() {
    return numMembraneElements;
  }


  @JsonProperty(JSON_PROPERTY_NUM_MEMBRANE_ELEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumMembraneElements(Integer numMembraneElements) {
    this.numMembraneElements = numMembraneElements;
  }


  public CartesianMesh numMembraneRegions(Integer numMembraneRegions) {
    this.numMembraneRegions = numMembraneRegions;
    return this;
  }

   /**
   * Get numMembraneRegions
   * @return numMembraneRegions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUM_MEMBRANE_REGIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumMembraneRegions() {
    return numMembraneRegions;
  }


  @JsonProperty(JSON_PROPERTY_NUM_MEMBRANE_REGIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumMembraneRegions(Integer numMembraneRegions) {
    this.numMembraneRegions = numMembraneRegions;
  }


  public CartesianMesh numVolumeElements(Integer numVolumeElements) {
    this.numVolumeElements = numVolumeElements;
    return this;
  }

   /**
   * Get numVolumeElements
   * @return numVolumeElements
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUM_VOLUME_ELEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumVolumeElements() {
    return numVolumeElements;
  }


  @JsonProperty(JSON_PROPERTY_NUM_VOLUME_ELEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumVolumeElements(Integer numVolumeElements) {
    this.numVolumeElements = numVolumeElements;
  }


  public CartesianMesh numVolumeRegions(Integer numVolumeRegions) {
    this.numVolumeRegions = numVolumeRegions;
    return this;
  }

   /**
   * Get numVolumeRegions
   * @return numVolumeRegions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUM_VOLUME_REGIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumVolumeRegions() {
    return numVolumeRegions;
  }


  @JsonProperty(JSON_PROPERTY_NUM_VOLUME_REGIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumVolumeRegions(Integer numVolumeRegions) {
    this.numVolumeRegions = numVolumeRegions;
  }


  public CartesianMesh iSize(ISize iSize) {
    this.iSize = iSize;
    return this;
  }

   /**
   * Get iSize
   * @return iSize
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_I_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ISize getiSize() {
    return iSize;
  }


  @JsonProperty(JSON_PROPERTY_I_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setiSize(ISize iSize) {
    this.iSize = iSize;
  }


  public CartesianMesh sizeX(Integer sizeX) {
    this.sizeX = sizeX;
    return this;
  }

   /**
   * Get sizeX
   * @return sizeX
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIZE_X)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSizeX() {
    return sizeX;
  }


  @JsonProperty(JSON_PROPERTY_SIZE_X)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSizeX(Integer sizeX) {
    this.sizeX = sizeX;
  }


  public CartesianMesh sizeY(Integer sizeY) {
    this.sizeY = sizeY;
    return this;
  }

   /**
   * Get sizeY
   * @return sizeY
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIZE_Y)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSizeY() {
    return sizeY;
  }


  @JsonProperty(JSON_PROPERTY_SIZE_Y)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSizeY(Integer sizeY) {
    this.sizeY = sizeY;
  }


  public CartesianMesh sizeZ(Integer sizeZ) {
    this.sizeZ = sizeZ;
    return this;
  }

   /**
   * Get sizeZ
   * @return sizeZ
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIZE_Z)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSizeZ() {
    return sizeZ;
  }


  @JsonProperty(JSON_PROPERTY_SIZE_Z)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSizeZ(Integer sizeZ) {
    this.sizeZ = sizeZ;
  }


  public CartesianMesh membraneConnectivityOK(Boolean membraneConnectivityOK) {
    this.membraneConnectivityOK = membraneConnectivityOK;
    return this;
  }

   /**
   * Get membraneConnectivityOK
   * @return membraneConnectivityOK
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEMBRANE_CONNECTIVITY_O_K)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMembraneConnectivityOK() {
    return membraneConnectivityOK;
  }


  @JsonProperty(JSON_PROPERTY_MEMBRANE_CONNECTIVITY_O_K)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMembraneConnectivityOK(Boolean membraneConnectivityOK) {
    this.membraneConnectivityOK = membraneConnectivityOK;
  }


  public CartesianMesh outputFields(List<Object> outputFields) {
    this.outputFields = outputFields;
    return this;
  }

  public CartesianMesh addOutputFieldsItem(Object outputFieldsItem) {
    if (this.outputFields == null) {
      this.outputFields = new ArrayList<>();
    }
    this.outputFields.add(outputFieldsItem);
    return this;
  }

   /**
   * Get outputFields
   * @return outputFields
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTPUT_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getOutputFields() {
    return outputFields;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUT_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutputFields(List<Object> outputFields) {
    this.outputFields = outputFields;
  }


  public CartesianMesh chomboMesh(Boolean chomboMesh) {
    this.chomboMesh = chomboMesh;
    return this;
  }

   /**
   * Get chomboMesh
   * @return chomboMesh
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHOMBO_MESH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getChomboMesh() {
    return chomboMesh;
  }


  @JsonProperty(JSON_PROPERTY_CHOMBO_MESH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChomboMesh(Boolean chomboMesh) {
    this.chomboMesh = chomboMesh;
  }


  /**
   * Return true if this CartesianMesh object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CartesianMesh cartesianMesh = (CartesianMesh) o;
    return Objects.equals(this.compressedBytes, cartesianMesh.compressedBytes) &&
        Objects.equals(this.uCDInfo, cartesianMesh.uCDInfo) &&
        Objects.equals(this.geometryDimension, cartesianMesh.geometryDimension) &&
        Objects.equals(this.volumeRegionMapSubvolume, cartesianMesh.volumeRegionMapSubvolume) &&
        Objects.equals(this.membraneRegionMapSubvolumesInOut, cartesianMesh.membraneRegionMapSubvolumesInOut) &&
        Objects.equals(this.numMembraneElements, cartesianMesh.numMembraneElements) &&
        Objects.equals(this.numMembraneRegions, cartesianMesh.numMembraneRegions) &&
        Objects.equals(this.numVolumeElements, cartesianMesh.numVolumeElements) &&
        Objects.equals(this.numVolumeRegions, cartesianMesh.numVolumeRegions) &&
        Objects.equals(this.iSize, cartesianMesh.iSize) &&
        Objects.equals(this.sizeX, cartesianMesh.sizeX) &&
        Objects.equals(this.sizeY, cartesianMesh.sizeY) &&
        Objects.equals(this.sizeZ, cartesianMesh.sizeZ) &&
        Objects.equals(this.membraneConnectivityOK, cartesianMesh.membraneConnectivityOK) &&
        Objects.equals(this.outputFields, cartesianMesh.outputFields) &&
        Objects.equals(this.chomboMesh, cartesianMesh.chomboMesh);
  }

  @Override
  public int hashCode() {
    return Objects.hash(compressedBytes, uCDInfo, geometryDimension, volumeRegionMapSubvolume, membraneRegionMapSubvolumesInOut, numMembraneElements, numMembraneRegions, numVolumeElements, numVolumeRegions, iSize, sizeX, sizeY, sizeZ, membraneConnectivityOK, outputFields, chomboMesh);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CartesianMesh {\n");
    sb.append("    compressedBytes: ").append(toIndentedString(compressedBytes)).append("\n");
    sb.append("    uCDInfo: ").append(toIndentedString(uCDInfo)).append("\n");
    sb.append("    geometryDimension: ").append(toIndentedString(geometryDimension)).append("\n");
    sb.append("    volumeRegionMapSubvolume: ").append(toIndentedString(volumeRegionMapSubvolume)).append("\n");
    sb.append("    membraneRegionMapSubvolumesInOut: ").append(toIndentedString(membraneRegionMapSubvolumesInOut)).append("\n");
    sb.append("    numMembraneElements: ").append(toIndentedString(numMembraneElements)).append("\n");
    sb.append("    numMembraneRegions: ").append(toIndentedString(numMembraneRegions)).append("\n");
    sb.append("    numVolumeElements: ").append(toIndentedString(numVolumeElements)).append("\n");
    sb.append("    numVolumeRegions: ").append(toIndentedString(numVolumeRegions)).append("\n");
    sb.append("    iSize: ").append(toIndentedString(iSize)).append("\n");
    sb.append("    sizeX: ").append(toIndentedString(sizeX)).append("\n");
    sb.append("    sizeY: ").append(toIndentedString(sizeY)).append("\n");
    sb.append("    sizeZ: ").append(toIndentedString(sizeZ)).append("\n");
    sb.append("    membraneConnectivityOK: ").append(toIndentedString(membraneConnectivityOK)).append("\n");
    sb.append("    outputFields: ").append(toIndentedString(outputFields)).append("\n");
    sb.append("    chomboMesh: ").append(toIndentedString(chomboMesh)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `compressedBytes` to the URL query string
    if (getCompressedBytes() != null) {
      joiner.add(String.format("%scompressedBytes%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCompressedBytes()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `uCDInfo` to the URL query string
    if (getuCDInfo() != null) {
      joiner.add(getuCDInfo().toUrlQueryString(prefix + "uCDInfo" + suffix));
    }

    // add `geometryDimension` to the URL query string
    if (getGeometryDimension() != null) {
      joiner.add(String.format("%sgeometryDimension%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getGeometryDimension()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `volumeRegionMapSubvolume` to the URL query string
    if (getVolumeRegionMapSubvolume() != null) {
      for (String _key : getVolumeRegionMapSubvolume().keySet()) {
        joiner.add(String.format("%svolumeRegionMapSubvolume%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getVolumeRegionMapSubvolume().get(_key), URLEncoder.encode(String.valueOf(getVolumeRegionMapSubvolume().get(_key)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `membraneRegionMapSubvolumesInOut` to the URL query string
    if (getMembraneRegionMapSubvolumesInOut() != null) {
      for (String _key : getMembraneRegionMapSubvolumesInOut().keySet()) {
        joiner.add(String.format("%smembraneRegionMapSubvolumesInOut%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getMembraneRegionMapSubvolumesInOut().get(_key), URLEncoder.encode(String.valueOf(getMembraneRegionMapSubvolumesInOut().get(_key)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `numMembraneElements` to the URL query string
    if (getNumMembraneElements() != null) {
      joiner.add(String.format("%snumMembraneElements%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getNumMembraneElements()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `numMembraneRegions` to the URL query string
    if (getNumMembraneRegions() != null) {
      joiner.add(String.format("%snumMembraneRegions%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getNumMembraneRegions()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `numVolumeElements` to the URL query string
    if (getNumVolumeElements() != null) {
      joiner.add(String.format("%snumVolumeElements%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getNumVolumeElements()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `numVolumeRegions` to the URL query string
    if (getNumVolumeRegions() != null) {
      joiner.add(String.format("%snumVolumeRegions%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getNumVolumeRegions()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `iSize` to the URL query string
    if (getiSize() != null) {
      joiner.add(getiSize().toUrlQueryString(prefix + "iSize" + suffix));
    }

    // add `sizeX` to the URL query string
    if (getSizeX() != null) {
      joiner.add(String.format("%ssizeX%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSizeX()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `sizeY` to the URL query string
    if (getSizeY() != null) {
      joiner.add(String.format("%ssizeY%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSizeY()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `sizeZ` to the URL query string
    if (getSizeZ() != null) {
      joiner.add(String.format("%ssizeZ%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSizeZ()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `membraneConnectivityOK` to the URL query string
    if (getMembraneConnectivityOK() != null) {
      joiner.add(String.format("%smembraneConnectivityOK%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMembraneConnectivityOK()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `outputFields` to the URL query string
    if (getOutputFields() != null) {
      for (int i = 0; i < getOutputFields().size(); i++) {
        joiner.add(String.format("%soutputFields%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getOutputFields().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `chomboMesh` to the URL query string
    if (getChomboMesh() != null) {
      joiner.add(String.format("%schomboMesh%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getChomboMesh()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

