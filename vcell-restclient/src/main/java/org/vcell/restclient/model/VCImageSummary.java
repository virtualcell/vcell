/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.vcell.restclient.model.Extent;
import org.vcell.restclient.model.GIFImage;
import org.vcell.restclient.model.ISize;
import org.vcell.restclient.model.VCellSoftwareVersion;
import org.vcell.restclient.model.Version;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * VCImageSummary
 */
@JsonPropertyOrder({
  VCImageSummary.JSON_PROPERTY_SIZE,
  VCImageSummary.JSON_PROPERTY_EXTENT,
  VCImageSummary.JSON_PROPERTY_VERSION,
  VCImageSummary.JSON_PROPERTY_PREVIEW,
  VCImageSummary.JSON_PROPERTY_SOFTWARE_VERSION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class VCImageSummary {
  public static final String JSON_PROPERTY_SIZE = "size";
  private ISize size;

  public static final String JSON_PROPERTY_EXTENT = "extent";
  private Extent extent;

  public static final String JSON_PROPERTY_VERSION = "version";
  private Version version;

  public static final String JSON_PROPERTY_PREVIEW = "preview";
  private GIFImage preview;

  public static final String JSON_PROPERTY_SOFTWARE_VERSION = "softwareVersion";
  private VCellSoftwareVersion softwareVersion;

  public VCImageSummary() { 
  }

  public VCImageSummary size(ISize size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ISize getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSize(ISize size) {
    this.size = size;
  }


  public VCImageSummary extent(Extent extent) {
    this.extent = extent;
    return this;
  }

   /**
   * Get extent
   * @return extent
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Extent getExtent() {
    return extent;
  }


  @JsonProperty(JSON_PROPERTY_EXTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtent(Extent extent) {
    this.extent = extent;
  }


  public VCImageSummary version(Version version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Version getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(Version version) {
    this.version = version;
  }


  public VCImageSummary preview(GIFImage preview) {
    this.preview = preview;
    return this;
  }

   /**
   * Get preview
   * @return preview
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREVIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GIFImage getPreview() {
    return preview;
  }


  @JsonProperty(JSON_PROPERTY_PREVIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreview(GIFImage preview) {
    this.preview = preview;
  }


  public VCImageSummary softwareVersion(VCellSoftwareVersion softwareVersion) {
    this.softwareVersion = softwareVersion;
    return this;
  }

   /**
   * Get softwareVersion
   * @return softwareVersion
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOFTWARE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VCellSoftwareVersion getSoftwareVersion() {
    return softwareVersion;
  }


  @JsonProperty(JSON_PROPERTY_SOFTWARE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSoftwareVersion(VCellSoftwareVersion softwareVersion) {
    this.softwareVersion = softwareVersion;
  }


  /**
   * Return true if this VCImageSummary object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VCImageSummary vcImageSummary = (VCImageSummary) o;
    return Objects.equals(this.size, vcImageSummary.size) &&
        Objects.equals(this.extent, vcImageSummary.extent) &&
        Objects.equals(this.version, vcImageSummary.version) &&
        Objects.equals(this.preview, vcImageSummary.preview) &&
        Objects.equals(this.softwareVersion, vcImageSummary.softwareVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(size, extent, version, preview, softwareVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VCImageSummary {\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    extent: ").append(toIndentedString(extent)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    preview: ").append(toIndentedString(preview)).append("\n");
    sb.append("    softwareVersion: ").append(toIndentedString(softwareVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `size` to the URL query string
    if (getSize() != null) {
      joiner.add(getSize().toUrlQueryString(prefix + "size" + suffix));
    }

    // add `extent` to the URL query string
    if (getExtent() != null) {
      joiner.add(getExtent().toUrlQueryString(prefix + "extent" + suffix));
    }

    // add `version` to the URL query string
    if (getVersion() != null) {
      joiner.add(getVersion().toUrlQueryString(prefix + "version" + suffix));
    }

    // add `preview` to the URL query string
    if (getPreview() != null) {
      joiner.add(getPreview().toUrlQueryString(prefix + "preview" + suffix));
    }

    // add `softwareVersion` to the URL query string
    if (getSoftwareVersion() != null) {
      joiner.add(getSoftwareVersion().toUrlQueryString(prefix + "softwareVersion" + suffix));
    }

    return joiner.toString();
  }
}

