/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * BioModel
 */
@JsonPropertyOrder({
  BioModel.JSON_PROPERTY_BM_KEY,
  BioModel.JSON_PROPERTY_NAME,
  BioModel.JSON_PROPERTY_PRIVACY,
  BioModel.JSON_PROPERTY_GROUP_USERS,
  BioModel.JSON_PROPERTY_SAVED_DATE,
  BioModel.JSON_PROPERTY_ANNOT,
  BioModel.JSON_PROPERTY_BRANCH_I_D,
  BioModel.JSON_PROPERTY_PHYS_MODEL_KEY,
  BioModel.JSON_PROPERTY_OWNER_NAME,
  BioModel.JSON_PROPERTY_OWNER_KEY,
  BioModel.JSON_PROPERTY_SIMULATION_KEY_LIST,
  BioModel.JSON_PROPERTY_APPLICATIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BioModel {
  public static final String JSON_PROPERTY_BM_KEY = "bmKey";
  private String bmKey;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PRIVACY = "privacy";
  private Integer privacy;

  public static final String JSON_PROPERTY_GROUP_USERS = "groupUsers";
  private List<String> groupUsers;

  public static final String JSON_PROPERTY_SAVED_DATE = "savedDate";
  private Long savedDate;

  public static final String JSON_PROPERTY_ANNOT = "annot";
  private String annot;

  public static final String JSON_PROPERTY_BRANCH_I_D = "branchID";
  private String branchID;

  public static final String JSON_PROPERTY_PHYS_MODEL_KEY = "physModelKey";
  private String physModelKey;

  public static final String JSON_PROPERTY_OWNER_NAME = "ownerName";
  private String ownerName;

  public static final String JSON_PROPERTY_OWNER_KEY = "ownerKey";
  private String ownerKey;

  public static final String JSON_PROPERTY_SIMULATION_KEY_LIST = "simulationKeyList";
  private List<String> simulationKeyList;

  public static final String JSON_PROPERTY_APPLICATIONS = "applications";
  private List<Object> applications;

  public BioModel() { 
  }

  public BioModel bmKey(String bmKey) {
    this.bmKey = bmKey;
    return this;
  }

   /**
   * Get bmKey
   * @return bmKey
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BM_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBmKey() {
    return bmKey;
  }


  @JsonProperty(JSON_PROPERTY_BM_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBmKey(String bmKey) {
    this.bmKey = bmKey;
  }


  public BioModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public BioModel privacy(Integer privacy) {
    this.privacy = privacy;
    return this;
  }

   /**
   * Get privacy
   * @return privacy
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIVACY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPrivacy() {
    return privacy;
  }


  @JsonProperty(JSON_PROPERTY_PRIVACY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrivacy(Integer privacy) {
    this.privacy = privacy;
  }


  public BioModel groupUsers(List<String> groupUsers) {
    this.groupUsers = groupUsers;
    return this;
  }

  public BioModel addGroupUsersItem(String groupUsersItem) {
    if (this.groupUsers == null) {
      this.groupUsers = new ArrayList<>();
    }
    this.groupUsers.add(groupUsersItem);
    return this;
  }

   /**
   * Get groupUsers
   * @return groupUsers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUP_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getGroupUsers() {
    return groupUsers;
  }


  @JsonProperty(JSON_PROPERTY_GROUP_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroupUsers(List<String> groupUsers) {
    this.groupUsers = groupUsers;
  }


  public BioModel savedDate(Long savedDate) {
    this.savedDate = savedDate;
    return this;
  }

   /**
   * Get savedDate
   * @return savedDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SAVED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getSavedDate() {
    return savedDate;
  }


  @JsonProperty(JSON_PROPERTY_SAVED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSavedDate(Long savedDate) {
    this.savedDate = savedDate;
  }


  public BioModel annot(String annot) {
    this.annot = annot;
    return this;
  }

   /**
   * Get annot
   * @return annot
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANNOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAnnot() {
    return annot;
  }


  @JsonProperty(JSON_PROPERTY_ANNOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnnot(String annot) {
    this.annot = annot;
  }


  public BioModel branchID(String branchID) {
    this.branchID = branchID;
    return this;
  }

   /**
   * Get branchID
   * @return branchID
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BRANCH_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBranchID() {
    return branchID;
  }


  @JsonProperty(JSON_PROPERTY_BRANCH_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBranchID(String branchID) {
    this.branchID = branchID;
  }


  public BioModel physModelKey(String physModelKey) {
    this.physModelKey = physModelKey;
    return this;
  }

   /**
   * Get physModelKey
   * @return physModelKey
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHYS_MODEL_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhysModelKey() {
    return physModelKey;
  }


  @JsonProperty(JSON_PROPERTY_PHYS_MODEL_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhysModelKey(String physModelKey) {
    this.physModelKey = physModelKey;
  }


  public BioModel ownerName(String ownerName) {
    this.ownerName = ownerName;
    return this;
  }

   /**
   * Get ownerName
   * @return ownerName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOwnerName() {
    return ownerName;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnerName(String ownerName) {
    this.ownerName = ownerName;
  }


  public BioModel ownerKey(String ownerKey) {
    this.ownerKey = ownerKey;
    return this;
  }

   /**
   * Get ownerKey
   * @return ownerKey
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNER_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOwnerKey() {
    return ownerKey;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnerKey(String ownerKey) {
    this.ownerKey = ownerKey;
  }


  public BioModel simulationKeyList(List<String> simulationKeyList) {
    this.simulationKeyList = simulationKeyList;
    return this;
  }

  public BioModel addSimulationKeyListItem(String simulationKeyListItem) {
    if (this.simulationKeyList == null) {
      this.simulationKeyList = new ArrayList<>();
    }
    this.simulationKeyList.add(simulationKeyListItem);
    return this;
  }

   /**
   * Get simulationKeyList
   * @return simulationKeyList
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIMULATION_KEY_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getSimulationKeyList() {
    return simulationKeyList;
  }


  @JsonProperty(JSON_PROPERTY_SIMULATION_KEY_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSimulationKeyList(List<String> simulationKeyList) {
    this.simulationKeyList = simulationKeyList;
  }


  public BioModel applications(List<Object> applications) {
    this.applications = applications;
    return this;
  }

  public BioModel addApplicationsItem(Object applicationsItem) {
    if (this.applications == null) {
      this.applications = new ArrayList<>();
    }
    this.applications.add(applicationsItem);
    return this;
  }

   /**
   * Get applications
   * @return applications
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPLICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getApplications() {
    return applications;
  }


  @JsonProperty(JSON_PROPERTY_APPLICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplications(List<Object> applications) {
    this.applications = applications;
  }


  /**
   * Return true if this BioModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BioModel bioModel = (BioModel) o;
    return Objects.equals(this.bmKey, bioModel.bmKey) &&
        Objects.equals(this.name, bioModel.name) &&
        Objects.equals(this.privacy, bioModel.privacy) &&
        Objects.equals(this.groupUsers, bioModel.groupUsers) &&
        Objects.equals(this.savedDate, bioModel.savedDate) &&
        Objects.equals(this.annot, bioModel.annot) &&
        Objects.equals(this.branchID, bioModel.branchID) &&
        Objects.equals(this.physModelKey, bioModel.physModelKey) &&
        Objects.equals(this.ownerName, bioModel.ownerName) &&
        Objects.equals(this.ownerKey, bioModel.ownerKey) &&
        Objects.equals(this.simulationKeyList, bioModel.simulationKeyList) &&
        Objects.equals(this.applications, bioModel.applications);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bmKey, name, privacy, groupUsers, savedDate, annot, branchID, physModelKey, ownerName, ownerKey, simulationKeyList, applications);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BioModel {\n");
    sb.append("    bmKey: ").append(toIndentedString(bmKey)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    privacy: ").append(toIndentedString(privacy)).append("\n");
    sb.append("    groupUsers: ").append(toIndentedString(groupUsers)).append("\n");
    sb.append("    savedDate: ").append(toIndentedString(savedDate)).append("\n");
    sb.append("    annot: ").append(toIndentedString(annot)).append("\n");
    sb.append("    branchID: ").append(toIndentedString(branchID)).append("\n");
    sb.append("    physModelKey: ").append(toIndentedString(physModelKey)).append("\n");
    sb.append("    ownerName: ").append(toIndentedString(ownerName)).append("\n");
    sb.append("    ownerKey: ").append(toIndentedString(ownerKey)).append("\n");
    sb.append("    simulationKeyList: ").append(toIndentedString(simulationKeyList)).append("\n");
    sb.append("    applications: ").append(toIndentedString(applications)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `bmKey` to the URL query string
    if (getBmKey() != null) {
      joiner.add(String.format("%sbmKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getBmKey()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `privacy` to the URL query string
    if (getPrivacy() != null) {
      joiner.add(String.format("%sprivacy%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPrivacy()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `groupUsers` to the URL query string
    if (getGroupUsers() != null) {
      for (int i = 0; i < getGroupUsers().size(); i++) {
        joiner.add(String.format("%sgroupUsers%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getGroupUsers().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `savedDate` to the URL query string
    if (getSavedDate() != null) {
      joiner.add(String.format("%ssavedDate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSavedDate()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `annot` to the URL query string
    if (getAnnot() != null) {
      joiner.add(String.format("%sannot%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAnnot()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `branchID` to the URL query string
    if (getBranchID() != null) {
      joiner.add(String.format("%sbranchID%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getBranchID()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `physModelKey` to the URL query string
    if (getPhysModelKey() != null) {
      joiner.add(String.format("%sphysModelKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPhysModelKey()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `ownerName` to the URL query string
    if (getOwnerName() != null) {
      joiner.add(String.format("%sownerName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getOwnerName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `ownerKey` to the URL query string
    if (getOwnerKey() != null) {
      joiner.add(String.format("%sownerKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getOwnerKey()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `simulationKeyList` to the URL query string
    if (getSimulationKeyList() != null) {
      for (int i = 0; i < getSimulationKeyList().size(); i++) {
        joiner.add(String.format("%ssimulationKeyList%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getSimulationKeyList().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `applications` to the URL query string
    if (getApplications() != null) {
      for (int i = 0; i < getApplications().size(); i++) {
        joiner.add(String.format("%sapplications%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getApplications().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    return joiner.toString();
  }
}

