/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.vcell.restclient.model.KeyValue;
import org.vcell.restclient.model.User;
import org.vcell.restclient.model.VCDocumentType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * PublicationInfo
 */
@JsonPropertyOrder({
  PublicationInfo.JSON_PROPERTY_PUBLICATION_KEY,
  PublicationInfo.JSON_PROPERTY_VERSION_KEY,
  PublicationInfo.JSON_PROPERTY_TITLE,
  PublicationInfo.JSON_PROPERTY_AUTHORS,
  PublicationInfo.JSON_PROPERTY_CITATION,
  PublicationInfo.JSON_PROPERTY_PUBMEDID,
  PublicationInfo.JSON_PROPERTY_DOI,
  PublicationInfo.JSON_PROPERTY_URL,
  PublicationInfo.JSON_PROPERTY_PUBDATE,
  PublicationInfo.JSON_PROPERTY_VC_DOCUMENT_TYPE,
  PublicationInfo.JSON_PROPERTY_USER,
  PublicationInfo.JSON_PROPERTY_THE_HASH_CODE,
  PublicationInfo.JSON_PROPERTY_PUB_DATE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PublicationInfo {
  public static final String JSON_PROPERTY_PUBLICATION_KEY = "publicationKey";
  private KeyValue publicationKey;

  public static final String JSON_PROPERTY_VERSION_KEY = "versionKey";
  private KeyValue versionKey;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_AUTHORS = "authors";
  private List<String> authors;

  public static final String JSON_PROPERTY_CITATION = "citation";
  private String citation;

  public static final String JSON_PROPERTY_PUBMEDID = "pubmedid";
  private String pubmedid;

  public static final String JSON_PROPERTY_DOI = "doi";
  private String doi;

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_PUBDATE = "pubdate";
  private LocalDate pubdate;

  public static final String JSON_PROPERTY_VC_DOCUMENT_TYPE = "vcDocumentType";
  private VCDocumentType vcDocumentType;

  public static final String JSON_PROPERTY_USER = "user";
  private User user;

  public static final String JSON_PROPERTY_THE_HASH_CODE = "theHashCode";
  private Integer theHashCode;

  public static final String JSON_PROPERTY_PUB_DATE = "pubDate";
  private LocalDate pubDate;

  public PublicationInfo() { 
  }

  public PublicationInfo publicationKey(KeyValue publicationKey) {
    this.publicationKey = publicationKey;
    return this;
  }

   /**
   * Get publicationKey
   * @return publicationKey
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PUBLICATION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public KeyValue getPublicationKey() {
    return publicationKey;
  }


  @JsonProperty(JSON_PROPERTY_PUBLICATION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublicationKey(KeyValue publicationKey) {
    this.publicationKey = publicationKey;
  }


  public PublicationInfo versionKey(KeyValue versionKey) {
    this.versionKey = versionKey;
    return this;
  }

   /**
   * Get versionKey
   * @return versionKey
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public KeyValue getVersionKey() {
    return versionKey;
  }


  @JsonProperty(JSON_PROPERTY_VERSION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersionKey(KeyValue versionKey) {
    this.versionKey = versionKey;
  }


  public PublicationInfo title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }


  public PublicationInfo authors(List<String> authors) {
    this.authors = authors;
    return this;
  }

  public PublicationInfo addAuthorsItem(String authorsItem) {
    if (this.authors == null) {
      this.authors = new ArrayList<>();
    }
    this.authors.add(authorsItem);
    return this;
  }

   /**
   * Get authors
   * @return authors
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAuthors() {
    return authors;
  }


  @JsonProperty(JSON_PROPERTY_AUTHORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthors(List<String> authors) {
    this.authors = authors;
  }


  public PublicationInfo citation(String citation) {
    this.citation = citation;
    return this;
  }

   /**
   * Get citation
   * @return citation
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CITATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCitation() {
    return citation;
  }


  @JsonProperty(JSON_PROPERTY_CITATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCitation(String citation) {
    this.citation = citation;
  }


  public PublicationInfo pubmedid(String pubmedid) {
    this.pubmedid = pubmedid;
    return this;
  }

   /**
   * Get pubmedid
   * @return pubmedid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PUBMEDID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPubmedid() {
    return pubmedid;
  }


  @JsonProperty(JSON_PROPERTY_PUBMEDID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPubmedid(String pubmedid) {
    this.pubmedid = pubmedid;
  }


  public PublicationInfo doi(String doi) {
    this.doi = doi;
    return this;
  }

   /**
   * Get doi
   * @return doi
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDoi() {
    return doi;
  }


  @JsonProperty(JSON_PROPERTY_DOI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDoi(String doi) {
    this.doi = doi;
  }


  public PublicationInfo url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrl(String url) {
    this.url = url;
  }


  public PublicationInfo pubdate(LocalDate pubdate) {
    this.pubdate = pubdate;
    return this;
  }

   /**
   * Get pubdate
   * @return pubdate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PUBDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getPubdate() {
    return pubdate;
  }


  @JsonProperty(JSON_PROPERTY_PUBDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPubdate(LocalDate pubdate) {
    this.pubdate = pubdate;
  }


  public PublicationInfo vcDocumentType(VCDocumentType vcDocumentType) {
    this.vcDocumentType = vcDocumentType;
    return this;
  }

   /**
   * Get vcDocumentType
   * @return vcDocumentType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VC_DOCUMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VCDocumentType getVcDocumentType() {
    return vcDocumentType;
  }


  @JsonProperty(JSON_PROPERTY_VC_DOCUMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVcDocumentType(VCDocumentType vcDocumentType) {
    this.vcDocumentType = vcDocumentType;
  }


  public PublicationInfo user(User user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public User getUser() {
    return user;
  }


  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUser(User user) {
    this.user = user;
  }


  public PublicationInfo theHashCode(Integer theHashCode) {
    this.theHashCode = theHashCode;
    return this;
  }

   /**
   * Get theHashCode
   * @return theHashCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_THE_HASH_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTheHashCode() {
    return theHashCode;
  }


  @JsonProperty(JSON_PROPERTY_THE_HASH_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTheHashCode(Integer theHashCode) {
    this.theHashCode = theHashCode;
  }


  public PublicationInfo pubDate(LocalDate pubDate) {
    this.pubDate = pubDate;
    return this;
  }

   /**
   * Get pubDate
   * @return pubDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PUB_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getPubDate() {
    return pubDate;
  }


  @JsonProperty(JSON_PROPERTY_PUB_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPubDate(LocalDate pubDate) {
    this.pubDate = pubDate;
  }


  /**
   * Return true if this PublicationInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PublicationInfo publicationInfo = (PublicationInfo) o;
    return Objects.equals(this.publicationKey, publicationInfo.publicationKey) &&
        Objects.equals(this.versionKey, publicationInfo.versionKey) &&
        Objects.equals(this.title, publicationInfo.title) &&
        Objects.equals(this.authors, publicationInfo.authors) &&
        Objects.equals(this.citation, publicationInfo.citation) &&
        Objects.equals(this.pubmedid, publicationInfo.pubmedid) &&
        Objects.equals(this.doi, publicationInfo.doi) &&
        Objects.equals(this.url, publicationInfo.url) &&
        Objects.equals(this.pubdate, publicationInfo.pubdate) &&
        Objects.equals(this.vcDocumentType, publicationInfo.vcDocumentType) &&
        Objects.equals(this.user, publicationInfo.user) &&
        Objects.equals(this.theHashCode, publicationInfo.theHashCode) &&
        Objects.equals(this.pubDate, publicationInfo.pubDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(publicationKey, versionKey, title, authors, citation, pubmedid, doi, url, pubdate, vcDocumentType, user, theHashCode, pubDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PublicationInfo {\n");
    sb.append("    publicationKey: ").append(toIndentedString(publicationKey)).append("\n");
    sb.append("    versionKey: ").append(toIndentedString(versionKey)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    authors: ").append(toIndentedString(authors)).append("\n");
    sb.append("    citation: ").append(toIndentedString(citation)).append("\n");
    sb.append("    pubmedid: ").append(toIndentedString(pubmedid)).append("\n");
    sb.append("    doi: ").append(toIndentedString(doi)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    pubdate: ").append(toIndentedString(pubdate)).append("\n");
    sb.append("    vcDocumentType: ").append(toIndentedString(vcDocumentType)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    theHashCode: ").append(toIndentedString(theHashCode)).append("\n");
    sb.append("    pubDate: ").append(toIndentedString(pubDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `publicationKey` to the URL query string
    if (getPublicationKey() != null) {
      joiner.add(getPublicationKey().toUrlQueryString(prefix + "publicationKey" + suffix));
    }

    // add `versionKey` to the URL query string
    if (getVersionKey() != null) {
      joiner.add(getVersionKey().toUrlQueryString(prefix + "versionKey" + suffix));
    }

    // add `title` to the URL query string
    if (getTitle() != null) {
      joiner.add(String.format("%stitle%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTitle()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `authors` to the URL query string
    if (getAuthors() != null) {
      for (int i = 0; i < getAuthors().size(); i++) {
        joiner.add(String.format("%sauthors%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getAuthors().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `citation` to the URL query string
    if (getCitation() != null) {
      joiner.add(String.format("%scitation%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCitation()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `pubmedid` to the URL query string
    if (getPubmedid() != null) {
      joiner.add(String.format("%spubmedid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPubmedid()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `doi` to the URL query string
    if (getDoi() != null) {
      joiner.add(String.format("%sdoi%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDoi()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `url` to the URL query string
    if (getUrl() != null) {
      joiner.add(String.format("%surl%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUrl()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `pubdate` to the URL query string
    if (getPubdate() != null) {
      joiner.add(String.format("%spubdate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPubdate()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `vcDocumentType` to the URL query string
    if (getVcDocumentType() != null) {
      joiner.add(String.format("%svcDocumentType%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getVcDocumentType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `user` to the URL query string
    if (getUser() != null) {
      joiner.add(getUser().toUrlQueryString(prefix + "user" + suffix));
    }

    // add `theHashCode` to the URL query string
    if (getTheHashCode() != null) {
      joiner.add(String.format("%stheHashCode%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTheHashCode()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `pubDate` to the URL query string
    if (getPubDate() != null) {
      joiner.add(String.format("%spubDate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPubDate()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

