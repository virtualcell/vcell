/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.vcell.restclient.model.BioModelSummary;
import org.vcell.restclient.model.GeometrySummary;
import org.vcell.restclient.model.MathModelSummary;
import org.vcell.restclient.model.VCImageSummary;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * VCellInfoContainer
 */
@JsonPropertyOrder({
  VCellInfoContainer.JSON_PROPERTY_IMAGE_INFOS,
  VCellInfoContainer.JSON_PROPERTY_GEOMETRY_INFO,
  VCellInfoContainer.JSON_PROPERTY_MATH_MODEL_INFOS,
  VCellInfoContainer.JSON_PROPERTY_BIO_MODEL_INFOS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class VCellInfoContainer {
  public static final String JSON_PROPERTY_IMAGE_INFOS = "imageInfos";
  private List<VCImageSummary> imageInfos;

  public static final String JSON_PROPERTY_GEOMETRY_INFO = "geometryInfo";
  private List<GeometrySummary> geometryInfo;

  public static final String JSON_PROPERTY_MATH_MODEL_INFOS = "mathModelInfos";
  private List<MathModelSummary> mathModelInfos;

  public static final String JSON_PROPERTY_BIO_MODEL_INFOS = "bioModelInfos";
  private List<BioModelSummary> bioModelInfos;

  public VCellInfoContainer() { 
  }

  public VCellInfoContainer imageInfos(List<VCImageSummary> imageInfos) {
    this.imageInfos = imageInfos;
    return this;
  }

  public VCellInfoContainer addImageInfosItem(VCImageSummary imageInfosItem) {
    if (this.imageInfos == null) {
      this.imageInfos = new ArrayList<>();
    }
    this.imageInfos.add(imageInfosItem);
    return this;
  }

   /**
   * Get imageInfos
   * @return imageInfos
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE_INFOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<VCImageSummary> getImageInfos() {
    return imageInfos;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE_INFOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImageInfos(List<VCImageSummary> imageInfos) {
    this.imageInfos = imageInfos;
  }


  public VCellInfoContainer geometryInfo(List<GeometrySummary> geometryInfo) {
    this.geometryInfo = geometryInfo;
    return this;
  }

  public VCellInfoContainer addGeometryInfoItem(GeometrySummary geometryInfoItem) {
    if (this.geometryInfo == null) {
      this.geometryInfo = new ArrayList<>();
    }
    this.geometryInfo.add(geometryInfoItem);
    return this;
  }

   /**
   * Get geometryInfo
   * @return geometryInfo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GEOMETRY_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<GeometrySummary> getGeometryInfo() {
    return geometryInfo;
  }


  @JsonProperty(JSON_PROPERTY_GEOMETRY_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGeometryInfo(List<GeometrySummary> geometryInfo) {
    this.geometryInfo = geometryInfo;
  }


  public VCellInfoContainer mathModelInfos(List<MathModelSummary> mathModelInfos) {
    this.mathModelInfos = mathModelInfos;
    return this;
  }

  public VCellInfoContainer addMathModelInfosItem(MathModelSummary mathModelInfosItem) {
    if (this.mathModelInfos == null) {
      this.mathModelInfos = new ArrayList<>();
    }
    this.mathModelInfos.add(mathModelInfosItem);
    return this;
  }

   /**
   * Get mathModelInfos
   * @return mathModelInfos
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MATH_MODEL_INFOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<MathModelSummary> getMathModelInfos() {
    return mathModelInfos;
  }


  @JsonProperty(JSON_PROPERTY_MATH_MODEL_INFOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMathModelInfos(List<MathModelSummary> mathModelInfos) {
    this.mathModelInfos = mathModelInfos;
  }


  public VCellInfoContainer bioModelInfos(List<BioModelSummary> bioModelInfos) {
    this.bioModelInfos = bioModelInfos;
    return this;
  }

  public VCellInfoContainer addBioModelInfosItem(BioModelSummary bioModelInfosItem) {
    if (this.bioModelInfos == null) {
      this.bioModelInfos = new ArrayList<>();
    }
    this.bioModelInfos.add(bioModelInfosItem);
    return this;
  }

   /**
   * Get bioModelInfos
   * @return bioModelInfos
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BIO_MODEL_INFOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BioModelSummary> getBioModelInfos() {
    return bioModelInfos;
  }


  @JsonProperty(JSON_PROPERTY_BIO_MODEL_INFOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBioModelInfos(List<BioModelSummary> bioModelInfos) {
    this.bioModelInfos = bioModelInfos;
  }


  /**
   * Return true if this VCellInfoContainer object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VCellInfoContainer vcellInfoContainer = (VCellInfoContainer) o;
    return Objects.equals(this.imageInfos, vcellInfoContainer.imageInfos) &&
        Objects.equals(this.geometryInfo, vcellInfoContainer.geometryInfo) &&
        Objects.equals(this.mathModelInfos, vcellInfoContainer.mathModelInfos) &&
        Objects.equals(this.bioModelInfos, vcellInfoContainer.bioModelInfos);
  }

  @Override
  public int hashCode() {
    return Objects.hash(imageInfos, geometryInfo, mathModelInfos, bioModelInfos);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VCellInfoContainer {\n");
    sb.append("    imageInfos: ").append(toIndentedString(imageInfos)).append("\n");
    sb.append("    geometryInfo: ").append(toIndentedString(geometryInfo)).append("\n");
    sb.append("    mathModelInfos: ").append(toIndentedString(mathModelInfos)).append("\n");
    sb.append("    bioModelInfos: ").append(toIndentedString(bioModelInfos)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `imageInfos` to the URL query string
    if (getImageInfos() != null) {
      for (int i = 0; i < getImageInfos().size(); i++) {
        if (getImageInfos().get(i) != null) {
          joiner.add(getImageInfos().get(i).toUrlQueryString(String.format("%simageInfos%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `geometryInfo` to the URL query string
    if (getGeometryInfo() != null) {
      for (int i = 0; i < getGeometryInfo().size(); i++) {
        if (getGeometryInfo().get(i) != null) {
          joiner.add(getGeometryInfo().get(i).toUrlQueryString(String.format("%sgeometryInfo%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `mathModelInfos` to the URL query string
    if (getMathModelInfos() != null) {
      for (int i = 0; i < getMathModelInfos().size(); i++) {
        if (getMathModelInfos().get(i) != null) {
          joiner.add(getMathModelInfos().get(i).toUrlQueryString(String.format("%smathModelInfos%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `bioModelInfos` to the URL query string
    if (getBioModelInfos() != null) {
      for (int i = 0; i < getBioModelInfos().size(); i++) {
        if (getBioModelInfos().get(i) != null) {
          joiner.add(getBioModelInfos().get(i).toUrlQueryString(String.format("%sbioModelInfos%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}

