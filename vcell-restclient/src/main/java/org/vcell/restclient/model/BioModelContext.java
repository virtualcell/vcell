/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.vcell.restclient.model.BioModelChildSummary;
import org.vcell.restclient.model.PublicationInfo;
import org.vcell.restclient.model.VCellSoftwareVersion;
import org.vcell.restclient.model.Version;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * BioModelContext
 */
@JsonPropertyOrder({
  BioModelContext.JSON_PROPERTY_VERSION,
  BioModelContext.JSON_PROPERTY_SUMMARY,
  BioModelContext.JSON_PROPERTY_PUBLICATION_INFORMATION,
  BioModelContext.JSON_PROPERTY_V_CELL_SOFTWARE_VERSION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BioModelContext {
  public static final String JSON_PROPERTY_VERSION = "version";
  private Version version;

  public static final String JSON_PROPERTY_SUMMARY = "summary";
  private BioModelChildSummary summary;

  public static final String JSON_PROPERTY_PUBLICATION_INFORMATION = "publicationInformation";
  private List<PublicationInfo> publicationInformation;

  public static final String JSON_PROPERTY_V_CELL_SOFTWARE_VERSION = "vCellSoftwareVersion";
  private VCellSoftwareVersion vCellSoftwareVersion;

  public BioModelContext() { 
  }

  public BioModelContext version(Version version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Version getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(Version version) {
    this.version = version;
  }


  public BioModelContext summary(BioModelChildSummary summary) {
    this.summary = summary;
    return this;
  }

   /**
   * Get summary
   * @return summary
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BioModelChildSummary getSummary() {
    return summary;
  }


  @JsonProperty(JSON_PROPERTY_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSummary(BioModelChildSummary summary) {
    this.summary = summary;
  }


  public BioModelContext publicationInformation(List<PublicationInfo> publicationInformation) {
    this.publicationInformation = publicationInformation;
    return this;
  }

  public BioModelContext addPublicationInformationItem(PublicationInfo publicationInformationItem) {
    if (this.publicationInformation == null) {
      this.publicationInformation = new ArrayList<>();
    }
    this.publicationInformation.add(publicationInformationItem);
    return this;
  }

   /**
   * Get publicationInformation
   * @return publicationInformation
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PUBLICATION_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PublicationInfo> getPublicationInformation() {
    return publicationInformation;
  }


  @JsonProperty(JSON_PROPERTY_PUBLICATION_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublicationInformation(List<PublicationInfo> publicationInformation) {
    this.publicationInformation = publicationInformation;
  }


  public BioModelContext vCellSoftwareVersion(VCellSoftwareVersion vCellSoftwareVersion) {
    this.vCellSoftwareVersion = vCellSoftwareVersion;
    return this;
  }

   /**
   * Get vCellSoftwareVersion
   * @return vCellSoftwareVersion
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_V_CELL_SOFTWARE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VCellSoftwareVersion getvCellSoftwareVersion() {
    return vCellSoftwareVersion;
  }


  @JsonProperty(JSON_PROPERTY_V_CELL_SOFTWARE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setvCellSoftwareVersion(VCellSoftwareVersion vCellSoftwareVersion) {
    this.vCellSoftwareVersion = vCellSoftwareVersion;
  }


  /**
   * Return true if this BioModelContext object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BioModelContext bioModelContext = (BioModelContext) o;
    return Objects.equals(this.version, bioModelContext.version) &&
        Objects.equals(this.summary, bioModelContext.summary) &&
        Objects.equals(this.publicationInformation, bioModelContext.publicationInformation) &&
        Objects.equals(this.vCellSoftwareVersion, bioModelContext.vCellSoftwareVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(version, summary, publicationInformation, vCellSoftwareVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BioModelContext {\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    publicationInformation: ").append(toIndentedString(publicationInformation)).append("\n");
    sb.append("    vCellSoftwareVersion: ").append(toIndentedString(vCellSoftwareVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `version` to the URL query string
    if (getVersion() != null) {
      joiner.add(getVersion().toUrlQueryString(prefix + "version" + suffix));
    }

    // add `summary` to the URL query string
    if (getSummary() != null) {
      joiner.add(getSummary().toUrlQueryString(prefix + "summary" + suffix));
    }

    // add `publicationInformation` to the URL query string
    if (getPublicationInformation() != null) {
      for (int i = 0; i < getPublicationInformation().size(); i++) {
        if (getPublicationInformation().get(i) != null) {
          joiner.add(getPublicationInformation().get(i).toUrlQueryString(String.format("%spublicationInformation%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `vCellSoftwareVersion` to the URL query string
    if (getvCellSoftwareVersion() != null) {
      joiner.add(getvCellSoftwareVersion().toUrlQueryString(prefix + "vCellSoftwareVersion" + suffix));
    }

    return joiner.toString();
  }
}

