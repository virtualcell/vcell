/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.vcell.restclient.model.KeyValue;
import org.vcell.restclient.model.User;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * VCSimulationIdentifier
 */
@JsonPropertyOrder({
  VCSimulationIdentifier.JSON_PROPERTY_SIMULATION_KEY,
  VCSimulationIdentifier.JSON_PROPERTY_OWNER,
  VCSimulationIdentifier.JSON_PROPERTY_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class VCSimulationIdentifier {
  public static final String JSON_PROPERTY_SIMULATION_KEY = "simulationKey";
  private KeyValue simulationKey;

  public static final String JSON_PROPERTY_OWNER = "owner";
  private User owner;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public VCSimulationIdentifier() { 
  }

  public VCSimulationIdentifier simulationKey(KeyValue simulationKey) {
    this.simulationKey = simulationKey;
    return this;
  }

   /**
   * Get simulationKey
   * @return simulationKey
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIMULATION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public KeyValue getSimulationKey() {
    return simulationKey;
  }


  @JsonProperty(JSON_PROPERTY_SIMULATION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSimulationKey(KeyValue simulationKey) {
    this.simulationKey = simulationKey;
  }


  public VCSimulationIdentifier owner(User owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public User getOwner() {
    return owner;
  }


  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwner(User owner) {
    this.owner = owner;
  }


  public VCSimulationIdentifier id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  /**
   * Return true if this VCSimulationIdentifier object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VCSimulationIdentifier vcSimulationIdentifier = (VCSimulationIdentifier) o;
    return Objects.equals(this.simulationKey, vcSimulationIdentifier.simulationKey) &&
        Objects.equals(this.owner, vcSimulationIdentifier.owner) &&
        Objects.equals(this.id, vcSimulationIdentifier.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(simulationKey, owner, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VCSimulationIdentifier {\n");
    sb.append("    simulationKey: ").append(toIndentedString(simulationKey)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `simulationKey` to the URL query string
    if (getSimulationKey() != null) {
      joiner.add(getSimulationKey().toUrlQueryString(prefix + "simulationKey" + suffix));
    }

    // add `owner` to the URL query string
    if (getOwner() != null) {
      joiner.add(getOwner().toUrlQueryString(prefix + "owner" + suffix));
    }

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

