/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.vcell.restclient.model.GroupAccess;
import org.vcell.restclient.model.KeyValue;
import org.vcell.restclient.model.User;
import org.vcell.restclient.model.VersionFlag;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Version
 */
@JsonPropertyOrder({
  Version.JSON_PROPERTY_VERSION_KEY,
  Version.JSON_PROPERTY_ANNOT,
  Version.JSON_PROPERTY_BRANCH_I_D,
  Version.JSON_PROPERTY_BRANCH_POINT_REF_KEY,
  Version.JSON_PROPERTY_DATE,
  Version.JSON_PROPERTY_FLAG,
  Version.JSON_PROPERTY_GROUP_ACCESS,
  Version.JSON_PROPERTY_NAME,
  Version.JSON_PROPERTY_OWNER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Version {
  public static final String JSON_PROPERTY_VERSION_KEY = "versionKey";
  private KeyValue versionKey;

  public static final String JSON_PROPERTY_ANNOT = "annot";
  private String annot;

  public static final String JSON_PROPERTY_BRANCH_I_D = "branchID";
  private BigDecimal branchID;

  public static final String JSON_PROPERTY_BRANCH_POINT_REF_KEY = "branchPointRefKey";
  private KeyValue branchPointRefKey;

  public static final String JSON_PROPERTY_DATE = "date";
  private OffsetDateTime date;

  public static final String JSON_PROPERTY_FLAG = "flag";
  private VersionFlag flag;

  public static final String JSON_PROPERTY_GROUP_ACCESS = "groupAccess";
  private GroupAccess groupAccess;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_OWNER = "owner";
  private User owner;

  public Version() { 
  }

  public Version versionKey(KeyValue versionKey) {
    this.versionKey = versionKey;
    return this;
  }

   /**
   * Get versionKey
   * @return versionKey
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public KeyValue getVersionKey() {
    return versionKey;
  }


  @JsonProperty(JSON_PROPERTY_VERSION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersionKey(KeyValue versionKey) {
    this.versionKey = versionKey;
  }


  public Version annot(String annot) {
    this.annot = annot;
    return this;
  }

   /**
   * Get annot
   * @return annot
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANNOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAnnot() {
    return annot;
  }


  @JsonProperty(JSON_PROPERTY_ANNOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnnot(String annot) {
    this.annot = annot;
  }


  public Version branchID(BigDecimal branchID) {
    this.branchID = branchID;
    return this;
  }

   /**
   * Get branchID
   * @return branchID
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BRANCH_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getBranchID() {
    return branchID;
  }


  @JsonProperty(JSON_PROPERTY_BRANCH_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBranchID(BigDecimal branchID) {
    this.branchID = branchID;
  }


  public Version branchPointRefKey(KeyValue branchPointRefKey) {
    this.branchPointRefKey = branchPointRefKey;
    return this;
  }

   /**
   * Get branchPointRefKey
   * @return branchPointRefKey
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BRANCH_POINT_REF_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public KeyValue getBranchPointRefKey() {
    return branchPointRefKey;
  }


  @JsonProperty(JSON_PROPERTY_BRANCH_POINT_REF_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBranchPointRefKey(KeyValue branchPointRefKey) {
    this.branchPointRefKey = branchPointRefKey;
  }


  public Version date(OffsetDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(OffsetDateTime date) {
    this.date = date;
  }


  public Version flag(VersionFlag flag) {
    this.flag = flag;
    return this;
  }

   /**
   * Get flag
   * @return flag
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VersionFlag getFlag() {
    return flag;
  }


  @JsonProperty(JSON_PROPERTY_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFlag(VersionFlag flag) {
    this.flag = flag;
  }


  public Version groupAccess(GroupAccess groupAccess) {
    this.groupAccess = groupAccess;
    return this;
  }

   /**
   * Get groupAccess
   * @return groupAccess
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUP_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GroupAccess getGroupAccess() {
    return groupAccess;
  }


  @JsonProperty(JSON_PROPERTY_GROUP_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroupAccess(GroupAccess groupAccess) {
    this.groupAccess = groupAccess;
  }


  public Version name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public Version owner(User owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public User getOwner() {
    return owner;
  }


  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwner(User owner) {
    this.owner = owner;
  }


  /**
   * Return true if this Version object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Version version = (Version) o;
    return Objects.equals(this.versionKey, version.versionKey) &&
        Objects.equals(this.annot, version.annot) &&
        Objects.equals(this.branchID, version.branchID) &&
        Objects.equals(this.branchPointRefKey, version.branchPointRefKey) &&
        Objects.equals(this.date, version.date) &&
        Objects.equals(this.flag, version.flag) &&
        Objects.equals(this.groupAccess, version.groupAccess) &&
        Objects.equals(this.name, version.name) &&
        Objects.equals(this.owner, version.owner);
  }

  @Override
  public int hashCode() {
    return Objects.hash(versionKey, annot, branchID, branchPointRefKey, date, flag, groupAccess, name, owner);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Version {\n");
    sb.append("    versionKey: ").append(toIndentedString(versionKey)).append("\n");
    sb.append("    annot: ").append(toIndentedString(annot)).append("\n");
    sb.append("    branchID: ").append(toIndentedString(branchID)).append("\n");
    sb.append("    branchPointRefKey: ").append(toIndentedString(branchPointRefKey)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    flag: ").append(toIndentedString(flag)).append("\n");
    sb.append("    groupAccess: ").append(toIndentedString(groupAccess)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `versionKey` to the URL query string
    if (getVersionKey() != null) {
      joiner.add(getVersionKey().toUrlQueryString(prefix + "versionKey" + suffix));
    }

    // add `annot` to the URL query string
    if (getAnnot() != null) {
      joiner.add(String.format("%sannot%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAnnot()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `branchID` to the URL query string
    if (getBranchID() != null) {
      joiner.add(String.format("%sbranchID%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getBranchID()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `branchPointRefKey` to the URL query string
    if (getBranchPointRefKey() != null) {
      joiner.add(getBranchPointRefKey().toUrlQueryString(prefix + "branchPointRefKey" + suffix));
    }

    // add `date` to the URL query string
    if (getDate() != null) {
      joiner.add(String.format("%sdate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDate()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `flag` to the URL query string
    if (getFlag() != null) {
      joiner.add(getFlag().toUrlQueryString(prefix + "flag" + suffix));
    }

    // add `groupAccess` to the URL query string
    if (getGroupAccess() != null) {
      joiner.add(getGroupAccess().toUrlQueryString(prefix + "groupAccess" + suffix));
    }

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `owner` to the URL query string
    if (getOwner() != null) {
      joiner.add(getOwner().toUrlQueryString(prefix + "owner" + suffix));
    }

    return joiner.toString();
  }
}

