/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * SaveBioModel
 */
@JsonPropertyOrder({
  SaveBioModel.JSON_PROPERTY_BIO_MODEL_X_M_L,
  SaveBioModel.JSON_PROPERTY_NAME,
  SaveBioModel.JSON_PROPERTY_SIMS_REQUIRING_UPDATES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SaveBioModel {
  public static final String JSON_PROPERTY_BIO_MODEL_X_M_L = "bioModelXML";
  private String bioModelXML;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_SIMS_REQUIRING_UPDATES = "simsRequiringUpdates";
  private List<String> simsRequiringUpdates;

  public SaveBioModel() { 
  }

  public SaveBioModel bioModelXML(String bioModelXML) {
    this.bioModelXML = bioModelXML;
    return this;
  }

   /**
   * Get bioModelXML
   * @return bioModelXML
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BIO_MODEL_X_M_L)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBioModelXML() {
    return bioModelXML;
  }


  @JsonProperty(JSON_PROPERTY_BIO_MODEL_X_M_L)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBioModelXML(String bioModelXML) {
    this.bioModelXML = bioModelXML;
  }


  public SaveBioModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public SaveBioModel simsRequiringUpdates(List<String> simsRequiringUpdates) {
    this.simsRequiringUpdates = simsRequiringUpdates;
    return this;
  }

  public SaveBioModel addSimsRequiringUpdatesItem(String simsRequiringUpdatesItem) {
    if (this.simsRequiringUpdates == null) {
      this.simsRequiringUpdates = new ArrayList<>();
    }
    this.simsRequiringUpdates.add(simsRequiringUpdatesItem);
    return this;
  }

   /**
   * Get simsRequiringUpdates
   * @return simsRequiringUpdates
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIMS_REQUIRING_UPDATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getSimsRequiringUpdates() {
    return simsRequiringUpdates;
  }


  @JsonProperty(JSON_PROPERTY_SIMS_REQUIRING_UPDATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSimsRequiringUpdates(List<String> simsRequiringUpdates) {
    this.simsRequiringUpdates = simsRequiringUpdates;
  }


  /**
   * Return true if this SaveBioModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SaveBioModel saveBioModel = (SaveBioModel) o;
    return Objects.equals(this.bioModelXML, saveBioModel.bioModelXML) &&
        Objects.equals(this.name, saveBioModel.name) &&
        Objects.equals(this.simsRequiringUpdates, saveBioModel.simsRequiringUpdates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bioModelXML, name, simsRequiringUpdates);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SaveBioModel {\n");
    sb.append("    bioModelXML: ").append(toIndentedString(bioModelXML)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    simsRequiringUpdates: ").append(toIndentedString(simsRequiringUpdates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `bioModelXML` to the URL query string
    if (getBioModelXML() != null) {
      joiner.add(String.format("%sbioModelXML%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getBioModelXML()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `simsRequiringUpdates` to the URL query string
    if (getSimsRequiringUpdates() != null) {
      for (int i = 0; i < getSimsRequiringUpdates().size(); i++) {
        joiner.add(String.format("%ssimsRequiringUpdates%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getSimsRequiringUpdates().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    return joiner.toString();
  }
}

