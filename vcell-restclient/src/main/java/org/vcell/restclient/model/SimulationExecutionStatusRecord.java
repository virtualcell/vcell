/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.vcell.restclient.model.HtcJobID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * SimulationExecutionStatusRecord
 */
@JsonPropertyOrder({
  SimulationExecutionStatusRecord.JSON_PROPERTY_FIELD_START_DATE,
  SimulationExecutionStatusRecord.JSON_PROPERTY_FIELD_LATEST_UPDATE_DATE,
  SimulationExecutionStatusRecord.JSON_PROPERTY_FIELD_END_DATE,
  SimulationExecutionStatusRecord.JSON_PROPERTY_FIELD_COMPUTE_HOST,
  SimulationExecutionStatusRecord.JSON_PROPERTY_FIELD_HAS_DATA,
  SimulationExecutionStatusRecord.JSON_PROPERTY_FIELD_HTC_JOB_I_D
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SimulationExecutionStatusRecord {
  public static final String JSON_PROPERTY_FIELD_START_DATE = "fieldStartDate";
  private OffsetDateTime fieldStartDate;

  public static final String JSON_PROPERTY_FIELD_LATEST_UPDATE_DATE = "fieldLatestUpdateDate";
  private OffsetDateTime fieldLatestUpdateDate;

  public static final String JSON_PROPERTY_FIELD_END_DATE = "fieldEndDate";
  private OffsetDateTime fieldEndDate;

  public static final String JSON_PROPERTY_FIELD_COMPUTE_HOST = "fieldComputeHost";
  private String fieldComputeHost;

  public static final String JSON_PROPERTY_FIELD_HAS_DATA = "fieldHasData";
  private Boolean fieldHasData;

  public static final String JSON_PROPERTY_FIELD_HTC_JOB_I_D = "fieldHtcJobID";
  private HtcJobID fieldHtcJobID;

  public SimulationExecutionStatusRecord() { 
  }

  public SimulationExecutionStatusRecord fieldStartDate(OffsetDateTime fieldStartDate) {
    this.fieldStartDate = fieldStartDate;
    return this;
  }

   /**
   * Get fieldStartDate
   * @return fieldStartDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIELD_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getFieldStartDate() {
    return fieldStartDate;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFieldStartDate(OffsetDateTime fieldStartDate) {
    this.fieldStartDate = fieldStartDate;
  }


  public SimulationExecutionStatusRecord fieldLatestUpdateDate(OffsetDateTime fieldLatestUpdateDate) {
    this.fieldLatestUpdateDate = fieldLatestUpdateDate;
    return this;
  }

   /**
   * Get fieldLatestUpdateDate
   * @return fieldLatestUpdateDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIELD_LATEST_UPDATE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getFieldLatestUpdateDate() {
    return fieldLatestUpdateDate;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_LATEST_UPDATE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFieldLatestUpdateDate(OffsetDateTime fieldLatestUpdateDate) {
    this.fieldLatestUpdateDate = fieldLatestUpdateDate;
  }


  public SimulationExecutionStatusRecord fieldEndDate(OffsetDateTime fieldEndDate) {
    this.fieldEndDate = fieldEndDate;
    return this;
  }

   /**
   * Get fieldEndDate
   * @return fieldEndDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIELD_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getFieldEndDate() {
    return fieldEndDate;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFieldEndDate(OffsetDateTime fieldEndDate) {
    this.fieldEndDate = fieldEndDate;
  }


  public SimulationExecutionStatusRecord fieldComputeHost(String fieldComputeHost) {
    this.fieldComputeHost = fieldComputeHost;
    return this;
  }

   /**
   * Get fieldComputeHost
   * @return fieldComputeHost
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIELD_COMPUTE_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFieldComputeHost() {
    return fieldComputeHost;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_COMPUTE_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFieldComputeHost(String fieldComputeHost) {
    this.fieldComputeHost = fieldComputeHost;
  }


  public SimulationExecutionStatusRecord fieldHasData(Boolean fieldHasData) {
    this.fieldHasData = fieldHasData;
    return this;
  }

   /**
   * Get fieldHasData
   * @return fieldHasData
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIELD_HAS_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFieldHasData() {
    return fieldHasData;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_HAS_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFieldHasData(Boolean fieldHasData) {
    this.fieldHasData = fieldHasData;
  }


  public SimulationExecutionStatusRecord fieldHtcJobID(HtcJobID fieldHtcJobID) {
    this.fieldHtcJobID = fieldHtcJobID;
    return this;
  }

   /**
   * Get fieldHtcJobID
   * @return fieldHtcJobID
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIELD_HTC_JOB_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public HtcJobID getFieldHtcJobID() {
    return fieldHtcJobID;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_HTC_JOB_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFieldHtcJobID(HtcJobID fieldHtcJobID) {
    this.fieldHtcJobID = fieldHtcJobID;
  }


  /**
   * Return true if this SimulationExecutionStatusRecord object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimulationExecutionStatusRecord simulationExecutionStatusRecord = (SimulationExecutionStatusRecord) o;
    return Objects.equals(this.fieldStartDate, simulationExecutionStatusRecord.fieldStartDate) &&
        Objects.equals(this.fieldLatestUpdateDate, simulationExecutionStatusRecord.fieldLatestUpdateDate) &&
        Objects.equals(this.fieldEndDate, simulationExecutionStatusRecord.fieldEndDate) &&
        Objects.equals(this.fieldComputeHost, simulationExecutionStatusRecord.fieldComputeHost) &&
        Objects.equals(this.fieldHasData, simulationExecutionStatusRecord.fieldHasData) &&
        Objects.equals(this.fieldHtcJobID, simulationExecutionStatusRecord.fieldHtcJobID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fieldStartDate, fieldLatestUpdateDate, fieldEndDate, fieldComputeHost, fieldHasData, fieldHtcJobID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimulationExecutionStatusRecord {\n");
    sb.append("    fieldStartDate: ").append(toIndentedString(fieldStartDate)).append("\n");
    sb.append("    fieldLatestUpdateDate: ").append(toIndentedString(fieldLatestUpdateDate)).append("\n");
    sb.append("    fieldEndDate: ").append(toIndentedString(fieldEndDate)).append("\n");
    sb.append("    fieldComputeHost: ").append(toIndentedString(fieldComputeHost)).append("\n");
    sb.append("    fieldHasData: ").append(toIndentedString(fieldHasData)).append("\n");
    sb.append("    fieldHtcJobID: ").append(toIndentedString(fieldHtcJobID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `fieldStartDate` to the URL query string
    if (getFieldStartDate() != null) {
      joiner.add(String.format("%sfieldStartDate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFieldStartDate()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `fieldLatestUpdateDate` to the URL query string
    if (getFieldLatestUpdateDate() != null) {
      joiner.add(String.format("%sfieldLatestUpdateDate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFieldLatestUpdateDate()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `fieldEndDate` to the URL query string
    if (getFieldEndDate() != null) {
      joiner.add(String.format("%sfieldEndDate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFieldEndDate()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `fieldComputeHost` to the URL query string
    if (getFieldComputeHost() != null) {
      joiner.add(String.format("%sfieldComputeHost%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFieldComputeHost()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `fieldHasData` to the URL query string
    if (getFieldHasData() != null) {
      joiner.add(String.format("%sfieldHasData%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFieldHasData()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `fieldHtcJobID` to the URL query string
    if (getFieldHtcJobID() != null) {
      joiner.add(getFieldHtcJobID().toUrlQueryString(prefix + "fieldHtcJobID" + suffix));
    }

    return joiner.toString();
  }
}

