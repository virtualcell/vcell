/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * VersionableType
 */
@JsonPropertyOrder({
  VersionableType.JSON_PROPERTY_V_TYPE,
  VersionableType.JSON_PROPERTY_NAME,
  VersionableType.JSON_PROPERTY_V_CLASS,
  VersionableType.JSON_PROPERTY_B_TOP_LEVEL,
  VersionableType.JSON_PROPERTY_CODE,
  VersionableType.JSON_PROPERTY_IS_TOP_LEVEL,
  VersionableType.JSON_PROPERTY_TYPE_NAME,
  VersionableType.JSON_PROPERTY_VERSION_CLASS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class VersionableType {
  public static final String JSON_PROPERTY_V_TYPE = "vType";
  private Integer vType;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_V_CLASS = "vClass";
  private Object vClass;

  public static final String JSON_PROPERTY_B_TOP_LEVEL = "bTopLevel";
  private Boolean bTopLevel;

  public static final String JSON_PROPERTY_CODE = "code";
  private Integer code;

  public static final String JSON_PROPERTY_IS_TOP_LEVEL = "isTopLevel";
  private Boolean isTopLevel;

  public static final String JSON_PROPERTY_TYPE_NAME = "typeName";
  private String typeName;

  public static final String JSON_PROPERTY_VERSION_CLASS = "versionClass";
  private Object versionClass;

  public VersionableType() { 
  }

  public VersionableType vType(Integer vType) {
    this.vType = vType;
    return this;
  }

   /**
   * Get vType
   * @return vType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_V_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getvType() {
    return vType;
  }


  @JsonProperty(JSON_PROPERTY_V_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setvType(Integer vType) {
    this.vType = vType;
  }


  public VersionableType name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public VersionableType vClass(Object vClass) {
    this.vClass = vClass;
    return this;
  }

   /**
   * Get vClass
   * @return vClass
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_V_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getvClass() {
    return vClass;
  }


  @JsonProperty(JSON_PROPERTY_V_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setvClass(Object vClass) {
    this.vClass = vClass;
  }


  public VersionableType bTopLevel(Boolean bTopLevel) {
    this.bTopLevel = bTopLevel;
    return this;
  }

   /**
   * Get bTopLevel
   * @return bTopLevel
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_B_TOP_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getbTopLevel() {
    return bTopLevel;
  }


  @JsonProperty(JSON_PROPERTY_B_TOP_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setbTopLevel(Boolean bTopLevel) {
    this.bTopLevel = bTopLevel;
  }


  public VersionableType code(Integer code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(Integer code) {
    this.code = code;
  }


  public VersionableType isTopLevel(Boolean isTopLevel) {
    this.isTopLevel = isTopLevel;
    return this;
  }

   /**
   * Get isTopLevel
   * @return isTopLevel
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_TOP_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsTopLevel() {
    return isTopLevel;
  }


  @JsonProperty(JSON_PROPERTY_IS_TOP_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsTopLevel(Boolean isTopLevel) {
    this.isTopLevel = isTopLevel;
  }


  public VersionableType typeName(String typeName) {
    this.typeName = typeName;
    return this;
  }

   /**
   * Get typeName
   * @return typeName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTypeName() {
    return typeName;
  }


  @JsonProperty(JSON_PROPERTY_TYPE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTypeName(String typeName) {
    this.typeName = typeName;
  }


  public VersionableType versionClass(Object versionClass) {
    this.versionClass = versionClass;
    return this;
  }

   /**
   * Get versionClass
   * @return versionClass
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getVersionClass() {
    return versionClass;
  }


  @JsonProperty(JSON_PROPERTY_VERSION_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersionClass(Object versionClass) {
    this.versionClass = versionClass;
  }


  /**
   * Return true if this VersionableType object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VersionableType versionableType = (VersionableType) o;
    return Objects.equals(this.vType, versionableType.vType) &&
        Objects.equals(this.name, versionableType.name) &&
        Objects.equals(this.vClass, versionableType.vClass) &&
        Objects.equals(this.bTopLevel, versionableType.bTopLevel) &&
        Objects.equals(this.code, versionableType.code) &&
        Objects.equals(this.isTopLevel, versionableType.isTopLevel) &&
        Objects.equals(this.typeName, versionableType.typeName) &&
        Objects.equals(this.versionClass, versionableType.versionClass);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vType, name, vClass, bTopLevel, code, isTopLevel, typeName, versionClass);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VersionableType {\n");
    sb.append("    vType: ").append(toIndentedString(vType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    vClass: ").append(toIndentedString(vClass)).append("\n");
    sb.append("    bTopLevel: ").append(toIndentedString(bTopLevel)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    isTopLevel: ").append(toIndentedString(isTopLevel)).append("\n");
    sb.append("    typeName: ").append(toIndentedString(typeName)).append("\n");
    sb.append("    versionClass: ").append(toIndentedString(versionClass)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `vType` to the URL query string
    if (getvType() != null) {
      joiner.add(String.format("%svType%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getvType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `vClass` to the URL query string
    if (getvClass() != null) {
      joiner.add(String.format("%svClass%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getvClass()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `bTopLevel` to the URL query string
    if (getbTopLevel() != null) {
      joiner.add(String.format("%sbTopLevel%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getbTopLevel()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `code` to the URL query string
    if (getCode() != null) {
      joiner.add(String.format("%scode%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCode()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `isTopLevel` to the URL query string
    if (getIsTopLevel() != null) {
      joiner.add(String.format("%sisTopLevel%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getIsTopLevel()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `typeName` to the URL query string
    if (getTypeName() != null) {
      joiner.add(String.format("%stypeName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTypeName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `versionClass` to the URL query string
    if (getVersionClass() != null) {
      joiner.add(String.format("%sversionClass%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getVersionClass()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

