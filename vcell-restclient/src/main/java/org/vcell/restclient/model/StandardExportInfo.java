/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.vcell.restclient.model.AnnotatedFunctionDTO;
import org.vcell.restclient.model.GeometrySpecDTO;
import org.vcell.restclient.model.TimeSpecs;
import org.vcell.restclient.model.VariableSpecs;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * StandardExportInfo
 */
@JsonPropertyOrder({
  StandardExportInfo.JSON_PROPERTY_OUTPUT_CONTEXT,
  StandardExportInfo.JSON_PROPERTY_CONTEXT_NAME,
  StandardExportInfo.JSON_PROPERTY_SIMULATION_NAME,
  StandardExportInfo.JSON_PROPERTY_SIMULATION_KEY,
  StandardExportInfo.JSON_PROPERTY_SIMULATION_JOB,
  StandardExportInfo.JSON_PROPERTY_GEOMETRY_SPECS,
  StandardExportInfo.JSON_PROPERTY_TIME_SPECS,
  StandardExportInfo.JSON_PROPERTY_VARIABLE_SPECS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class StandardExportInfo {
  public static final String JSON_PROPERTY_OUTPUT_CONTEXT = "outputContext";
  private List<AnnotatedFunctionDTO> outputContext;

  public static final String JSON_PROPERTY_CONTEXT_NAME = "contextName";
  private String contextName;

  public static final String JSON_PROPERTY_SIMULATION_NAME = "simulationName";
  private String simulationName;

  public static final String JSON_PROPERTY_SIMULATION_KEY = "simulationKey";
  private String simulationKey;

  public static final String JSON_PROPERTY_SIMULATION_JOB = "simulationJob";
  private Integer simulationJob;

  public static final String JSON_PROPERTY_GEOMETRY_SPECS = "geometrySpecs";
  private GeometrySpecDTO geometrySpecs;

  public static final String JSON_PROPERTY_TIME_SPECS = "timeSpecs";
  private TimeSpecs timeSpecs;

  public static final String JSON_PROPERTY_VARIABLE_SPECS = "variableSpecs";
  private VariableSpecs variableSpecs;

  public StandardExportInfo() { 
  }

  public StandardExportInfo outputContext(List<AnnotatedFunctionDTO> outputContext) {
    this.outputContext = outputContext;
    return this;
  }

  public StandardExportInfo addOutputContextItem(AnnotatedFunctionDTO outputContextItem) {
    if (this.outputContext == null) {
      this.outputContext = new ArrayList<>();
    }
    this.outputContext.add(outputContextItem);
    return this;
  }

   /**
   * Get outputContext
   * @return outputContext
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTPUT_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AnnotatedFunctionDTO> getOutputContext() {
    return outputContext;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUT_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutputContext(List<AnnotatedFunctionDTO> outputContext) {
    this.outputContext = outputContext;
  }


  public StandardExportInfo contextName(String contextName) {
    this.contextName = contextName;
    return this;
  }

   /**
   * Get contextName
   * @return contextName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContextName() {
    return contextName;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextName(String contextName) {
    this.contextName = contextName;
  }


  public StandardExportInfo simulationName(String simulationName) {
    this.simulationName = simulationName;
    return this;
  }

   /**
   * Get simulationName
   * @return simulationName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIMULATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSimulationName() {
    return simulationName;
  }


  @JsonProperty(JSON_PROPERTY_SIMULATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSimulationName(String simulationName) {
    this.simulationName = simulationName;
  }


  public StandardExportInfo simulationKey(String simulationKey) {
    this.simulationKey = simulationKey;
    return this;
  }

   /**
   * Get simulationKey
   * @return simulationKey
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIMULATION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSimulationKey() {
    return simulationKey;
  }


  @JsonProperty(JSON_PROPERTY_SIMULATION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSimulationKey(String simulationKey) {
    this.simulationKey = simulationKey;
  }


  public StandardExportInfo simulationJob(Integer simulationJob) {
    this.simulationJob = simulationJob;
    return this;
  }

   /**
   * Get simulationJob
   * @return simulationJob
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIMULATION_JOB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSimulationJob() {
    return simulationJob;
  }


  @JsonProperty(JSON_PROPERTY_SIMULATION_JOB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSimulationJob(Integer simulationJob) {
    this.simulationJob = simulationJob;
  }


  public StandardExportInfo geometrySpecs(GeometrySpecDTO geometrySpecs) {
    this.geometrySpecs = geometrySpecs;
    return this;
  }

   /**
   * Get geometrySpecs
   * @return geometrySpecs
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GEOMETRY_SPECS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GeometrySpecDTO getGeometrySpecs() {
    return geometrySpecs;
  }


  @JsonProperty(JSON_PROPERTY_GEOMETRY_SPECS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGeometrySpecs(GeometrySpecDTO geometrySpecs) {
    this.geometrySpecs = geometrySpecs;
  }


  public StandardExportInfo timeSpecs(TimeSpecs timeSpecs) {
    this.timeSpecs = timeSpecs;
    return this;
  }

   /**
   * Get timeSpecs
   * @return timeSpecs
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIME_SPECS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TimeSpecs getTimeSpecs() {
    return timeSpecs;
  }


  @JsonProperty(JSON_PROPERTY_TIME_SPECS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeSpecs(TimeSpecs timeSpecs) {
    this.timeSpecs = timeSpecs;
  }


  public StandardExportInfo variableSpecs(VariableSpecs variableSpecs) {
    this.variableSpecs = variableSpecs;
    return this;
  }

   /**
   * Get variableSpecs
   * @return variableSpecs
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VARIABLE_SPECS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VariableSpecs getVariableSpecs() {
    return variableSpecs;
  }


  @JsonProperty(JSON_PROPERTY_VARIABLE_SPECS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVariableSpecs(VariableSpecs variableSpecs) {
    this.variableSpecs = variableSpecs;
  }


  /**
   * Return true if this StandardExportInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StandardExportInfo standardExportInfo = (StandardExportInfo) o;
    return Objects.equals(this.outputContext, standardExportInfo.outputContext) &&
        Objects.equals(this.contextName, standardExportInfo.contextName) &&
        Objects.equals(this.simulationName, standardExportInfo.simulationName) &&
        Objects.equals(this.simulationKey, standardExportInfo.simulationKey) &&
        Objects.equals(this.simulationJob, standardExportInfo.simulationJob) &&
        Objects.equals(this.geometrySpecs, standardExportInfo.geometrySpecs) &&
        Objects.equals(this.timeSpecs, standardExportInfo.timeSpecs) &&
        Objects.equals(this.variableSpecs, standardExportInfo.variableSpecs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(outputContext, contextName, simulationName, simulationKey, simulationJob, geometrySpecs, timeSpecs, variableSpecs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StandardExportInfo {\n");
    sb.append("    outputContext: ").append(toIndentedString(outputContext)).append("\n");
    sb.append("    contextName: ").append(toIndentedString(contextName)).append("\n");
    sb.append("    simulationName: ").append(toIndentedString(simulationName)).append("\n");
    sb.append("    simulationKey: ").append(toIndentedString(simulationKey)).append("\n");
    sb.append("    simulationJob: ").append(toIndentedString(simulationJob)).append("\n");
    sb.append("    geometrySpecs: ").append(toIndentedString(geometrySpecs)).append("\n");
    sb.append("    timeSpecs: ").append(toIndentedString(timeSpecs)).append("\n");
    sb.append("    variableSpecs: ").append(toIndentedString(variableSpecs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `outputContext` to the URL query string
    if (getOutputContext() != null) {
      for (int i = 0; i < getOutputContext().size(); i++) {
        if (getOutputContext().get(i) != null) {
          joiner.add(getOutputContext().get(i).toUrlQueryString(String.format("%soutputContext%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `contextName` to the URL query string
    if (getContextName() != null) {
      joiner.add(String.format("%scontextName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getContextName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `simulationName` to the URL query string
    if (getSimulationName() != null) {
      joiner.add(String.format("%ssimulationName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSimulationName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `simulationKey` to the URL query string
    if (getSimulationKey() != null) {
      joiner.add(String.format("%ssimulationKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSimulationKey()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `simulationJob` to the URL query string
    if (getSimulationJob() != null) {
      joiner.add(String.format("%ssimulationJob%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSimulationJob()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `geometrySpecs` to the URL query string
    if (getGeometrySpecs() != null) {
      joiner.add(getGeometrySpecs().toUrlQueryString(prefix + "geometrySpecs" + suffix));
    }

    // add `timeSpecs` to the URL query string
    if (getTimeSpecs() != null) {
      joiner.add(getTimeSpecs().toUrlQueryString(prefix + "timeSpecs" + suffix));
    }

    // add `variableSpecs` to the URL query string
    if (getVariableSpecs() != null) {
      joiner.add(getVariableSpecs().toUrlQueryString(prefix + "variableSpecs" + suffix));
    }

    return joiner.toString();
  }
}

