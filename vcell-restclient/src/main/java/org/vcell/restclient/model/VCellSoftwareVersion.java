/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.vcell.restclient.model.VCellSite;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * VCellSoftwareVersion
 */
@JsonPropertyOrder({
  VCellSoftwareVersion.JSON_PROPERTY_SOFTWARE_VERSION_STRING,
  VCellSoftwareVersion.JSON_PROPERTY_VCELL_SITE,
  VCellSoftwareVersion.JSON_PROPERTY_BUILD_NUMBER,
  VCellSoftwareVersion.JSON_PROPERTY_VERSION_NUMBER,
  VCellSoftwareVersion.JSON_PROPERTY_MAJOR_VERSION,
  VCellSoftwareVersion.JSON_PROPERTY_MINOR_VERSION,
  VCellSoftwareVersion.JSON_PROPERTY_PATCH_VERSION,
  VCellSoftwareVersion.JSON_PROPERTY_BUILD_INT,
  VCellSoftwareVersion.JSON_PROPERTY_SITE,
  VCellSoftwareVersion.JSON_PROPERTY_DESCRIPTION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class VCellSoftwareVersion {
  public static final String JSON_PROPERTY_SOFTWARE_VERSION_STRING = "softwareVersionString";
  private String softwareVersionString;

  public static final String JSON_PROPERTY_VCELL_SITE = "vcellSite";
  private VCellSite vcellSite;

  public static final String JSON_PROPERTY_BUILD_NUMBER = "buildNumber";
  private String buildNumber;

  public static final String JSON_PROPERTY_VERSION_NUMBER = "versionNumber";
  private String versionNumber;

  public static final String JSON_PROPERTY_MAJOR_VERSION = "majorVersion";
  private Integer majorVersion;

  public static final String JSON_PROPERTY_MINOR_VERSION = "minorVersion";
  private Integer minorVersion;

  public static final String JSON_PROPERTY_PATCH_VERSION = "patchVersion";
  private Integer patchVersion;

  public static final String JSON_PROPERTY_BUILD_INT = "buildInt";
  private Integer buildInt;

  public static final String JSON_PROPERTY_SITE = "site";
  private VCellSite site;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public VCellSoftwareVersion() { 
  }

  public VCellSoftwareVersion softwareVersionString(String softwareVersionString) {
    this.softwareVersionString = softwareVersionString;
    return this;
  }

   /**
   * Get softwareVersionString
   * @return softwareVersionString
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOFTWARE_VERSION_STRING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSoftwareVersionString() {
    return softwareVersionString;
  }


  @JsonProperty(JSON_PROPERTY_SOFTWARE_VERSION_STRING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSoftwareVersionString(String softwareVersionString) {
    this.softwareVersionString = softwareVersionString;
  }


  public VCellSoftwareVersion vcellSite(VCellSite vcellSite) {
    this.vcellSite = vcellSite;
    return this;
  }

   /**
   * Get vcellSite
   * @return vcellSite
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VCELL_SITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VCellSite getVcellSite() {
    return vcellSite;
  }


  @JsonProperty(JSON_PROPERTY_VCELL_SITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVcellSite(VCellSite vcellSite) {
    this.vcellSite = vcellSite;
  }


  public VCellSoftwareVersion buildNumber(String buildNumber) {
    this.buildNumber = buildNumber;
    return this;
  }

   /**
   * Get buildNumber
   * @return buildNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUILD_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBuildNumber() {
    return buildNumber;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildNumber(String buildNumber) {
    this.buildNumber = buildNumber;
  }


  public VCellSoftwareVersion versionNumber(String versionNumber) {
    this.versionNumber = versionNumber;
    return this;
  }

   /**
   * Get versionNumber
   * @return versionNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersionNumber() {
    return versionNumber;
  }


  @JsonProperty(JSON_PROPERTY_VERSION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersionNumber(String versionNumber) {
    this.versionNumber = versionNumber;
  }


  public VCellSoftwareVersion majorVersion(Integer majorVersion) {
    this.majorVersion = majorVersion;
    return this;
  }

   /**
   * Get majorVersion
   * @return majorVersion
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAJOR_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMajorVersion() {
    return majorVersion;
  }


  @JsonProperty(JSON_PROPERTY_MAJOR_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMajorVersion(Integer majorVersion) {
    this.majorVersion = majorVersion;
  }


  public VCellSoftwareVersion minorVersion(Integer minorVersion) {
    this.minorVersion = minorVersion;
    return this;
  }

   /**
   * Get minorVersion
   * @return minorVersion
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MINOR_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMinorVersion() {
    return minorVersion;
  }


  @JsonProperty(JSON_PROPERTY_MINOR_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinorVersion(Integer minorVersion) {
    this.minorVersion = minorVersion;
  }


  public VCellSoftwareVersion patchVersion(Integer patchVersion) {
    this.patchVersion = patchVersion;
    return this;
  }

   /**
   * Get patchVersion
   * @return patchVersion
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PATCH_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPatchVersion() {
    return patchVersion;
  }


  @JsonProperty(JSON_PROPERTY_PATCH_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPatchVersion(Integer patchVersion) {
    this.patchVersion = patchVersion;
  }


  public VCellSoftwareVersion buildInt(Integer buildInt) {
    this.buildInt = buildInt;
    return this;
  }

   /**
   * Get buildInt
   * @return buildInt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUILD_INT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getBuildInt() {
    return buildInt;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_INT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildInt(Integer buildInt) {
    this.buildInt = buildInt;
  }


  public VCellSoftwareVersion site(VCellSite site) {
    this.site = site;
    return this;
  }

   /**
   * Get site
   * @return site
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VCellSite getSite() {
    return site;
  }


  @JsonProperty(JSON_PROPERTY_SITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSite(VCellSite site) {
    this.site = site;
  }


  public VCellSoftwareVersion description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  /**
   * Return true if this VCellSoftwareVersion object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VCellSoftwareVersion vcellSoftwareVersion = (VCellSoftwareVersion) o;
    return Objects.equals(this.softwareVersionString, vcellSoftwareVersion.softwareVersionString) &&
        Objects.equals(this.vcellSite, vcellSoftwareVersion.vcellSite) &&
        Objects.equals(this.buildNumber, vcellSoftwareVersion.buildNumber) &&
        Objects.equals(this.versionNumber, vcellSoftwareVersion.versionNumber) &&
        Objects.equals(this.majorVersion, vcellSoftwareVersion.majorVersion) &&
        Objects.equals(this.minorVersion, vcellSoftwareVersion.minorVersion) &&
        Objects.equals(this.patchVersion, vcellSoftwareVersion.patchVersion) &&
        Objects.equals(this.buildInt, vcellSoftwareVersion.buildInt) &&
        Objects.equals(this.site, vcellSoftwareVersion.site) &&
        Objects.equals(this.description, vcellSoftwareVersion.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(softwareVersionString, vcellSite, buildNumber, versionNumber, majorVersion, minorVersion, patchVersion, buildInt, site, description);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VCellSoftwareVersion {\n");
    sb.append("    softwareVersionString: ").append(toIndentedString(softwareVersionString)).append("\n");
    sb.append("    vcellSite: ").append(toIndentedString(vcellSite)).append("\n");
    sb.append("    buildNumber: ").append(toIndentedString(buildNumber)).append("\n");
    sb.append("    versionNumber: ").append(toIndentedString(versionNumber)).append("\n");
    sb.append("    majorVersion: ").append(toIndentedString(majorVersion)).append("\n");
    sb.append("    minorVersion: ").append(toIndentedString(minorVersion)).append("\n");
    sb.append("    patchVersion: ").append(toIndentedString(patchVersion)).append("\n");
    sb.append("    buildInt: ").append(toIndentedString(buildInt)).append("\n");
    sb.append("    site: ").append(toIndentedString(site)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `softwareVersionString` to the URL query string
    if (getSoftwareVersionString() != null) {
      joiner.add(String.format("%ssoftwareVersionString%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSoftwareVersionString()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `vcellSite` to the URL query string
    if (getVcellSite() != null) {
      joiner.add(String.format("%svcellSite%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getVcellSite()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `buildNumber` to the URL query string
    if (getBuildNumber() != null) {
      joiner.add(String.format("%sbuildNumber%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getBuildNumber()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `versionNumber` to the URL query string
    if (getVersionNumber() != null) {
      joiner.add(String.format("%sversionNumber%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getVersionNumber()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `majorVersion` to the URL query string
    if (getMajorVersion() != null) {
      joiner.add(String.format("%smajorVersion%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMajorVersion()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `minorVersion` to the URL query string
    if (getMinorVersion() != null) {
      joiner.add(String.format("%sminorVersion%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMinorVersion()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `patchVersion` to the URL query string
    if (getPatchVersion() != null) {
      joiner.add(String.format("%spatchVersion%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPatchVersion()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `buildInt` to the URL query string
    if (getBuildInt() != null) {
      joiner.add(String.format("%sbuildInt%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getBuildInt()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `site` to the URL query string
    if (getSite() != null) {
      joiner.add(String.format("%ssite%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSite()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDescription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

