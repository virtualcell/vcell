/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Gets or Sets DetailedState
 */
public enum DetailedState {
  
  UNKNOWN("UNKNOWN"),
  
  DATAMOVEREVENT_MOVED("DATAMOVEREVENT_MOVED"),
  
  WORKEREVENT_WORKERALIVE("WORKEREVENT_WORKERALIVE"),
  
  JOB_WAITING("JOB_WAITING"),
  
  JOB_QUEUED("JOB_QUEUED"),
  
  JOB_QUEUED_RETRY("JOB_QUEUED_RETRY"),
  
  JOB_DISPATCHED("JOB_DISPATCHED"),
  
  JOB_ACCEPTED("JOB_ACCEPTED"),
  
  SOLVER_READY("SOLVER_READY"),
  
  SOLVER_STARTING_INIT("SOLVER_STARTING_INIT"),
  
  SOLVEREVENT_STARTING_PROC_GEOM("SOLVEREVENT_STARTING_PROC_GEOM"),
  
  SOLVEREVENT_STARTING_RESAMPLE_FD("SOLVEREVENT_STARTING_RESAMPLE_FD"),
  
  SOLVER_RUNNING_INIT("SOLVER_RUNNING_INIT"),
  
  SOLVER_RUNNING_INIT_INPUT_FILE("SOLVER_RUNNING_INIT_INPUT_FILE"),
  
  SOLVER_RUNNING_INIT_CODEGEN("SOLVER_RUNNING_INIT_CODEGEN"),
  
  SOLVER_RUNNING_INIT_COMPILING("SOLVER_RUNNING_INIT_COMPILING"),
  
  SOLVER_RUNNING_INIT_COMPILECMD("SOLVER_RUNNING_INIT_COMPILECMD"),
  
  SOLVER_RUNNING_INIT_COMPILE_OK("SOLVER_RUNNING_INIT_COMPILE_OK"),
  
  SOLVER_RUNNING_INIT_LINKING("SOLVER_RUNNING_INIT_LINKING"),
  
  SOLVER_RUNNING_INIT_LINKCMD("SOLVER_RUNNING_INIT_LINKCMD"),
  
  SOLVER_RUNNING_INIT_LINK_OK("SOLVER_RUNNING_INIT_LINK_OK"),
  
  SOLVER_RUNNING_INIT_COMPILELINK_OK("SOLVER_RUNNING_INIT_COMPILELINK_OK"),
  
  SOLVEREVENT_STARTING_INIT("SOLVEREVENT_STARTING_INIT"),
  
  SOLVEREVENT_STARTING_CODEGEN("SOLVEREVENT_STARTING_CODEGEN"),
  
  SOLVEREVENT_STARTING_COMPILELINK("SOLVEREVENT_STARTING_COMPILELINK"),
  
  SOLVEREVENT_STARTING_INPUT_FILE("SOLVEREVENT_STARTING_INPUT_FILE"),
  
  SOLVEREVENT_STARTING("SOLVEREVENT_STARTING"),
  
  SOLVEREVENT_STARTING_SUBMITTING("SOLVEREVENT_STARTING_SUBMITTING"),
  
  SOLVEREVENT_STARTING_SUBMITTED("SOLVEREVENT_STARTING_SUBMITTED"),
  
  WORKEREVENT_STARTING("WORKEREVENT_STARTING"),
  
  SOLVEREVENT_RUNNING_START("SOLVEREVENT_RUNNING_START"),
  
  SOLVER_RUNNING_START("SOLVER_RUNNING_START"),
  
  JOB_RUNNING_UNKNOWN("JOB_RUNNING_UNKNOWN"),
  
  SOLVEREVENT_PRINTED("SOLVEREVENT_PRINTED"),
  
  WORKEREVENT_DATA("WORKEREVENT_DATA"),
  
  JOB_RUNNING("JOB_RUNNING"),
  
  SOLVEREVENT_PROGRESS("SOLVEREVENT_PROGRESS"),
  
  WORKEREVENT_PROGRESS("WORKEREVENT_PROGRESS"),
  
  WORKEREVENT_WORKEREXIT_NORMAL("WORKEREVENT_WORKEREXIT_NORMAL"),
  
  WORKEREVENT_WORKEREXIT_ERROR("WORKEREVENT_WORKEREXIT_ERROR"),
  
  SOLVEREVENT_FINISHED("SOLVEREVENT_FINISHED"),
  
  SOLVER_FINISHED("SOLVER_FINISHED"),
  
  WORKEREVENT_COMPLETED("WORKEREVENT_COMPLETED"),
  
  JOB_COMPLETED("JOB_COMPLETED"),
  
  SOLVER_STOPPED("SOLVER_STOPPED"),
  
  JOB_STOPPED("JOB_STOPPED"),
  
  JOB_FAILED_UNKNOWN("JOB_FAILED_UNKNOWN"),
  
  SOLVER_ABORTED("SOLVER_ABORTED"),
  
  WORKEREVENT_FAILURE("WORKEREVENT_FAILURE"),
  
  JOB_FAILED("JOB_FAILED");

  private String value;

  DetailedState(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static DetailedState fromValue(String value) {
    for (DetailedState b : DetailedState.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    if (prefix == null) {
      prefix = "";
    }

    return String.format("%s=%s", prefix, this.toString());
  }

}

