/*
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.vcell.restclient.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.vcell.restclient.model.Domain;
import org.vcell.restclient.model.VariableType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * DataIdentifier
 */
@JsonPropertyOrder({
  DataIdentifier.JSON_PROPERTY_NAME,
  DataIdentifier.JSON_PROPERTY_DISPLAY_NAME,
  DataIdentifier.JSON_PROPERTY_VARIABLE_TYPE,
  DataIdentifier.JSON_PROPERTY_DOMAIN,
  DataIdentifier.JSON_PROPERTY_B_FUNCTION,
  DataIdentifier.JSON_PROPERTY_FUNCTION,
  DataIdentifier.JSON_PROPERTY_VISIBLE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DataIdentifier {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_VARIABLE_TYPE = "variableType";
  private VariableType variableType;

  public static final String JSON_PROPERTY_DOMAIN = "domain";
  private Domain domain;

  public static final String JSON_PROPERTY_B_FUNCTION = "bFunction";
  private Boolean bFunction;

  public static final String JSON_PROPERTY_FUNCTION = "function";
  private Boolean function;

  public static final String JSON_PROPERTY_VISIBLE = "visible";
  private Boolean visible;

  public DataIdentifier() { 
  }

  public DataIdentifier name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public DataIdentifier displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public DataIdentifier variableType(VariableType variableType) {
    this.variableType = variableType;
    return this;
  }

   /**
   * Get variableType
   * @return variableType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VARIABLE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VariableType getVariableType() {
    return variableType;
  }


  @JsonProperty(JSON_PROPERTY_VARIABLE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVariableType(VariableType variableType) {
    this.variableType = variableType;
  }


  public DataIdentifier domain(Domain domain) {
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Domain getDomain() {
    return domain;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomain(Domain domain) {
    this.domain = domain;
  }


  public DataIdentifier bFunction(Boolean bFunction) {
    this.bFunction = bFunction;
    return this;
  }

   /**
   * Get bFunction
   * @return bFunction
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_B_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getbFunction() {
    return bFunction;
  }


  @JsonProperty(JSON_PROPERTY_B_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setbFunction(Boolean bFunction) {
    this.bFunction = bFunction;
  }


  public DataIdentifier function(Boolean function) {
    this.function = function;
    return this;
  }

   /**
   * Get function
   * @return function
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFunction() {
    return function;
  }


  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFunction(Boolean function) {
    this.function = function;
  }


  public DataIdentifier visible(Boolean visible) {
    this.visible = visible;
    return this;
  }

   /**
   * Get visible
   * @return visible
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getVisible() {
    return visible;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisible(Boolean visible) {
    this.visible = visible;
  }


  /**
   * Return true if this DataIdentifier object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataIdentifier dataIdentifier = (DataIdentifier) o;
    return Objects.equals(this.name, dataIdentifier.name) &&
        Objects.equals(this.displayName, dataIdentifier.displayName) &&
        Objects.equals(this.variableType, dataIdentifier.variableType) &&
        Objects.equals(this.domain, dataIdentifier.domain) &&
        Objects.equals(this.bFunction, dataIdentifier.bFunction) &&
        Objects.equals(this.function, dataIdentifier.function) &&
        Objects.equals(this.visible, dataIdentifier.visible);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, displayName, variableType, domain, bFunction, function, visible);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataIdentifier {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    variableType: ").append(toIndentedString(variableType)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    bFunction: ").append(toIndentedString(bFunction)).append("\n");
    sb.append("    function: ").append(toIndentedString(function)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `displayName` to the URL query string
    if (getDisplayName() != null) {
      joiner.add(String.format("%sdisplayName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDisplayName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `variableType` to the URL query string
    if (getVariableType() != null) {
      joiner.add(getVariableType().toUrlQueryString(prefix + "variableType" + suffix));
    }

    // add `domain` to the URL query string
    if (getDomain() != null) {
      joiner.add(getDomain().toUrlQueryString(prefix + "domain" + suffix));
    }

    // add `bFunction` to the URL query string
    if (getbFunction() != null) {
      joiner.add(String.format("%sbFunction%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getbFunction()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `function` to the URL query string
    if (getFunction() != null) {
      joiner.add(String.format("%sfunction%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFunction()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `visible` to the URL query string
    if (getVisible() != null) {
      joiner.add(String.format("%svisible%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getVisible()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

