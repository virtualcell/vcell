# coding: utf-8

"""
    VCell API

    VCell API

    The version of the OpenAPI document: 1.0.1
    Contact: vcell_support@uchc.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from vcell_client.models.cartesian_mesh import CartesianMesh

class TestCartesianMesh(unittest.TestCase):
    """CartesianMesh unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CartesianMesh:
        """Test CartesianMesh
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CartesianMesh`
        """
        model = CartesianMesh()
        if include_optional:
            return CartesianMesh(
                compressed_bytes = bytes(b'blah'),
                u_cd_info = vcell_client.models.ucd_info.UCDInfo(
                    ucd_grid_nodes = [
                        [
                            [
                                vcell_client.models.coordinate.Coordinate(
                                    x = 1.337, 
                                    y = 1.337, 
                                    z = 1.337, )
                                ]
                            ]
                        ], 
                    ucd_membrane_quads = [
                        [
                            56
                            ]
                        ], 
                    reduced_ucd_grid_nodes_v = [
                        vcell_client.models.coordinate.Coordinate(
                            x = 1.337, 
                            y = 1.337, 
                            z = 1.337, )
                        ], 
                    u_cd_grid_nodes = [
                        [
                            [
                                
                                ]
                            ]
                        ], 
                    u_cd_membrane_quads = [
                        [
                            56
                            ]
                        ], 
                    num_volume_nodes_x = 56, 
                    num_volume_nodes_y = 56, 
                    num_volume_nodes_z = 56, 
                    num_points_xyz = 56, 
                    num_volume_nodes_xy = 56, 
                    num_volume_cells = 56, 
                    num_membrane_cells = 56, ),
                geometry_dimension = 56,
                volume_region_map_subvolume = {
                    'key' : 56
                    },
                membrane_region_map_subvolumes_in_out = {
                    'key' : null
                    },
                num_membrane_elements = 56,
                num_membrane_regions = 56,
                num_volume_elements = 56,
                num_volume_regions = 56,
                i_size = vcell_client.models.i_size.ISize(
                    x = 56, 
                    y = 56, 
                    z = 56, 
                    x_yz = 56, ),
                size_x = 56,
                size_y = 56,
                size_z = 56,
                membrane_connectivity_ok = True,
                output_fields = [
                    null
                    ],
                chombo_mesh = True
            )
        else:
            return CartesianMesh(
        )
        """

    def testCartesianMesh(self):
        """Test CartesianMesh"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
