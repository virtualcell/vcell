# coding: utf-8

"""
    VCell API

    VCell API

    The version of the OpenAPI document: 1.0.1
    Contact: vcell_support@uchc.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from vcell_client.models.save_field_data_from_file import SaveFieldDataFromFile

class TestSaveFieldDataFromFile(unittest.TestCase):
    """SaveFieldDataFromFile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SaveFieldDataFromFile:
        """Test SaveFieldDataFromFile
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SaveFieldDataFromFile`
        """
        model = SaveFieldDataFromFile()
        if include_optional:
            return SaveFieldDataFromFile(
                short_spec_data = [
                    [
                        [
                            56
                            ]
                        ]
                    ],
                spec_edi = vcell_client.models.external_data_identifier.ExternalDataIdentifier(
                    key = vcell_client.models.key_value.KeyValue(
                        value = 1.337, ), 
                    owner = vcell_client.models.user.User(
                        user_name = '', 
                        i_d = vcell_client.models.key_value.KeyValue(
                            value = 1.337, ), 
                        name = '', 
                        test_account = True, ), 
                    name = '', 
                    i_d = '', 
                    job_index = 56, 
                    simulation_key = , 
                    parameter_scan_type = True, 
                    data_key = , ),
                var_names = [
                    ''
                    ],
                variable_types = [
                    vcell_client.models.variable_type.VariableType(
                        type = 56, 
                        variable_domain = 'VARIABLEDOMAIN_POSTPROCESSING', 
                        name = '', 
                        units = '', 
                        label = '', 
                        legacy_warn = True, 
                        default_label = '', 
                        default_units = '', 
                        type_name = '', )
                    ],
                times = [
                    1.337
                    ],
                origin = vcell_client.models.origin.Origin(
                    x = 1.337, 
                    y = 1.337, 
                    z = 1.337, ),
                extent = vcell_client.models.extent.Extent(
                    x = 1.337, 
                    y = 1.337, 
                    z = 1.337, ),
                isize = vcell_client.models.i_size.ISize(
                    x = 56, 
                    y = 56, 
                    z = 56, 
                    x_yz = 56, ),
                annotation = ''
            )
        else:
            return SaveFieldDataFromFile(
        )
        """

    def testSaveFieldDataFromFile(self):
        """Test SaveFieldDataFromFile"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
