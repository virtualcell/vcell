# coding: utf-8

"""
    VCell API

    VCell API

    The version of the OpenAPI document: 1.0.1
    Contact: vcell_support@uchc.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from vcell_client.models.field_data_references import FieldDataReferences

class TestFieldDataReferences(unittest.TestCase):
    """FieldDataReferences unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FieldDataReferences:
        """Test FieldDataReferences
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FieldDataReferences`
        """
        model = FieldDataReferences()
        if include_optional:
            return FieldDataReferences(
                external_data_identifiers = [
                    vcell_client.models.external_data_identifier.ExternalDataIdentifier(
                        key = vcell_client.models.key_value.KeyValue(
                            value = 1.337, ), 
                        owner = vcell_client.models.user.User(
                            user_name = '', 
                            i_d = vcell_client.models.key_value.KeyValue(
                                value = 1.337, ), 
                            name = '', 
                            test_account = True, ), 
                        name = '', 
                        i_d = '', 
                        job_index = 56, 
                        simulation_key = , 
                        parameter_scan_type = True, 
                        data_key = , )
                    ],
                external_data_annotations = [
                    ''
                    ],
                external_data_id_sim_refs = {
                    'key' : [
                        vcell_client.models.key_value.KeyValue(
                            value = 1.337, )
                        ]
                    }
            )
        else:
            return FieldDataReferences(
        )
        """

    def testFieldDataReferences(self):
        """Test FieldDataReferences"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
