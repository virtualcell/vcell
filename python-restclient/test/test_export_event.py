# coding: utf-8

"""
    VCell API

    VCell API

    The version of the OpenAPI document: 1.0.1
    Contact: vcell_support@uchc.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from vcell_client.models.export_event import ExportEvent

class TestExportEvent(unittest.TestCase):
    """ExportEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExportEvent:
        """Test ExportEvent
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExportEvent`
        """
        model = ExportEvent()
        if include_optional:
            return ExportEvent(
                event_type = 'EXPORT_START',
                progress = 1.337,
                format = '',
                location = '',
                user = vcell_client.models.user.User(
                    user_name = '', 
                    key = '', 
                    my_specials = [
                        'admins'
                        ], ),
                job_id = 56,
                data_key = '',
                data_id_string = '',
                time_specs = vcell_client.models.time_specs.TimeSpecs(
                    begin_time_index = 56, 
                    end_time_index = 56, 
                    all_times = [
                        1.337
                        ], 
                    mode = 'TIME_POINT', ),
                variable_specs = vcell_client.models.variable_specs.VariableSpecs(
                    variable_names = [
                        ''
                        ], 
                    mode = 'VARIABLE_ONE', ),
                human_readable_data = vcell_client.models.human_readable_export_data.HumanReadableExportData(
                    simulation_name = '', 
                    biomodel_name = '', 
                    application_name = '', 
                    different_parameter_values = [
                        ''
                        ], 
                    application_type = '', 
                    server_saved_file_name = '', 
                    non_spatial = True, 
                    sub_volume = {
                        'key' : ''
                        }, 
                    z_slices = 56, 
                    t_slices = 56, 
                    num_channels = 56, )
            )
        else:
            return ExportEvent(
        )
        """

    def testExportEvent(self):
        """Test ExportEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
