# coding: utf-8

"""
    VCell API

    VCell API

    The version of the OpenAPI document: 1.0.1
    Contact: vcell_support@uchc.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from vcell_client.models.curve_selection_info import CurveSelectionInfo

class TestCurveSelectionInfo(unittest.TestCase):
    """CurveSelectionInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CurveSelectionInfo:
        """Test CurveSelectionInfo
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CurveSelectionInfo`
        """
        model = CurveSelectionInfo()
        if include_optional:
            return CurveSelectionInfo(
                field_curve = vcell_client.models.curve.Curve(
                    b_closed = True, 
                    description = '', 
                    type = '', 
                    beginning_coordinate = vcell_client.models.coordinate.Coordinate(
                        x = 1.337, 
                        y = 1.337, 
                        z = 1.337, ), 
                    default_num_samples = 56, 
                    ending_coordinate = vcell_client.models.coordinate.Coordinate(
                        x = 1.337, 
                        y = 1.337, 
                        z = 1.337, ), 
                    num_sample_points = 56, 
                    segment_count = 56, 
                    spatial_length = 1.337, 
                    closed = True, 
                    valid = True, ),
                field_type = 56,
                field_control_point = 56,
                field_segment = 56,
                field_u = 1.337,
                field_u_extended = 1.337,
                field_control_point_extended = 56,
                field_segment_extended = 56,
                field_direction_negative = True,
                crossing = True
            )
        else:
            return CurveSelectionInfo(
        )
        """

    def testCurveSelectionInfo(self):
        """Test CurveSelectionInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
