# coding: utf-8

"""
    VCell API

    VCell API

    The version of the OpenAPI document: 1.0.1
    Contact: vcell_support@uchc.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from vcell_client.models.field_data_file_operation_results import FieldDataFileOperationResults

class TestFieldDataFileOperationResults(unittest.TestCase):
    """FieldDataFileOperationResults unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FieldDataFileOperationResults:
        """Test FieldDataFileOperationResults
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FieldDataFileOperationResults`
        """
        model = FieldDataFileOperationResults()
        if include_optional:
            return FieldDataFileOperationResults(
                data_identifier_arr = [
                    vcell_client.models.data_identifier.DataIdentifier(
                        name = '', 
                        display_name = '', 
                        variable_type = vcell_client.models.variable_type.VariableType(
                            type = 56, 
                            variable_domain = 'VARIABLEDOMAIN_POSTPROCESSING', 
                            name = '', 
                            units = '', 
                            label = '', 
                            legacy_warn = True, 
                            default_label = '', 
                            default_units = '', 
                            type_name = '', ), 
                        domain = vcell_client.models.domain.Domain(
                            name = '', ), 
                        b_function = True, 
                        function = True, 
                        visible = True, )
                    ],
                i_size = vcell_client.models.i_size.ISize(
                    x = 56, 
                    y = 56, 
                    z = 56, 
                    x_yz = 56, ),
                origin = vcell_client.models.origin.Origin(
                    x = 1.337, 
                    y = 1.337, 
                    z = 1.337, ),
                extent = vcell_client.models.extent.Extent(
                    x = 1.337, 
                    y = 1.337, 
                    z = 1.337, ),
                times = [
                    1.337
                    ],
                dependant_function_info = [
                    vcell_client.models.field_data_reference_info.FieldDataReferenceInfo(
                        reference_source_type = '', 
                        reference_source_name = '', 
                        application_name = '', 
                        simulation_name = '', 
                        ref_source_version_date = '', 
                        func_names = [
                            ''
                            ], 
                        ref_source_version_key = vcell_client.models.key_value.KeyValue(
                            value = 1.337, ), )
                    ]
            )
        else:
            return FieldDataFileOperationResults(
        )
        """

    def testFieldDataFileOperationResults(self):
        """Test FieldDataFileOperationResults"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
