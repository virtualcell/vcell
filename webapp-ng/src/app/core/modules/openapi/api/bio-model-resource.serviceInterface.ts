/**
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { BioModel } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface BioModelResourceServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Save the BioModel while also specifying which simulations within the BioModel need to be updated due to mathematical changes. Returns saved BioModel as VCML.
     * 
     * @param bioModelXML 
     * @param name 
     * @param simsRequiringUpdates 
     */
    advancedSaveAsBioModel(bioModelXML?: string, name?: string, simsRequiringUpdates?: Array<string>, extraHttpRequestParams?: any): Observable<string>;

    /**
     * Save the BioModel while also specifying which simulations within the BioModel need to be updated due to mathematical changes. Returns saved BioModel as VCML.
     * 
     * @param bioModelXML 
     * @param simsRequiringUpdates 
     */
    advancedSaveBioModel(bioModelXML?: string, simsRequiringUpdates?: Array<string>, extraHttpRequestParams?: any): Observable<string>;

    /**
     * Delete the BioModel from VCell\&#39;s database.
     * 
     * @param bioModelID 
     */
    deleteBioModel(bioModelID: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Get BioModel.
     * 
     * @param bioModelID 
     */
    getBioModel(bioModelID: string, extraHttpRequestParams?: any): Observable<BioModel>;

    /**
     * Get the BioModel in VCML format.
     * 
     * @param bioModelID 
     */
    getBioModelVCML(bioModelID: string, extraHttpRequestParams?: any): Observable<string>;

    /**
     * Save the BioModel, returning saved BioModel as VCML.
     * 
     * @param body 
     */
    saveBioModel(body?: string, extraHttpRequestParams?: any): Observable<string>;

    /**
     * Save as a new BioModel under the name given. Returns saved BioModel as VCML.
     * 
     * @param bioModelXML 
     * @param name 
     */
    saveBioModelAs(bioModelXML?: string, name?: string, extraHttpRequestParams?: any): Observable<string>;

}
