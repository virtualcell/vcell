/**
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AccesTokenRepresentationRecord } from '../model/models';
import { Identity } from '../model/models';
import { UserIdentityJSONSafe } from '../model/models';
import { UserLoginInfoForMapping } from '../model/models';
import { UserRegistrationInfo } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface UsersResourceServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Get token for legacy API
     * 
     */
    getLegacyApiToken(extraHttpRequestParams?: any): Observable<AccesTokenRepresentationRecord>;

    /**
     * Get mapped VCell identity
     * 
     */
    getMappedUser(extraHttpRequestParams?: any): Observable<UserIdentityJSONSafe>;

    /**
     * Get current user
     * 
     */
    getMe(extraHttpRequestParams?: any): Observable<Identity>;

    /**
     * create vcell user
     * 
     * @param userRegistrationInfo 
     */
    mapNewUser(userRegistrationInfo?: UserRegistrationInfo, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * map vcell user
     * 
     * @param userLoginInfoForMapping 
     */
    mapUser(userLoginInfoForMapping?: UserLoginInfoForMapping, extraHttpRequestParams?: any): Observable<boolean>;

    /**
     * remove vcell identity mapping
     * 
     * @param userName 
     */
    unmapUser(userName: string, extraHttpRequestParams?: any): Observable<boolean>;

}
