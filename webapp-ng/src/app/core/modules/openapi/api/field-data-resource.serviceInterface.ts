/**
 * VCell API
 * VCell API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: vcell_support@uchc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AnalyzedResultsFromFieldData } from '../model/models';
import { ExternalDataIdentifier } from '../model/models';
import { FieldDataDBOperationSpec } from '../model/models';
import { FieldDataFileOperationSpec } from '../model/models';
import { FieldDataInfo } from '../model/models';
import { FieldDataNoCopyConflict } from '../model/models';
import { FieldDataReferences } from '../model/models';
import { FieldDataSaveResults } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface FieldDataResourceServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Copy an existing field data entry.
     * 
     * @param fieldDataDBOperationSpec 
     */
    copyFieldData(fieldDataDBOperationSpec?: FieldDataDBOperationSpec, extraHttpRequestParams?: any): Observable<FieldDataNoCopyConflict>;

    /**
     * 
     * 
     * @param analyzedResultsFromFieldData 
     */
    createNewFieldDataFromFileAlreadyAnalyzed(analyzedResultsFromFieldData?: AnalyzedResultsFromFieldData, extraHttpRequestParams?: any): Observable<FieldDataSaveResults>;

    /**
     * Create new field data from a simulation.
     * 
     * @param fieldDataDBOperationSpec 
     */
    createNewFieldDataFromSimulation(fieldDataDBOperationSpec?: FieldDataDBOperationSpec, extraHttpRequestParams?: any): Observable<ExternalDataIdentifier>;

    /**
     * Delete the selected field data.
     * 
     * @param body 
     */
    deleteFieldData(body?: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param file 
     * @param fileName 
     */
    generateFieldDataEstimate(file?: Blob, fileName?: string, extraHttpRequestParams?: any): Observable<FieldDataFileOperationSpec>;

    /**
     * Get all of the ids used to identify, and retrieve field data.
     * 
     */
    getAllFieldDataIDs(extraHttpRequestParams?: any): Observable<FieldDataReferences>;

    /**
     * Get the field data from the selected field data ID.
     * 
     * @param body 
     */
    getFieldDataFromID(body?: string, extraHttpRequestParams?: any): Observable<FieldDataInfo>;

}
